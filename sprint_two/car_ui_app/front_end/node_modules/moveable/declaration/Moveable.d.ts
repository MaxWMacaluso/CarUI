import EgComponent from "@egjs/component";
import { MoveableInterface, MoveableOptions, MoveableProperties } from "react-moveable/declaration/types";
import { MoveableEventsParameters } from "./types";
declare class Moveable extends EgComponent {
    private innerMoveable;
    private tempElement;
    constructor(parentElement: HTMLElement | SVGElement, options?: MoveableOptions);
    setState(state: Partial<MoveableOptions>, callback?: () => any): void;
    destroy(): void;
    private getMoveable;
}
interface Moveable extends MoveableProperties, MoveableInterface {
    on<T extends keyof MoveableEventsParameters>(eventName: T, handlerToAttach: (event: MoveableEventsParameters[T]) => any): this;
    on(eventName: string, handlerToAttach: (event: {
        [key: string]: any;
    }) => any): this;
    on(events: {
        [key: string]: (event: {
            [key: string]: any;
        }) => any;
    }): this;
}
export default Moveable;
