{"version":3,"file":"styled.esm.js","sources":["../src/react-css-styled/StyledElement.tsx","../src/react-css-styled/styled.tsx"],"sourcesContent":["import { Component, createElement } from \"react\";\nimport { IObject } from \"@daybrush/utils\";\nimport { StyledInjector, InjectResult } from \"css-styled\";\nimport { ref } from \"framework-utils\";\n\nexport class StyledElement<T extends HTMLElement | SVGElement = HTMLElement> extends Component<IObject<any>> {\n    public injector!: StyledInjector;\n    public element!: T;\n    public injectResult: InjectResult | null = null;\n    public tag: string = \"div\";\n    public render(): any {\n        const {\n            className = \"\",\n            cspNonce,\n            ...attributes\n        } = this.props;\n        const cssId = this.injector!.className;\n        const Tag = this.tag;\n        return createElement(Tag, {\n            \"ref\": ref(this, \"element\"),\n            \"data-styled-id\": cssId,\n            \"className\": `${className} ${cssId}`,\n            ...attributes,\n        });\n    }\n    public componentDidMount() {\n        this.injectResult = this.injector!.inject(this.element!, {\n            nonce: this.props.cspNonce,\n        });\n    }\n    public componentWillUnmount() {\n        this.injectResult!.destroy();\n        this.injectResult = null;\n    }\n    public getElement() {\n        return this.element;\n    }\n}\n","import cssStyled from \"css-styled\";\nimport { StyledElement } from \"./StyledElement\";\n\nexport default function styled<T extends HTMLElement | SVGElement = HTMLElement>(\n    tag: string, css: string): typeof StyledElement & (new (...args: any[]) => StyledElement<T>) {\n    const injector = cssStyled(css);\n\n    return class Styled extends StyledElement<T> {\n        public injector = injector;\n        public tag = tag;\n    };\n}\n"],"names":["tslib_1","_this","_a","_b","className","cspNonce","attributes","cssId","injector","Tag","tag","createElement","ref","injectResult","inject","element","nonce","props","destroy","Component","styled","css","cssStyled","StyledElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAKqFA,SAAA,cAAA,QAAA;;wBAArF;wEAAA;;IAGWC,kBAAA,GAAoC,IAApC;IACAA,SAAA,GAAc,KAAd;;;;;;gBACA,GAAP;QACUC,eAAN;QACIC,iBADJ;QACIC,mCADJ;QAEIC,sBAFJ;QAGIC,kDAHJ;;QAKMC,KAAK,GAAG,KAAKC,QAAL,CAAeJ,SAA7B;QACMK,GAAG,GAAG,KAAKC,GAAjB;WACOC,aAAa,CAACF,GAAD;aACTG,GAAG,CAAC,IAAD,EAAO,SAAP;wBACQL;mBACFH,SAAS,MAAT,GAAaG;OAC1BD,WAJa,CAApB;GARG;;2BAeA,GAAP;SACSO,YAAL,GAAoB,KAAKL,QAAL,CAAeM,MAAf,CAAsB,KAAKC,OAA3B,EAAqC;MACrDC,KAAK,EAAE,KAAKC,KAAL,CAAWZ;KADF,CAApB;GADG;;8BAKA,GAAP;SACSQ,YAAL,CAAmBK,OAAnB;SACKL,YAAL,GAAoB,IAApB;GAFG;;oBAIA,GAAP;WACW,KAAKE,OAAZ;GADG;;sBAGX;EAhCqFI,UAArF;;SCFwBC,OACpBV,KAAaW;MACPb,QAAQ,GAAGc,SAAS,CAACD,GAAD,CAA1B;;;;MAE4BrB,SAAA,OAAA,QAAA;;qBAArB;4EAAA;;QACIC,cAAA,GAAWO,QAAX;QACAP,SAAA,GAAMS,GAAN;;;;mBACX;MAH4Ba;;;;;;;"}