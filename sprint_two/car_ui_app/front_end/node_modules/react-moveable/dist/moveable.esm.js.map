{"version":3,"file":"moveable.esm.js","sources":["../src/react-moveable/consts.ts","../src/react-moveable/matrix/index.ts","../src/react-moveable/utils.ts","../src/react-moveable/ables/Pinchable.ts","../src/react-moveable/gesto/CustomGesto.ts","../src/react-moveable/groupUtils.ts","../src/react-moveable/gesto/GestoUtils.ts","../src/react-moveable/ables/snappable/snap.ts","../src/react-moveable/ables/snappable/innerBounds.ts","../src/react-moveable/ables/snappable/bounds.ts","../src/react-moveable/ables/Snappable.tsx","../src/react-moveable/ables/Draggable.tsx","../src/react-moveable/ables/Rotatable.tsx","../src/react-moveable/renderDirection.tsx","../src/react-moveable/ables/Resizable.ts","../src/react-moveable/ables/Scalable.ts","../src/react-moveable/ables/Warpable.tsx","../src/react-moveable/classNames.ts","../src/react-moveable/ables/DragArea.tsx","../src/react-moveable/ables/Origin.tsx","../src/react-moveable/ables/Scrollable.ts","../src/react-moveable/ables/Default.ts","../src/react-moveable/ables/Padding.tsx","../src/react-moveable/ables/roundable/borderRadius.tsx","../src/react-moveable/ables/Clippable.tsx","../src/react-moveable/ables/OriginDraggable.tsx","../src/react-moveable/ables/Roundable.tsx","../src/react-moveable/ables/BeforeRenderable.ts","../src/react-moveable/ables/Renderable.ts","../src/react-moveable/gesto/getAbleGesto.ts","../src/react-moveable/MoveableManager.tsx","../src/react-moveable/ables/Groupable.tsx","../src/react-moveable/ables/Clickable.ts","../src/react-moveable/ables/consts.ts","../src/react-moveable/MoveableGroup.tsx","../src/react-moveable/InitialMoveable.tsx","../src/react-moveable/Moveable.tsx","../src/react-moveable/makeMoveable.ts"],"sourcesContent":["import getAgent from \"@egjs/agent\";\nimport { IObject } from \"@daybrush/utils\";\nimport { MoveableInterface } from \"./types\";\n\nfunction getSVGCursor(scale: number, degree: number) {\n    return `data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${32 * scale}px\" height=\"${32 * scale}px\" viewBox=\"0 0 32 32\" ><path d=\"M 16,5 L 12,10 L 14.5,10 L 14.5,22 L 12,22 L 16,27 L 20,22 L 17.5,22 L 17.5,10 L 20, 10 L 16,5 Z\" stroke-linejoin=\"round\" stroke-width=\"1.2\" fill=\"black\" stroke=\"white\" style=\"transform:rotate(${degree}deg);transform-origin: 16px 16px\"></path></svg>`;\n}\nfunction getCursorCSS(degree: number) {\n    const x1 = getSVGCursor(1, degree);\n    const x2 = getSVGCursor(2, degree);\n    const degree45 = (Math.round(degree / 45) * 45) % 180;\n    const defaultCursor\n        = degree45 === 135\n        ? \"nwse-resize\"\n        : degree45 === 45\n        ? \"nesw-resize\"\n        : degree45 === 90\n        ? \"ew-resize\"\n        : \"ns-resize\"; // 135\n\n    // tslint:disable-next-line: max-line-length\n    return `cursor:${defaultCursor};cursor: url('${x1}') 16 16, ${defaultCursor};cursor: -webkit-image-set(url('${x1}') 1x, url('${x2}') 2x) 16 16, ${defaultCursor};`;\n}\n\nexport const agent = getAgent();\nexport const IS_WEBKIT = agent.browser.webkit;\n\nexport const PREFIX = \"moveable-\";\nexport const MOVEABLE_CSS = `\n{\n\tposition: fixed;\n\twidth: 1px;\n\theight: 1px;\n\tleft: 0;\n\ttop: 0;\n    z-index: 3000;\n    --zoom: 1;\n    --zoompx: 1px;\n}\n.control-box {\n    z-index: 0;\n}\n.line, .control {\n\tleft: 0;\n    top: 0;\n    will-change: transform;\n}\n.control {\n\tposition: absolute;\n\twidth: 14px;\n\theight: 14px;\n\tborder-radius: 50%;\n\tborder: 2px solid #fff;\n\tbox-sizing: border-box;\n\tbackground: #4af;\n\tmargin-top: -7px;\n    margin-left: -7px;\n    width: calc(14 * var(--zoompx));\n    height: calc(14 * var(--zoompx));\n    margin-top: calc(-7 * var(--zoompx));\n    margin-left: calc(-7 * var(--zoompx));\n    border: calc(2 * var(--zoompx)) solid #fff;\n    z-index: 10;\n}\n.padding {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100px;\n    height: 100px;\n    transform-origin: 0 0;\n}\n.line {\n\tposition: absolute;\n\twidth: 1px;\n    height: 1px;\n    width: var(--zoompx);\n    height: var(--zoompx);\n\tbackground: #4af;\n\ttransform-origin: 0px 50%;\n}\n.line.dashed {\n    box-sizing: border-box;\n    background: transparent;\n}\n.line.dashed.horizontal {\n    border-top: 1px dashed #4af;\n    border-top: var(--zoompx) dashed #4af;\n}\n.line.dashed.vertical {\n    border-left: 1px dashed #4af;\n    border-left: var(--zoompx) dashed #4af;\n}\n.line.dashed:before {\n    position: absolute;\n    content: attr(data-size);\n    color: #4af;\n    font-size: 12px;\n    font-weight: bold;\n}\n.line.dashed.horizontal:before, .line.gap.horizontal:before {\n    left: 50%;\n    transform: translateX(-50%);\n    bottom: 5px;\n}\n.line.dashed.vertical:before, .line.gap.vertical:before {\n    top: 50%;\n    transform: translateY(-50%);\n    left: 5px;\n}\n.line.rotation-line {\n\theight: 40px;\n    width: 1px;\n    transform-origin: 50% calc(100% - 0.5px);\n    top: -40px;\n    width: var(--zoompx);\n    height: calc(40 * var(--zoompx));\n    top: calc(-40 * var(--zoompx));\n    transform-origin: 50% calc(100% - 0.5 * var(--zoompx));\n}\n.line.rotation-line .control {\n\tborder-color: #4af;\n\tbackground:#fff;\n    cursor: alias;\n    left: 50%;\n}\n.line.vertical {\n    transform: translateX(-50%);\n}\n.line.horizontal {\n    transform: translateY(-50%);\n}\n.line.vertical.bold {\n    width: 2px;\n    width: calc(2 * var(--zoompx));\n}\n.line.horizontal.bold {\n    height: 2px;\n    height: calc(2 * var(--zoompx));\n}\n\n.line.gap {\n    background: #f55;\n}\n.line.gap:before {\n    position: absolute;\n    content: attr(data-size);\n    color: #f55;\n    font-size: 12px;\n    font-weight: bold;\n}\n.control.origin {\n\tborder-color: #f55;\n\tbackground: #fff;\n\twidth: 12px;\n\theight: 12px;\n\tmargin-top: -6px;\n    margin-left: -6px;\n    width: calc(12 * var(--zoompx));\n    height: calc(12 * var(--zoompx));\n    margin-top: calc(-6 * var(--zoompx));\n    margin-left: calc(-6 * var(--zoompx));\n\tpointer-events: none;\n}\n${[0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165].map(degree => `\n.direction[data-rotation=\"${degree}\"] {\n\t${getCursorCSS(degree)}\n}\n`).join(\"\\n\")}\n.group {\n    z-index: -1;\n}\n.area {\n    position: absolute;\n}\n.area-pieces {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: none;\n}\n.area.avoid, .area.pass {\n    pointer-events: none;\n}\n.area.avoid+.area-pieces {\n    display: block;\n}\n.area-piece {\n    position: absolute;\n}\n\n${IS_WEBKIT ? `:global svg *:before {\n\tcontent:\"\";\n\ttransform-origin: inherit;\n}` : \"\"}\n`;\nexport const DRAGGER_EVENTS = [\"dragstart\", \"drag\", \"dragend\", \"pinchstart\", \"pinch\", \"pinchend\"];\n\nexport const NEARBY_POS = [\n    [0, 1, 2],\n    [1, 0, 3],\n    [2, 0, 3],\n    [3, 1, 2],\n];\n\nexport const TINY_NUM = 0.0000001;\nexport const MIN_SCALE = 0.000000001;\nexport const MAX_NUM = Math.pow(10, 10);\nexport const MIN_NUM = -MAX_NUM;\n\nexport const DIRECTIONS = [\"nw\", \"ne\", \"sw\", \"se\", \"n\", \"w\", \"s\", \"e\"];\n\nexport const DIRECTION_INDEXES: IObject<number[]> = {\n    n: [0, 1],\n    s: [2, 3],\n    w: [2, 0],\n    e: [1, 3],\n    nw: [0],\n    ne: [1],\n    sw: [2],\n    se: [3],\n};\nexport const DIRECTION_ROTATIONS: IObject<number> = {\n    n: 0,\n    s: 180,\n    w: 270,\n    e: 90,\n    nw: 315,\n    ne: 45,\n    sw: 225,\n    se: 135,\n};\n\nexport const MOVEABLE_METHODS: Array<keyof MoveableInterface> = [\n    \"isMoveableElement\",\n    \"updateRect\",\n    \"updateTarget\",\n    \"destroy\",\n    \"dragStart\",\n    \"isInside\",\n    \"hitTest\",\n    \"setState\",\n    \"getRect\",\n    \"request\",\n    \"isDragging\",\n];\n","function add(\n    matrix: number[],\n    inverseMatrix: number[],\n    startIndex: number,\n    fromIndex: number,\n    n: number,\n    k: number,\n) {\n    for (let i = 0; i < n; ++i) {\n        const x = startIndex + i * n;\n        const fromX = fromIndex + i * n;\n        matrix[x] += matrix[fromX] * k;\n        inverseMatrix[x] += inverseMatrix[fromX] * k;\n    }\n}\n\nfunction swap(\n    matrix: number[],\n    inverseMatrix: number[],\n    startIndex: number,\n    fromIndex: number,\n    n: number,\n) {\n    for (let i = 0; i < n; ++i) {\n        const x = startIndex + i * n;\n        const fromX = fromIndex + i * n;\n        const v = matrix[x];\n        const iv = inverseMatrix[x];\n\n        matrix[x] = matrix[fromX];\n        matrix[fromX] = v;\n\n        inverseMatrix[x] = inverseMatrix[fromX];\n        inverseMatrix[fromX] = iv;\n    }\n}\n\nfunction divide(\n    matrix: number[],\n    inverseMatrix: number[],\n    startIndex: number,\n    n: number,\n    k: number,\n) {\n    for (let i = 0; i < n; ++i) {\n        const x = startIndex + i * n;\n\n        matrix[x] /= k;\n        inverseMatrix[x] /= k;\n    }\n}\n\nexport function ignoreDimension(\n    matrix: number[],\n    m: number,\n    n: number = Math.sqrt(matrix.length),\n) {\n    const newMatrix = matrix.slice();\n\n    for (let i = 0; i < n; ++i) {\n        newMatrix[i * n + m - 1] = 0;\n        newMatrix[(m - 1) * n + i] = 0;\n    }\n    newMatrix[(m - 1) * (n + 1)] = 1;\n\n    return newMatrix;\n}\n\nexport function invert(\n    matrix: number[],\n    n: number = Math.sqrt(matrix.length),\n) {\n    const newMatrix = matrix.slice();\n    const inverseMatrix = createIdentityMatrix(n);\n\n    for (let i = 0; i < n; ++i) {\n        // diagonal\n        const identityIndex = n * i + i;\n\n        if (newMatrix[identityIndex] === 0) {\n            for (let j = i + 1; j < n; ++j) {\n                if (newMatrix[n * i + j]) {\n                    swap(newMatrix, inverseMatrix, i, j, n);\n                    break;\n                }\n            }\n        }\n        if (newMatrix[identityIndex]) {\n            divide(newMatrix, inverseMatrix, i, n, newMatrix[identityIndex]);\n        } else {\n            // no inverse matrix\n            return [];\n        }\n        for (let j = 0; j < n; ++j) {\n            const targetStartIndex = j;\n            const targetIndex = j + i * n;\n            const target = newMatrix[targetIndex];\n\n            if (target === 0 || i === j) {\n                continue;\n            }\n            add(newMatrix, inverseMatrix, targetStartIndex, i, n, -target);\n        }\n    }\n\n    return inverseMatrix;\n}\n\nexport function transpose(matrix: number[], n: number = Math.sqrt(matrix.length)) {\n    const newMatrix: number[] = [];\n\n    for (let i = 0; i < n; ++i) {\n        for (let j = 0; j < n; ++j) {\n            newMatrix[j * n + i] = matrix[n * i + j];\n        }\n    }\n    return newMatrix;\n}\n\nexport function getRad(pos1: number[], pos2: number[]) {\n    const distX = pos2[0] - pos1[0];\n    const distY = pos2[1] - pos1[1];\n    const rad = Math.atan2(distY, distX);\n\n    return rad >= 0 ? rad : rad + Math.PI * 2;\n}\n\nexport function getOrigin(matrix: number[], n: number = Math.sqrt(matrix.length)) {\n    const originMatrix: number[] = [];\n    const w = matrix[n * n - 1];\n    for (let i = 0; i < n - 1; ++i) {\n        originMatrix[i] = matrix[n * (n - 1) + i] / w;\n    }\n    originMatrix[n - 1] = 0;\n    return originMatrix;\n}\n\nexport function fromTranslation(pos: number[], n: number) {\n    const newMatrix = createIdentityMatrix(n);\n\n    for (let i = 0; i < n - 1; ++i) {\n        newMatrix[n * (n - 1) + i] = pos[i] || 0;\n    }\n    return newMatrix;\n}\nexport function convertPositionMatrix(matrix: number[], n: number) {\n    const newMatrix = matrix.slice();\n\n    for (let i = matrix.length; i < n - 1; ++i) {\n        newMatrix[i] = 0;\n    }\n    newMatrix[n - 1] = 1;\n    return newMatrix;\n}\n\nexport function convertDimension(matrix: number[], n: number = Math.sqrt(matrix.length), m: number) {\n    // n < m\n    if (n === m) {\n        return matrix;\n    }\n    const newMatrix = createIdentityMatrix(m);\n\n    const length = Math.min(n, m);\n    for (let i = 0; i < length - 1; ++i) {\n        for (let j = 0; j < length - 1; ++j) {\n            newMatrix[i * m + j] = matrix[i * n + j];\n        }\n\n        newMatrix[(i + 1) * m - 1] = matrix[(i + 1) * n - 1];\n        newMatrix[(m - 1) * m + i] = matrix[(n - 1) * n + i];\n    }\n    newMatrix[m * m - 1] = matrix[n * n - 1];\n\n    return newMatrix;\n}\n\nexport function multiplies(n: number, ...matrixes: number[][]) {\n    let m: number[] = createIdentityMatrix(n);\n\n    matrixes.forEach(matrix => {\n        m = multiply(m, matrix, n);\n    });\n    return m;\n}\n\nexport function multiply(matrix: number[], matrix2: number[], n: number = Math.sqrt(matrix.length)) {\n    const newMatrix: number[] = [];\n    // 1 y: n\n    // 1 x: m\n    // 2 x: m\n    // 2 y: k\n    // n * m X m * k\n    const m = matrix.length / n;\n    const k = matrix2.length / m;\n\n    if (!m) {\n        return matrix2;\n    } else if (!k) {\n        return matrix;\n    }\n    for (let i = 0; i < n; ++i) {\n        for (let j = 0; j < k; ++j) {\n            newMatrix[j * n + i] = 0;\n            for (let l = 0; l < m; ++l) {\n                // m1 x: m(l), y: n(i)\n                // m2 x: k(j):  y: m(l)\n                // nw x: n(i), y: k(j)\n                newMatrix[j * n + i] += matrix[l * n + i] * matrix2[j * m + l];\n            }\n        }\n    }\n    // n * k\n    return newMatrix;\n}\n\nexport function sum(...nums: number[]) {\n    const length = nums.length;\n    let total = 0;\n\n    for (let i = length - 1; i >= 0; --i) {\n        total += nums[i];\n    }\n    return total;\n}\nexport function average(...nums: number[]) {\n    const length = nums.length;\n    let total = 0;\n\n    for (let i = length - 1; i >= 0; --i) {\n        total += nums[i];\n    }\n    return length ? total / length : 0;\n}\nexport function plus(pos1: number[], pos2: number[]) {\n    const length = Math.min(pos1.length, pos2.length);\n    const nextPos = pos1.slice();\n\n    for (let i = 0; i < length; ++i) {\n        nextPos[i] = nextPos[i] + pos2[i];\n    }\n    return nextPos;\n}\n\nexport function minus(pos1: number[], pos2: number[]) {\n    const length = Math.min(pos1.length, pos2.length);\n    const nextPos = pos1.slice();\n\n    for (let i = 0; i < length; ++i) {\n        nextPos[i] = nextPos[i] - pos2[i];\n    }\n    return nextPos;\n}\n\nexport function convertCSStoMatrix(a: number[], is2d: boolean = a.length === 6) {\n    if (is2d) {\n        return [\n            a[0], a[1], 0,\n            a[2], a[3], 0,\n            a[4], a[5], 1,\n        ];\n    }\n    return a;\n}\nexport function convertMatrixtoCSS(a: number[], is2d: boolean = a.length === 9) {\n    if (is2d) {\n        return [\n            a[0], a[1],\n            a[3], a[4],\n            a[6], a[7],\n        ];\n    }\n    return a;\n}\n\nexport function caculate(matrix: number[], matrix2: number[], n: number = matrix2.length) {\n    const result = multiply(matrix, matrix2, n);\n    const k = result[n - 1];\n    return result.map(v => v / k);\n}\n\nexport function rotate(pos: number[], rad: number) {\n    return caculate(\n        createRotateMatrix(rad, 3),\n        convertPositionMatrix(pos, 3),\n    );\n}\n\nexport function createRotateMatrix(rad: number, n: number) {\n    const cos = Math.cos(rad);\n    const sin = Math.sin(rad);\n    const m = createIdentityMatrix(n);\n\n    // cos -sin\n    // sin cos\n    m[0] = cos;\n    m[1] = sin;\n    m[n] = -sin;\n    m[n + 1] = cos;\n\n    return m;\n}\n\nexport function createIdentityMatrix(n: number) {\n    const length = n * n;\n    const matrix: number[] = [];\n\n    for (let i = 0; i < length; ++i) {\n        matrix[i] = i % (n + 1) ? 0 : 1;\n    }\n    return matrix;\n}\nexport function createScaleMatrix(scale: number[], n: number) {\n    const m = createIdentityMatrix(n);\n    const length = Math.min(scale.length, n - 1);\n\n    for (let i = 0; i < length; ++i) {\n        m[(n + 1) * i] = scale[i];\n    }\n    return m;\n}\nexport function createOriginMatrix(origin: number[], n: number) {\n    const m = createIdentityMatrix(n);\n    const length = Math.min(origin.length, n - 1);\n\n    for (let i = 0; i < length; ++i) {\n        m[n * (n - 1) + i] = origin[i];\n    }\n    return m;\n}\n\nexport function createWarpMatrix(\n    pos0: number[],\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    nextPos0: number[],\n    nextPos1: number[],\n    nextPos2: number[],\n    nextPos3: number[],\n) {\n    const [x0, y0] = pos0;\n    const [x1, y1] = pos1;\n    const [x2, y2] = pos2;\n    const [x3, y3] = pos3;\n\n    const [u0, v0] = nextPos0;\n    const [u1, v1] = nextPos1;\n    const [u2, v2] = nextPos2;\n    const [u3, v3] = nextPos3;\n\n    const matrix = [\n        x0, 0, x1, 0, x2, 0, x3, 0,\n        y0, 0, y1, 0, y2, 0, y3, 0,\n        1, 0, 1, 0, 1, 0, 1, 0,\n        0, x0, 0, x1, 0, x2, 0, x3,\n        0, y0, 0, y1, 0, y2, 0, y3,\n        0, 1, 0, 1, 0, 1, 0, 1,\n        -u0 * x0, -v0 * x0, -u1 * x1, -v1 * x1, -u2 * x2, -v2 * x2, -u3 * x3, -v3 * x3,\n        -u0 * y0, -v0 * y0, -u1 * y1, -v1 * y1, -u2 * y2, -v2 * y2, -u3 * y3, -v3 * y3,\n    ];\n    const inverseMatrix = invert(matrix, 8);\n\n    if (!inverseMatrix.length) {\n        return [];\n    }\n    const h = multiply(inverseMatrix, [u0, v0, u1, v1, u2, v2, u3, v3], 8);\n\n    h[8] = 1;\n    return convertDimension(transpose(h), 3, 4);\n}\n","import { PREFIX, IS_WEBKIT, TINY_NUM } from \"./consts\";\nimport { prefixNames } from \"framework-utils\";\nimport { splitBracket, isUndefined, isObject, splitUnit, IObject, hasClass, isArray, isString } from \"@daybrush/utils\";\nimport {\n    multiply, invert,\n    convertDimension, createIdentityMatrix,\n    createOriginMatrix, convertPositionMatrix, caculate,\n    multiplies,\n    minus,\n    getOrigin,\n    createScaleMatrix,\n    plus,\n    getRad,\n    ignoreDimension,\n    convertCSStoMatrix,\n    convertMatrixtoCSS,\n} from \"./matrix\";\nimport {\n    MoveableManagerState, Able, MoveableClientRect,\n    MoveableProps, ControlPose, InvertTypes, ArrayFormat, MoveableRefType\n} from \"./types\";\nimport { parse, toMat } from \"css-to-mat\";\n\nexport function round(num: number) {\n    return Math.round(num);\n}\nexport function multiply2(pos1: number[], pos2: number[]) {\n    return [\n        pos1[0] * pos2[0],\n        pos1[1] * pos2[1],\n    ];\n}\nexport function prefix(...classNames: string[]) {\n    return prefixNames(PREFIX, ...classNames);\n}\n\nexport function createIdentityMatrix3() {\n    return createIdentityMatrix(3);\n}\n\nexport function getTransformMatrix(transform: string | number[]) {\n    if (!transform || transform === \"none\") {\n        return [1, 0, 0, 1, 0, 0];\n\n    }\n    if (isObject(transform)) {\n        return transform;\n    }\n    const value = splitBracket(transform).value!;\n    return value.split(/s*,\\s*/g).map(v => parseFloat(v));\n}\nexport function getAbsoluteMatrix(matrix: number[], n: number, origin: number[]) {\n    return multiplies(\n        n,\n        createOriginMatrix(origin, n),\n        matrix,\n        createOriginMatrix(origin.map(a => -a), n),\n    );\n}\nexport function measureSVGSize(el: SVGElement, unit: string, isHorizontal: boolean) {\n    if (unit === \"%\") {\n        const viewBox = getSVGViewBox(el.ownerSVGElement!);\n        return viewBox[isHorizontal ? \"width\" : \"height\"] / 100;\n    }\n    return 1;\n}\nexport function getBeforeTransformOrigin(el: SVGElement) {\n    const relativeOrigin = getTransformOrigin(getComputedStyle(el, \":before\"));\n\n    return relativeOrigin.map((o, i) => {\n        const { value, unit } = splitUnit(o);\n\n        return value * measureSVGSize(el, unit, i === 0);\n    });\n}\nexport function getTransformOrigin(style: CSSStyleDeclaration) {\n    const transformOrigin = style.transformOrigin;\n\n    return transformOrigin ? transformOrigin.split(\" \") : [\"0\", \"0\"];\n}\nexport function getOffsetInfo(\n    el: SVGElement | HTMLElement | null | undefined,\n    lastParent: SVGElement | HTMLElement | null | undefined,\n    isParent?: boolean,\n) {\n    const body = document.body;\n    let target = !el || isParent ? el : el.parentElement;\n    let isEnd = false;\n    let position = \"relative\";\n\n    while (target && target !== body) {\n        if (lastParent === target) {\n            isEnd = true;\n        }\n        const style = getComputedStyle(target);\n        const transform = style.transform;\n        position = style.position!;\n\n        if (position !== \"static\" || (transform && transform !== \"none\")) {\n            break;\n        }\n        target = target.parentElement;\n        position = \"relative\";\n    }\n    return {\n        isStatic: position === \"static\",\n        isEnd: isEnd || !target || target === body,\n        offsetParent: target as HTMLElement || body,\n    };\n\n}\nexport function getOffsetPosInfo(\n    el: HTMLElement | SVGElement,\n    container: SVGElement | HTMLElement | null | undefined,\n    style: CSSStyleDeclaration,\n    isFixed: boolean,\n) {\n    const tagName = el.tagName.toLowerCase();\n    let offsetLeft = (el as HTMLElement).offsetLeft;\n    let offsetTop = (el as HTMLElement).offsetTop;\n\n    if (isFixed) {\n        const containerClientRect = (container || document.documentElement).getBoundingClientRect();\n\n        offsetLeft -= containerClientRect.left;\n        offsetTop -= containerClientRect.top;\n    }\n    // svg\n    const isSVG = isUndefined(offsetLeft);\n    let hasOffset = !isSVG;\n    let origin: number[];\n    let targetOrigin: number[];\n    // inner svg element\n    if (!hasOffset && tagName !== \"svg\") {\n        origin = IS_WEBKIT\n            ? getBeforeTransformOrigin(el as SVGElement)\n            : getTransformOrigin(style).map(pos => parseFloat(pos));\n\n        targetOrigin = origin.slice();\n        hasOffset = true;\n\n        if (tagName === \"g\") {\n            offsetLeft = 0;\n            offsetTop = 0;\n        } else {\n            [\n                offsetLeft, offsetTop, origin[0], origin[1],\n            ] = getSVGGraphicsOffset(el as SVGGraphicsElement, origin);\n        }\n    } else {\n        origin = getTransformOrigin(style).map(pos => parseFloat(pos));\n        targetOrigin = origin.slice();\n    }\n    return {\n        isSVG,\n        hasOffset,\n        offset: [offsetLeft, offsetTop],\n        origin,\n        targetOrigin,\n    };\n}\nexport function getMatrixStackInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    // prevMatrix?: number[],\n) {\n    let el: SVGElement | HTMLElement | null = target;\n    const matrixes: number[][] = [];\n    let isEnd = false;\n    let is3d = false;\n    let n = 3;\n    let transformOrigin!: number[];\n    let targetTransformOrigin!: number[];\n    let targetMatrix!: number[];\n\n    const offsetContainer = getOffsetInfo(container, container, true).offsetParent;\n\n    // if (prevMatrix) {\n    //     isEnd = target === container;\n    //     if (prevMatrix.length > 10) {\n    //         is3d = true;\n    //         n = 4;\n    //     }\n    //     container = target.parentElement;\n    // }\n\n    while (el && !isEnd) {\n        const style: CSSStyleDeclaration = getComputedStyle(el);\n        const tagName = el.tagName.toLowerCase();\n        const position = style.position;\n        const isFixed = position === \"fixed\";\n        let matrix: number[] = convertCSStoMatrix(getTransformMatrix(style.transform!));\n\n        // convert 3 to 4\n        const length = matrix.length;\n        if (!is3d && length === 16) {\n            is3d = true;\n            n = 4;\n            const matrixesLength = matrixes.length;\n\n            for (let i = 0; i < matrixesLength; ++i) {\n                matrixes[i] = convertDimension(matrixes[i], 3, 4);\n            }\n        }\n        if (is3d && length === 9) {\n            matrix = convertDimension(matrix, 3, 4);\n        }\n        const {\n            hasOffset,\n            isSVG,\n            origin,\n            targetOrigin,\n            offset: offsetPos,\n        } = getOffsetPosInfo(el, container, style, isFixed);\n        let [\n            offsetLeft,\n            offsetTop,\n        ] = offsetPos;\n        if (tagName === \"svg\" && targetMatrix) {\n            matrixes.push(\n                // scale matrix for svg's SVGElements.\n                getSVGMatrix(el as SVGSVGElement, n),\n                createIdentityMatrix(n),\n            );\n        }\n        const {\n            offsetParent,\n            isEnd: isOffsetEnd,\n            isStatic,\n        } = getOffsetInfo(el, container);\n\n        if (IS_WEBKIT && hasOffset && !isSVG && isStatic && (position === \"relative\" || position === \"static\")) {\n            offsetLeft -= offsetParent.offsetLeft;\n            offsetTop -= offsetParent.offsetTop;\n            isEnd = isEnd || isOffsetEnd;\n        }\n        let parentClientLeft = 0;\n        let parentClientTop = 0;\n\n        if (hasOffset && offsetContainer !== offsetParent) {\n            // border\n            parentClientLeft = offsetParent.clientLeft;\n            parentClientTop = offsetParent.clientTop;\n        }\n        matrixes.push(\n            // absolute matrix\n            getAbsoluteMatrix(matrix, n, origin),\n            // offset matrix (offsetPos + clientPos(border))\n            createOriginMatrix(hasOffset ? [\n                offsetLeft - el.scrollLeft + parentClientLeft,\n                offsetTop - el.scrollTop + parentClientTop,\n            ] : [el, origin] as any, n),\n        );\n        if (!targetMatrix) {\n            targetMatrix = matrix;\n        }\n        if (!transformOrigin) {\n            transformOrigin = origin;\n        }\n        if (!targetTransformOrigin) {\n            targetTransformOrigin = targetOrigin;\n        }\n        if (isEnd || isFixed) {\n            break;\n        } else {\n            el = offsetParent;\n            isEnd = isOffsetEnd;\n        }\n    }\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(n);\n    }\n    if (!transformOrigin) {\n        transformOrigin = [0, 0];\n    }\n    if (!targetTransformOrigin) {\n        targetTransformOrigin = [0, 0];\n    }\n    return {\n        offsetContainer,\n        matrixes,\n        targetMatrix,\n        transformOrigin,\n        targetOrigin: targetTransformOrigin,\n        is3d,\n    };\n}\nexport function cacaulateElementInfo(\n    target?: SVGElement | HTMLElement | null,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: HTMLElement | SVGElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    state?: Partial<MoveableManagerState> | false,\n) {\n    // const prevMatrix = state ? state.beforeMatrix : undefined;\n    // const prevRootMatrix = state ? state.rootMatrix : undefined;\n    // const prevN = state ? (state.is3d ? 4 : 3) : undefined;\n    let width: number = 0;\n    let height: number = 0;\n    let rotation = 0;\n    let allResult: {} = {};\n    if (state) {\n        width = state.width!;\n        height = state.height!;\n    } else if (target) {\n        const style = getComputedStyle(target);\n\n        width = (target as HTMLElement).offsetWidth;\n        height = (target as HTMLElement).offsetHeight;\n\n        if (isUndefined(width)) {\n            [width, height] = getSize(target, style, true);\n        }\n    }\n\n    if (target) {\n        const result = caculateMatrixStack(\n            target, container, rootContainer, isAbsolute3d,\n            // prevMatrix, prevRootMatrix, prevN,\n        );\n        const position = caculateMoveablePosition(\n            result.allMatrix,\n            result.transformOrigin,\n            width, height,\n        );\n        allResult = {\n            ...result,\n            ...position,\n        };\n        rotation = getRotationRad([position.pos1, position.pos2], position.direction);\n    }\n    const n = isAbsolute3d ? 4 : 3;\n    return {\n        width,\n        height,\n        rotation,\n        // rootMatrix: number[];\n        // beforeMatrix: number[];\n        // offsetMatrix: number[];\n        // allMatrix: number[];\n        // targetMatrix: number[];\n        // targetTransform: string;\n        // transformOrigin: number[];\n        // targetOrigin: number[];\n        // is3d: boolean;\n        rootMatrix: createIdentityMatrix(n),\n        beforeMatrix: createIdentityMatrix(n),\n        offsetMatrix: createIdentityMatrix(n),\n        allMatrix: createIdentityMatrix(n),\n        targetMatrix: createIdentityMatrix(n),\n        targetTransform: \"\",\n        transformOrigin: [0, 0],\n        targetOrigin: [0, 0],\n        is3d: !!isAbsolute3d,\n        // left: number;\n        // top: number;\n        // right: number;\n        // bottom: number;\n        // origin: number[];\n        // pos1: number[];\n        // pos2: number[];\n        // pos3: number[];\n        // pos4: number[];\n        // direction: 1 | -1;\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        origin: [0, 0],\n        pos1: [0, 0],\n        pos2: [0, 0],\n        pos3: [0, 0],\n        pos4: [0, 0],\n        direction: 1,\n        ...allResult,\n    };\n}\nexport function getElementInfo(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n) {\n    return cacaulateElementInfo(target, container, rootContainer, true);\n}\nexport function caculateMatrixStack(\n    target: SVGElement | HTMLElement,\n    container?: SVGElement | HTMLElement | null,\n    rootContainer: SVGElement | HTMLElement | null | undefined = container,\n    isAbsolute3d?: boolean,\n    // prevMatrix?: number[],\n    // prevRootMatrix?: number[],\n    // prevN?: number,\n) {\n    const {\n        matrixes,\n        is3d,\n        targetMatrix: prevTargetMatrix,\n        transformOrigin,\n        targetOrigin,\n        offsetContainer,\n    } = getMatrixStackInfo(target, container); // prevMatrix\n    const {\n        matrixes: rootMatrixes,\n        is3d: isRoot3d,\n    } = getMatrixStackInfo(offsetContainer, rootContainer); // prevRootMatrix\n\n    // if (rootContainer === document.body) {\n    //     console.log(offsetContainer, rootContainer, rootMatrixes);\n    // }\n    const isNext3d = isAbsolute3d || isRoot3d || is3d;\n    const n = isNext3d ? 4 : 3;\n    const isSVGGraphicElement = target.tagName.toLowerCase() !== \"svg\" && \"ownerSVGElement\" in target;\n    const originalContainer = container || document.body;\n    let targetMatrix = prevTargetMatrix;\n    // let allMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let rootMatrix = prevRootMatrix ? convertDimension(prevRootMatrix, prevN!, n) : createIdentityMatrix(n);\n    // let beforeMatrix = prevMatrix ? convertDimension(prevMatrix, prevN!, n) : createIdentityMatrix(n);\n    let allMatrix = createIdentityMatrix(n);\n    let rootMatrix = createIdentityMatrix(n);\n    let beforeMatrix = createIdentityMatrix(n);\n    let offsetMatrix = createIdentityMatrix(n);\n    const length = matrixes.length;\n    const endContainer = getOffsetInfo(originalContainer, originalContainer, true).offsetParent;\n\n    rootMatrixes.reverse();\n    matrixes.reverse();\n\n    if (!is3d && isNext3d) {\n        targetMatrix = convertDimension(targetMatrix, 3, 4);\n        matrixes.forEach((matrix, i) => {\n            matrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n    if (!isRoot3d && isNext3d) {\n        rootMatrixes.forEach((matrix, i) => {\n            rootMatrixes[i] = convertDimension(matrix, 3, 4);\n        });\n    }\n\n    // rootMatrix = (...) -> container -> offset -> absolute -> offset -> absolute(targetMatrix)\n    // beforeMatrix = (... -> container -> offset -> absolute) -> offset -> absolute(targetMatrix)\n    // offsetMatrix = (... -> container -> offset -> absolute -> offset) -> absolute(targetMatrix)\n\n    // if (!prevRootMatrix) {\n    rootMatrixes.forEach(matrix => {\n        rootMatrix = multiply(rootMatrix, matrix, n);\n    });\n    // }\n    matrixes.forEach((matrix, i) => {\n        if (length - 2 === i) {\n            // length - 3\n            beforeMatrix = allMatrix.slice();\n        }\n        if (length - 1 === i) {\n            // length - 2\n            offsetMatrix = allMatrix.slice();\n        }\n\n        // caculate for SVGElement\n        if (isObject(matrix[n * (n - 1)])) {\n            [matrix[n * (n - 1)], matrix[n * (n - 1) + 1]] =\n                getSVGOffset(\n                    matrix[n * (n - 1)] as any,\n                    endContainer,\n                    n,\n                    matrix[n * (n - 1) + 1] as any,\n                    allMatrix,\n                    matrixes[i + 1],\n                );\n        }\n        allMatrix = multiply(allMatrix, matrix, n);\n    });\n    const isMatrix3d = !isSVGGraphicElement && is3d;\n\n    if (!targetMatrix) {\n        targetMatrix = createIdentityMatrix(isMatrix3d ? 4 : 3);\n    }\n    const targetTransform = makeMatrixCSS(\n        isSVGGraphicElement && targetMatrix.length === 16\n            ? convertDimension(targetMatrix, 4, 3) : targetMatrix,\n        isMatrix3d,\n    );\n\n    rootMatrix = ignoreDimension(rootMatrix, n, n);\n\n    return {\n        rootMatrix,\n        beforeMatrix,\n        offsetMatrix,\n        allMatrix,\n        targetMatrix,\n        targetTransform,\n        transformOrigin,\n        targetOrigin,\n        is3d: isNext3d,\n    };\n}\nexport function makeMatrixCSS(matrix: number[], is3d: boolean = matrix.length > 9) {\n    return `${is3d ? \"matrix3d\" : \"matrix\"}(${convertMatrixtoCSS(matrix, !is3d).join(\",\")})`;\n}\nexport function getSVGViewBox(el: SVGSVGElement) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n    const viewBox = el.viewBox;\n    const baseVal = (viewBox && viewBox.baseVal) || { x: 0, y: 0, width: 0, height: 0 };\n\n    return {\n        x: baseVal.x,\n        y: baseVal.y,\n        width: baseVal.width || clientWidth,\n        height: baseVal.height || clientHeight,\n    };\n}\nexport function getSVGMatrix(\n    el: SVGSVGElement,\n    n: number,\n) {\n    const clientWidth = el.clientWidth;\n    const clientHeight = el.clientHeight;\n    const {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n    } = getSVGViewBox(el);\n    const scaleX = clientWidth / viewBoxWidth;\n    const scaleY = clientHeight / viewBoxHeight;\n\n    const preserveAspectRatio = el.preserveAspectRatio.baseVal;\n    // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n    const align = preserveAspectRatio.align;\n    // 1 : meet 2: slice\n    const meetOrSlice = preserveAspectRatio.meetOrSlice;\n    const svgOrigin = [0, 0];\n    const scale = [scaleX, scaleY];\n    const translate = [0, 0];\n\n    if (align !== 1) {\n        const xAlign = (align - 2) % 3;\n        const yAlign = Math.floor((align - 2) / 3);\n\n        svgOrigin[0] = viewBoxWidth * xAlign / 2;\n        svgOrigin[1] = viewBoxHeight * yAlign / 2;\n\n        const scaleDimension = meetOrSlice === 2 ? Math.max(scaleY, scaleX) : Math.min(scaleX, scaleY);\n\n        scale[0] = scaleDimension;\n        scale[1] = scaleDimension;\n\n        translate[0] = (clientWidth - viewBoxWidth) / 2 * xAlign;\n        translate[1] = (clientHeight - viewBoxHeight) / 2 * yAlign;\n    }\n    const scaleMatrix = createScaleMatrix(scale, n);\n    [\n        scaleMatrix[n * (n - 1)],\n        scaleMatrix[n * (n - 1) + 1],\n    ] = translate;\n\n    return getAbsoluteMatrix(\n        scaleMatrix,\n        n,\n        svgOrigin,\n    );\n}\nexport function getSVGGraphicsOffset(\n    el: SVGGraphicsElement,\n    origin: number[],\n) {\n    if (!el.getBBox) {\n        return [0, 0];\n    }\n    const bbox = el.getBBox();\n    const viewBox = getSVGViewBox(el.ownerSVGElement!);\n    const left = bbox.x - viewBox.x;\n    const top = bbox.y - viewBox.y;\n\n    return [\n        left,\n        top,\n        origin[0] - left,\n        origin[1] - top,\n    ];\n}\nexport function caculatePosition(matrix: number[], pos: number[], n: number) {\n    return caculate(matrix, convertPositionMatrix(pos, n), n);\n}\nexport function caculatePoses(matrix: number[], width: number, height: number, n: number) {\n    return [[0, 0], [width, 0], [0, height], [width, height]].map(pos => caculatePosition(matrix, pos, n));\n}\nexport function getRect(poses: number[][]) {\n    const posesX = poses.map(pos => pos[0]);\n    const posesY = poses.map(pos => pos[1]);\n    const left = Math.min(...posesX);\n    const top = Math.min(...posesY);\n    const right = Math.max(...posesX);\n    const bottom = Math.max(...posesY);\n    const rectWidth = right - left;\n    const rectHeight = bottom - top;\n\n    return {\n        left, top,\n        right, bottom,\n        width: rectWidth,\n        height: rectHeight,\n    };\n}\nexport function caculateRect(matrix: number[], width: number, height: number, n: number) {\n    const poses = caculatePoses(matrix, width, height, n);\n\n    return getRect(poses);\n}\nexport function getSVGOffset(\n    el: SVGElement,\n    container: HTMLElement | SVGElement,\n    n: number, origin: number[], beforeMatrix: number[], absoluteMatrix: number[]) {\n\n    const [width, height] = getSize(el, undefined, true);\n    const containerClientRect = container.getBoundingClientRect();\n    const rect = el.getBoundingClientRect();\n    const rectLeft = rect.left - containerClientRect.left + container.scrollLeft - (container.clientLeft || 0);\n    const rectTop = rect.top - containerClientRect.top + container.scrollTop - (container.clientTop || 0);\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    const mat = multiplies(\n        n,\n        beforeMatrix,\n        absoluteMatrix,\n    );\n    const {\n        left: prevLeft,\n        top: prevTop,\n        width: prevWidth,\n        height: prevHeight,\n    } = caculateRect(mat, width, height, n);\n    const posOrigin = caculatePosition(mat, origin, n);\n    const prevOrigin = minus(posOrigin, [prevLeft, prevTop]);\n    const rectOrigin = [\n        rectLeft + prevOrigin[0] * rectWidth / prevWidth,\n        rectTop + prevOrigin[1] * rectHeight / prevHeight,\n    ];\n    const offset = [0, 0];\n    let count = 0;\n\n    while (++count < 10) {\n        const inverseBeforeMatrix = invert(beforeMatrix, n);\n        [offset[0], offset[1]] = minus(\n            caculatePosition(inverseBeforeMatrix, rectOrigin, n),\n            caculatePosition(inverseBeforeMatrix, posOrigin, n),\n        );\n        const mat2 = multiplies(\n            n,\n            beforeMatrix,\n            createOriginMatrix(offset, n),\n            absoluteMatrix,\n        );\n        const {\n            left: nextLeft,\n            top: nextTop,\n        } = caculateRect(mat2, width, height, n);\n        const distLeft = nextLeft - rectLeft;\n        const distTop = nextTop - rectTop;\n\n        if (Math.abs(distLeft) < 2 && Math.abs(distTop) < 2) {\n            break;\n        }\n        rectOrigin[0] -= distLeft;\n        rectOrigin[1] -= distTop;\n    }\n    return offset.map(p => Math.round(p));\n}\nexport function caculateMoveablePosition(matrix: number[], origin: number[], width: number, height: number) {\n    const is3d = matrix.length === 16;\n    const n = is3d ? 4 : 3;\n    let [\n        [x1, y1],\n        [x2, y2],\n        [x3, y3],\n        [x4, y4],\n    ] = caculatePoses(matrix, width, height, n);\n    let [originX, originY] = caculatePosition(matrix, origin, n);\n\n    const left = Math.min(x1, x2, x3, x4);\n    const top = Math.min(y1, y2, y3, y4);\n    const right = Math.max(x1, x2, x3, x4);\n    const bottom = Math.max(y1, y2, y3, y4);\n\n    x1 = (x1 - left) || 0;\n    x2 = (x2 - left) || 0;\n    x3 = (x3 - left) || 0;\n    x4 = (x4 - left) || 0;\n\n    y1 = (y1 - top) || 0;\n    y2 = (y2 - top) || 0;\n    y3 = (y3 - top) || 0;\n    y4 = (y4 - top) || 0;\n\n    originX = (originX - left) || 0;\n    originY = (originY - top) || 0;\n\n    const center = [\n        (x1 + x2 + x3 + x4) / 4,\n        (y1 + y2 + y3 + y4) / 4,\n    ];\n    const pos1Rad = getRad(center, [x1, y1]);\n    const pos2Rad = getRad(center, [x2, y2]);\n    const direction: 1 | -1 =\n        (pos1Rad < pos2Rad && pos2Rad - pos1Rad < Math.PI) || (pos1Rad > pos2Rad && pos2Rad - pos1Rad < -Math.PI)\n            ? 1 : -1;\n\n    return {\n        left,\n        top,\n        right,\n        bottom,\n        origin: [originX, originY],\n        pos1: [x1, y1],\n        pos2: [x2, y2],\n        pos3: [x3, y3],\n        pos4: [x4, y4],\n        direction,\n    };\n}\nexport function getDistSize(vec: number[]) {\n    return Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n}\nexport function getDiagonalSize(pos1: number[], pos2: number[]) {\n    return getDistSize([\n        pos2[0] - pos1[0],\n        pos2[1] - pos1[1],\n    ]);\n}\nexport function getLineStyle(pos1: number[], pos2: number[], rad: number = getRad(pos1, pos2)) {\n    const width = getDiagonalSize(pos1, pos2);\n\n    return {\n        transform: `translateY(-50%) translate(${pos1[0]}px, ${pos1[1]}px) rotate(${rad}rad)`,\n        width: `${width}px`,\n    };\n}\nexport function getControlTransform(rotation: number, ...poses: number[][]) {\n    const length = poses.length;\n\n    const x = poses.reduce((prev, pos) => prev + pos[0], 0) / length;\n    const y = poses.reduce((prev, pos) => prev + pos[1], 0) / length;\n    return {\n        transform: `translate(${x}px, ${y}px) rotate(${rotation}rad)`,\n    };\n}\nexport function getCSSSize(target: SVGElement | HTMLElement) {\n    const style = window.getComputedStyle(target);\n\n    return [\n        parseFloat(style.width!),\n        parseFloat(style.height!),\n    ];\n}\nexport function getSize(\n    target: SVGElement | HTMLElement,\n    style: CSSStyleDeclaration = window.getComputedStyle(target),\n    isOffset?: boolean,\n    isBoxSizing: boolean = isOffset || style.boxSizing === \"border-box\",\n) {\n    let width = (target as HTMLElement).offsetWidth;\n    let height = (target as HTMLElement).offsetHeight;\n    const hasOffset = !isUndefined(width);\n\n    if ((isOffset || isBoxSizing) && hasOffset) {\n        return [width, height];\n    }\n    if (!hasOffset && target.tagName.toLowerCase() !== \"svg\") {\n        const bbox = (target as SVGGraphicsElement).getBBox();\n        return [bbox.width, bbox.height];\n    }\n\n    width = target.clientWidth;\n    height = target.clientHeight;\n\n    if (isOffset || isBoxSizing) {\n        const borderLeft = parseFloat(style.borderLeftWidth!) || 0;\n        const borderRight = parseFloat(style.borderRightWidth!) || 0;\n        const borderTop = parseFloat(style.borderTopWidth!) || 0;\n        const borderBottom = parseFloat(style.borderBottomWidth!) || 0;\n\n        return [\n            width + borderLeft + borderRight,\n            height + borderTop + borderBottom,\n        ];\n    } else {\n        const paddingLeft = parseFloat(style.paddingLeft!) || 0;\n        const paddingRight = parseFloat(style.paddingRight!) || 0;\n        const paddingTop = parseFloat(style.paddingTop!) || 0;\n        const paddingBottom = parseFloat(style.paddingBottom!) || 0;\n\n        return [\n            width - paddingLeft - paddingRight,\n            height - paddingTop - paddingBottom,\n        ];\n    }\n}\nexport function getRotationRad(\n    poses: number[][],\n    direction: number,\n) {\n    return getRad(direction > 0 ? poses[0] : poses[1], direction > 0 ? poses[1] : poses[0]);\n}\nexport function getTargetInfo(\n    moveableElement?: HTMLElement | null,\n    target?: HTMLElement | SVGElement | null,\n    container?: HTMLElement | SVGElement | null,\n    parentContainer?: HTMLElement | SVGElement | null,\n    rootContainer?: HTMLElement | SVGElement | null,\n    state?: Partial<MoveableManagerState> | false | undefined,\n) {\n    let beforeDirection: 1 | -1 = 1;\n    let beforeOrigin = [0, 0];\n    let targetClientRect = resetClientRect();\n    let containerClientRect = resetClientRect();\n    let moveableClientRect = resetClientRect();\n\n    const result = cacaulateElementInfo(\n        target, container!, rootContainer!, false, state,\n    );\n    if (target) {\n        const n = result.is3d ? 4 : 3;\n        const beforePosition = caculateMoveablePosition(\n            result.offsetMatrix,\n            plus(result.transformOrigin, getOrigin(result.targetMatrix, n)),\n            result.width, result.height,\n        );\n        beforeDirection = beforePosition.direction;\n        beforeOrigin = plus(\n            beforePosition.origin,\n            [beforePosition.left - result.left, beforePosition.top - result.top],\n        );\n\n        targetClientRect = getClientRect(target);\n        containerClientRect = getClientRect(\n            getOffsetInfo(parentContainer, parentContainer, true).offsetParent || document.body,\n            true,\n        );\n        if (moveableElement) {\n            moveableClientRect = getClientRect(moveableElement);\n        }\n    }\n\n    return {\n        targetClientRect,\n        containerClientRect,\n        moveableClientRect,\n        beforeDirection,\n        beforeOrigin,\n        target,\n        ...result,\n    };\n}\nexport function resetClientRect(): MoveableClientRect {\n    return {\n        left: 0, right: 0,\n        top: 0, bottom: 0,\n        width: 0, height: 0,\n        clientLeft: 0, clientTop: 0,\n        clientWidth: 0, clientHeight: 0,\n        scrollWidth: 0, scrollHeight: 0,\n    };\n}\nexport function getClientRect(el: HTMLElement | SVGElement, isExtends?: boolean) {\n    const { left, width, top, bottom, right, height } = el.getBoundingClientRect();\n\n    const rect: MoveableClientRect = {\n        left,\n        right,\n        top,\n        bottom,\n        width,\n        height,\n    };\n\n    if (isExtends) {\n        rect.clientLeft = el.clientLeft;\n        rect.clientTop = el.clientTop;\n        rect.clientWidth = el.clientWidth;\n        rect.clientHeight = el.clientHeight;\n        rect.scrollWidth = el.scrollWidth;\n        rect.scrollHeight = el.scrollHeight;\n    }\n    return rect;\n}\nexport function getDirection(target: SVGElement | HTMLElement) {\n    if (!target) {\n        return;\n    }\n    const direciton = target.getAttribute(\"data-direction\")!;\n\n    if (!direciton) {\n        return;\n    }\n    const dir = [0, 0];\n\n    (direciton.indexOf(\"w\") > -1) && (dir[0] = -1);\n    (direciton.indexOf(\"e\") > -1) && (dir[0] = 1);\n    (direciton.indexOf(\"n\") > -1) && (dir[1] = -1);\n    (direciton.indexOf(\"s\") > -1) && (dir[1] = 1);\n\n    return dir;\n}\nexport function getAbsolutePoses(poses: number[][], dist: number[]) {\n    return [\n        plus(dist, poses[0]),\n        plus(dist, poses[1]),\n        plus(dist, poses[2]),\n        plus(dist, poses[3]),\n    ];\n}\nexport function getAbsolutePosesByState({\n    left,\n    top,\n    pos1,\n    pos2,\n    pos3,\n    pos4,\n}: {\n    left: number,\n    top: number,\n    pos1: number[],\n    pos2: number[],\n    pos3: number[],\n    pos4: number[],\n}) {\n    return getAbsolutePoses([pos1, pos2, pos3, pos4], [left, top]);\n}\nexport function roundSign(num: number) {\n    return Math.round(num % 1 === -0.5 ? num - 1 : num);\n}\nexport function throttle(num: number, unit: number) {\n    if (!unit) {\n        return num;\n    }\n    return Math.round(num / unit) * unit;\n}\nexport function throttleArray(nums: number[], unit: number) {\n    nums.forEach((_, i) => {\n        nums[i] = throttle(nums[i], unit);\n    });\n    return nums;\n}\n\nexport function unset(self: any, name: string) {\n    if (self[name]) {\n        self[name].unset();\n        self[name] = null;\n    }\n}\n\nexport function getOrientationDirection(pos: number[], pos1: number[], pos2: number[]) {\n    return (pos[0] - pos1[0]) * (pos2[1] - pos1[1]) - (pos[1] - pos1[1]) * (pos2[0] - pos1[0]);\n}\nexport function isInside(pos: number[], pos1: number[], pos2: number[], pos3: number[], pos4: number[]) {\n    const k1 = getOrientationDirection(pos, pos1, pos2);\n    const k2 = getOrientationDirection(pos, pos2, pos3);\n    const k3 = getOrientationDirection(pos, pos3, pos1);\n\n    const k4 = getOrientationDirection(pos, pos2, pos3);\n    const k5 = getOrientationDirection(pos, pos3, pos4);\n    const k6 = getOrientationDirection(pos, pos4, pos2);\n    const signs1 = [k1, k2, k3];\n    const signs2 = [k4, k5, k6];\n\n    if (\n        signs1.every(sign => sign >= 0)\n        || signs1.every(sign => sign <= 0)\n        || signs2.every(sign => sign >= 0)\n        || signs2.every(sign => sign <= 0)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nexport function fillParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: Pick<T, Exclude<keyof T, \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" | \"datas\" | \"currentTarget\">>,\n): T {\n    const datas = e.datas;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n    const nextParams = {\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        datas: datas.datas,\n    } as any;\n\n    if (datas.isStartEvent) {\n        datas.lastEvent = nextParams;\n    } else {\n        datas.isStartEvent = true;\n    }\n    return nextParams;\n}\nexport function fillEndParams<T extends IObject<any>>(\n    moveable: any,\n    e: any,\n    params: Pick<T, Exclude<\n        keyof T,\n        \"target\" | \"clientX\" | \"clientY\" | \"inputEvent\" |\n        \"datas\" | \"currentTarget\" | \"lastEvent\" | \"isDrag\" | \"isDouble\">\n    > & { isDrag?: boolean },\n): T {\n    const datas = e.datas;\n    const isDrag = \"isDrag\" in params ? params.isDrag : e.isDrag;\n\n    if (!datas.datas) {\n        datas.datas = {};\n    }\n\n    return {\n        isDrag,\n        ...params,\n        target: moveable.state.target,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        inputEvent: e.inputEvent,\n        currentTarget: moveable,\n        lastEvent: datas.lastEvent,\n        isDouble: e.isDouble,\n        datas: datas.datas,\n    } as any;\n}\n\nexport function triggerEvent<T extends IObject<any> = MoveableProps, U extends keyof T = string>(\n    moveable: any,\n    name: U,\n    params: T[U] extends ((e: infer P) => any) | undefined ? P : IObject<any>,\n    isManager?: boolean,\n): any {\n    return moveable.triggerEvent(name, params, isManager);\n}\n\nexport function getComputedStyle(el: HTMLElement | SVGElement, pseudoElt?: string | null) {\n    return window.getComputedStyle(el, pseudoElt);\n}\n\nexport function filterAbles(\n    ables: Able[], methods: Array<keyof Able>,\n    triggerAblesSimultaneously?: boolean,\n) {\n    const enabledAbles: IObject<boolean> = {};\n    const ableGroups: IObject<boolean> = {};\n\n    return ables.filter(able => {\n        const name = able.name;\n\n        if (enabledAbles[name] || !methods.some(method => able[method])) {\n            return false;\n        }\n        if (!triggerAblesSimultaneously && able.ableGroup) {\n            if (ableGroups[able.ableGroup]) {\n                return false;\n            }\n            ableGroups[able.ableGroup] = true;\n        }\n        enabledAbles[name] = true;\n        return true;\n    });\n}\n\nexport function getKeepRatioHeight(width: number, isWidth: boolean, ratio: number) {\n    return width * (isWidth ? ratio : 1 / ratio);\n}\nexport function getKeepRatioWidth(height: number, isWidth: boolean, ratio: number) {\n    return height * (isWidth ? 1 / ratio : ratio);\n}\n\nexport function equals(a1: any, a2: any) {\n    return a1 === a2 || (a1 == null && a2 == null);\n}\n\nexport function selectValue<T = any>(...values: any[]): T {\n    const length = values.length - 1;\n    for (let i = 0; i < length; ++i) {\n        const value = values[i];\n\n        if (!isUndefined(value)) {\n            return value;\n        }\n    }\n\n    return values[length];\n}\n\nexport function groupBy<T>(arr: T[], func: (el: T, index: number, arr: T[]) => any) {\n    const groups: T[][] = [];\n    const groupKeys: any[] = [];\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        const keyIndex = groupKeys.indexOf(groupKey);\n        const group = groups[keyIndex] || [];\n\n        if (keyIndex === -1) {\n            groupKeys.push(groupKey);\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function groupByMap<T>(arr: T[], func: (el: T, index: number, arr: T[]) => string | number) {\n    const groups: T[][] = [];\n    const groupKeys: IObject<T[]> = {};\n\n    arr.forEach((el, index) => {\n        const groupKey = func(el, index, arr);\n        let group = groupKeys[groupKey];\n\n        if (!group) {\n            group = [];\n            groupKeys[groupKey] = group;\n            groups.push(group);\n        }\n        group.push(el);\n    });\n    return groups;\n}\nexport function flat<T>(arr: T[][]): T[] {\n    return arr.reduce((prev, cur) => {\n        return prev.concat(cur);\n    }, []);\n}\n\nexport function equalSign(a: number, b: number) {\n    return (a >= 0 && b >= 0) || (a < 0 && b < 0);\n}\n\nexport function maxOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(b) - Math.abs(a));\n\n    return args[0];\n}\nexport function minOffset(...args: number[]) {\n    args.sort((a, b) => Math.abs(a) - Math.abs(b));\n\n    return args[0];\n}\n\nexport function caculateInversePosition(matrix: number[], pos: number[], n: number) {\n    return caculate(\n        invert(matrix, n),\n        convertPositionMatrix(pos, n),\n        n,\n    );\n}\nexport function convertDragDist(state: MoveableManagerState, e: any) {\n    const {\n        is3d,\n        rootMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n    [\n        e.distX, e.distY,\n    ] = caculateInversePosition(rootMatrix, [e.distX, e.distY], n);\n\n    return e;\n}\n\nexport function caculatePadding(\n    matrix: number[], pos: number[],\n    transformOrigin: number[], origin: number[], n: number,\n) {\n    return minus(caculatePosition(matrix, plus(transformOrigin, pos), n), origin);\n}\nexport function checkSize(targetSize: number[], compareSize: number[], isMax: boolean) {\n    return [\n        [compareSize[0], compareSize[0] * targetSize[1] / targetSize[0]],\n        [compareSize[1] * targetSize[0] / targetSize[1], compareSize[1]],\n    ].filter(size => size.every((value, i) => {\n        return isMax ? value <= compareSize[i] : value >= compareSize[i];\n    }))[0] || targetSize;\n}\nexport function caculateBoundSize(\n    size: number[], minSize: number[],\n    maxSize: number[], keepRatio?: boolean,\n) {\n    if (!keepRatio) {\n        return size.map((value, i) => between(value, minSize[i], maxSize[i]));\n    }\n    let [width, height] = size;\n    // width : height = minWidth : minHeight;\n    const [minWidth, minHeight] = checkSize(size, minSize, false);\n    const [maxWidth, maxHeight] = checkSize(size, maxSize, true);\n\n    if (width < minWidth || height < minHeight) {\n        width = minWidth;\n        height = minHeight;\n    } else if (width > maxWidth || height > maxHeight) {\n        width = maxWidth;\n        height = maxHeight;\n    }\n    return [width, height];\n}\n\nexport function convertCSSSize(value: number, size: number, isRelative?: boolean) {\n    return isRelative ? `${value / size * 100}%` : `${value}px`;\n}\n\nexport function moveControlPos(\n    controlPoses: ControlPose[],\n    index: number,\n    dist: number[],\n    isRect?: boolean,\n) {\n    const { direction, sub } = controlPoses[index];\n    const dists = controlPoses.map(() => [0, 0]);\n    const directions = direction ? direction.split(\"\") : [];\n\n    if (isRect && index < 8) {\n        const verticalDirection = directions.filter(dir => dir === \"w\" || dir === \"e\")[0];\n        const horizontalDirection = directions.filter(dir => dir === \"n\" || dir === \"s\")[0];\n\n        dists[index] = dist;\n        controlPoses.forEach((controlPose, i) => {\n            const {\n                direction: controlDir,\n            } = controlPose;\n\n            if (!controlDir) {\n                return;\n            }\n            if (controlDir.indexOf(verticalDirection) > -1) {\n                dists[i][0] = dist[0];\n            }\n            if (controlDir.indexOf(horizontalDirection) > -1) {\n                dists[i][1] = dist[1];\n            }\n        });\n        if (verticalDirection) {\n            dists[1][0] = dist[0] / 2;\n            dists[5][0] = dist[0] / 2;\n        }\n        if (horizontalDirection) {\n            dists[3][1] = dist[1] / 2;\n            dists[7][1] = dist[1] / 2;\n        }\n    } else if (direction && !sub) {\n        directions.forEach(dir => {\n            const isVertical = dir === \"n\" || dir === \"s\";\n\n            controlPoses.forEach((controlPose, i) => {\n                const {\n                    direction: dirDir,\n                    horizontal: dirHorizontal,\n                    vertical: dirVertical,\n                } = controlPose;\n\n                if (!dirDir || dirDir.indexOf(dir) === -1) {\n                    return;\n                }\n                dists[i] = [\n                    isVertical || !dirHorizontal ? 0 : dist[0],\n                    !isVertical || !dirVertical ? 0 : dist[1],\n                ];\n            });\n        });\n    } else {\n        dists[index] = dist;\n    }\n\n    return dists;\n}\n\nexport function getTinyDist(v: number) {\n    return Math.abs(v) <= TINY_NUM ? 0 : v;\n}\n\nexport function directionCondition(e: any) {\n    if (e.isRequest) {\n        if (e.requestAble === \"resizable\" || e.requestAble === \"scalable\") {\n            return e.parentDirection!;\n        } else {\n            return false;\n        }\n    }\n    return hasClass(e.inputEvent.target, prefix(\"direction\"));\n}\n\nexport function invertObject<T extends IObject<any>>(obj: T): InvertTypes<T> {\n    const nextObj: IObject<any> = {};\n\n    for (const name in obj) {\n        nextObj[obj[name]] = name;\n    }\n    return nextObj as any;\n}\n\nexport function getTransform(transforms: string[], index: number) {\n    const beforeFunctionTexts = transforms.slice(0, index < 0 ? undefined : index);\n    const targetFunctionText = transforms[index] || \"\";\n    const afterFunctionTexts = index < 0 ? [] : transforms.slice(index);\n    const beforeFunctions = parse(beforeFunctionTexts);\n    const targetFunctions = parse([targetFunctionText]);\n    const afterFunctions = parse(afterFunctionTexts);\n\n    return {\n        transforms,\n        beforeFunctionMatrix: toMat(beforeFunctions),\n        targetFunctionMatrix: toMat(targetFunctions),\n        afterFunctionMatrix: toMat(afterFunctions),\n        beforeFunctions,\n        targetFunction: targetFunctions[0],\n        afterFunctions,\n        beforeFunctionTexts,\n        targetFunctionText,\n        afterFunctionTexts,\n    };\n}\n\nexport function isArrayFormat<T = any>(arr: any): arr is ArrayFormat<T> {\n    if (!arr || !isObject(arr)) {\n        return false;\n    }\n    return isArray(arr) || \"length\" in arr;\n}\n\nexport function getRefTargets(targets: MoveableRefType | MoveableRefType[]) {\n    if (!targets) {\n        return [];\n    }\n    const userTargets = isArrayFormat(targets) ? [].slice.call(targets) : [targets];\n\n    return userTargets.map(target => {\n        if (!target) {\n            return null;\n        }\n        if (isString(target)) {\n            return target;\n        }\n        if (\"current\" in target) {\n            return target.current;\n        }\n        return target;\n    }) as Array<SVGElement | HTMLElement | string | null | undefined>;\n}\n\nexport function getElementTargets(\n    targets: Array<SVGElement | HTMLElement | string | null | undefined>,\n    selectorMap: IObject<Array<HTMLElement | SVGElement>>,\n) {\n    const elementTargets: Array<SVGElement | HTMLElement> = [];\n    targets.forEach(target => {\n        if (!target) {\n            return;\n        }\n        if (isString(target)) {\n            if (selectorMap[target]) {\n                elementTargets.push(...selectorMap[target]);\n            }\n            return;\n        }\n        elementTargets.push(target);\n    });\n\n    return elementTargets;\n}\n\nexport function between(value: number, min: number, max: number) {\n    return Math.max(min, Math.min(value, max));\n}\n\nexport function minmax(...values: number[]) {\n    return [Math.min(...values), Math.max(...values)];\n}\n","import { triggerEvent, fillParams, fillEndParams } from \"../utils\";\nimport {\n    PinchableProps, Able, SnappableState,\n    OnPinchStart, OnPinch, OnPinchEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\n\n/**\n * @namespace Moveable.Pinchable\n * @description Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n */\nexport default {\n    name: \"pinchable\",\n    updateRect: true,\n    props: {\n        pinchable: Boolean,\n    } as const,\n    events: {\n        onPinchStart: \"pinchStart\",\n        onPinch: \"pinch\",\n        onPinchEnd: \"pinchEnd\",\n        onPinchGroupStart: \"pinchGroupStart\",\n        onPinchGroup: \"pinchGroup\",\n        onPinchGroupEnd: \"pinchGroupEnd\",\n    } as const,\n    dragStart() {\n        return true;\n    },\n    pinchStart(\n        moveable: MoveableManagerInterface<PinchableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, targets, angle, originalDatas } = e;\n        const { pinchable, ables } = moveable.props;\n\n        if (!pinchable) {\n            return false;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}Start` as \"onPinchStart\";\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlStart` as \"dragControlStart\";\n\n        const pinchAbles = (pinchable === true ? moveable.controlAbles : ables!.filter(able => {\n            return pinchable.indexOf(able.name as any) > -1;\n        })).filter(able => able.canPinch && able[controlEventName]);\n\n        const params = fillParams<OnPinchStart>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const result = triggerEvent(moveable, eventName, params);\n\n        datas.isPinch = result !== false;\n        datas.ables = pinchAbles;\n\n        const isPinch = datas.isPinch;\n\n        if (!isPinch) {\n            return false;\n        }\n        pinchAbles.forEach(able => {\n            originalDatas[able.name] = originalDatas[able.name] || {};\n\n            if (!able[controlEventName]) {\n                return;\n            }\n            const ableEvent: any = {\n                ...e,\n                datas: originalDatas[able.name],\n                parentRotate: angle,\n                isPinch: true,\n            };\n            able[controlEventName]!(moveable, ableEvent);\n        });\n\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            direction: [0, 0],\n        };\n        return isPinch;\n    },\n    pinch(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const {\n            datas, scale: pinchScale, distance,\n            originalDatas,\n            inputEvent, targets,\n            angle,\n        } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const parentDistance = distance * (1 - 1 / pinchScale);\n        const params = fillParams<OnPinch>(moveable, e, {}) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}` as \"onPinch\";\n        triggerEvent(moveable, eventName, params);\n\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}Control` as \"dragControl\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                datas: originalDatas[able.name],\n                inputEvent,\n                parentDistance,\n                parentRotate: angle,\n                isPinch: true,\n            } as any);\n        });\n        return params;\n    },\n    pinchEnd(\n        moveable: MoveableManagerInterface<PinchableProps>,\n        e: any,\n    ) {\n        const { datas, isPinch, inputEvent, targets, originalDatas } = e;\n        if (!datas.isPinch) {\n            return;\n        }\n        const eventName = `onPinch${targets ? \"Group\" : \"\"}End` as \"onPinchEnd\";\n\n        const params = fillEndParams<OnPinchEnd>(moveable, e, { isDrag: isPinch }) as any;\n\n        if (targets) {\n            params.targets = targets;\n        }\n        triggerEvent(moveable, eventName, params);\n        const ables: Able[] = datas.ables;\n        const controlEventName = `drag${targets ? \"Group\" : \"\"}ControlEnd` as \"dragControlEnd\";\n\n        ables.forEach(able => {\n            if (!able[controlEventName]) {\n                return;\n            }\n            able[controlEventName]!(moveable, {\n                ...e,\n                isDrag: isPinch,\n                datas: originalDatas[able.name],\n                inputEvent,\n                isPinch: true,\n            } as any);\n        });\n        return isPinch;\n    },\n    pinchGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        return this.pinchStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.pinch(moveable, { ...e, targets: moveable.props.targets });\n    },\n    pinchGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.pinchEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be pinched with draggable, resizable, scalable, rotatable (default: false)\n * @name Moveable.Pinchable#pinchable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.pinchable = true;\n */\n\n/**\n * When the pinch starts, the pinchStart event is called with part of scaleStart, rotateStart, resizeStart\n * @memberof Moveable.Pinchable\n * @event pinchStart\n * @param {Moveable.Pinchable.OnPinchStart} - Parameters for the pinchStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When pinching, the pinch event is called with part of scale, rotate, resize\n * @memberof Moveable.Pinchable\n * @event pinch\n * @param {Moveable.Pinchable.OnPinch} - Parameters for the pinch event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinch\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotate\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scale\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When the pinch finishes, the pinchEnd event is called.\n * @memberof Moveable.Pinchable\n * @event pinchEnd\n * @param {Moveable.Pinchable.OnPinchEnd} - Parameters for the pinchEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     rotatable: true,\n *     scalable: true,\n *     pinchable: true, // [\"rotatable\", \"scalable\"]\n * });\n * moveable.on(\"pinchEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"rotateEnd\", ({ target }) => {\n *     console.log(target);\n * });\n * moveable.on(\"scaleEnd\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n * When the group pinch starts, the `pinchGroupStart` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupStart\n * @param {Moveable.Pinchable.OnPinchGroupStart} - Parameters for the `pinchGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupStart\", ({ targets }) => {\n *     console.log(\"onPinchGroupStart\", targets);\n * });\n */\n\n/**\n * When the group pinch, the `pinchGroup` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroup\n * @param {Moveable.Pinchable.OnPinchGroup} - Parameters for the `pinchGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroup\", ({ targets, events }) => {\n *     console.log(\"onPinchGroup\", targets);\n * });\n */\n\n/**\n * When the group pinch finishes, the `pinchGroupEnd` event is called.\n * @memberof Moveable.Pinchable\n * @event pinchGroupEnd\n * @param {Moveable.Pinchable.OnPinchGroupEnd} - Parameters for the `pinchGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     pinchable: true\n * });\n * moveable.on(\"pinchGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onPinchGroupEnd\", targets, isDrag);\n * });\n */\n","import { MoveableManagerState, OnCustomDrag } from \"../types\";\nimport { convertDragDist } from \"../utils\";\n\nexport function setCustomDrag(\n    e: any,\n    state: MoveableManagerState<any>,\n    delta: number[],\n    isPinch: boolean,\n    isConvert: boolean,\n) {\n\n    const result = state.gesto!.move(delta, e.inputEvent);\n    const datas = result.originalDatas || result.datas;\n    const draggableDatas = datas.draggable || (datas.draggable = {});\n\n    return {\n        ...(isConvert ? convertDragDist(state, result) : result),\n        isDrag: true,\n        isPinch: !!isPinch,\n        parentEvent: true,\n        datas: draggableDatas,\n        originalDatas: e.originalDatas,\n    };\n}\n\nexport default class CustomGesto {\n    private prevX = 0;\n    private prevY = 0;\n    private startX = 0;\n    private startY = 0;\n    private isDrag = false;\n    private isFlag = false;\n    private datas: any = {\n        draggable: {},\n    };\n\n    public dragStart(client: number[], e: any) {\n        this.isDrag = false;\n        this.isFlag = false;\n        const originalDatas = e.originalDatas;\n\n        this.datas = originalDatas;\n        if (!originalDatas.draggable) {\n            originalDatas.draggable = {};\n        }\n        return {\n            ...this.move(client, e.inputEvent),\n            type: \"dragstart\",\n        };\n    }\n    public drag(client: number[], inputEvent: any) {\n        return this.move([\n            client[0] - this.prevX,\n            client[1] - this.prevY,\n        ], inputEvent);\n    }\n    public move(delta: number[], inputEvent: any): OnCustomDrag {\n        let clientX!: number;\n        let clientY!: number;\n        if (!this.isFlag) {\n            this.prevX = delta[0];\n            this.prevY = delta[1];\n            this.startX = delta[0];\n            this.startY = delta[1];\n\n            clientX = delta[0];\n            clientY = delta[1];\n\n            this.isFlag = true;\n        } else {\n\n            clientX = this.prevX + delta[0];\n            clientY = this.prevY + delta[1];\n            this.isDrag = true;\n        }\n\n        this.prevX = clientX;\n        this.prevY = clientY;\n\n        return {\n            type: \"drag\",\n            clientX,\n            clientY,\n            inputEvent,\n            isDrag: this.isDrag,\n            distX: clientX - this.startX,\n            distY: clientY - this.startY,\n            deltaX: delta[0],\n            deltaY: delta[1],\n            datas: this.datas.draggable,\n            originalDatas: this.datas,\n            parentEvent: true,\n            parentGesto: this,\n        };\n    }\n}\n","import { Able, MoveableGroupInterface, MoveableManagerInterface } from \"./types\";\nimport CustomGesto, { setCustomDrag } from \"./gesto/CustomGesto\";\n\nexport function fillChildEvents(\n    moveable: MoveableGroupInterface,\n    name: string,\n    e: any,\n): any[] {\n    const datas = e.originalDatas;\n\n    datas.groupable = datas.groupable || {};\n\n    const groupableDatas = datas.groupable;\n\n    groupableDatas.childDatas = groupableDatas.childDatas || [];\n\n    const childDatas = groupableDatas.childDatas;\n    const {\n        inputEvent,\n        isPinch,\n        clientX,\n        clientY,\n        distX,\n        distY,\n    } = e;\n\n    return moveable.moveables.map((child, i) => {\n        childDatas[i] = childDatas[i] || {};\n        childDatas[i][name] = childDatas[i][name] || {};\n\n        return {\n            inputEvent,\n            datas: childDatas[i][name],\n            originalDatas: childDatas[i],\n            isPinch,\n            clientX,\n            clientY,\n            distX,\n            distY,\n        };\n    });\n}\nexport function triggerChildGesto(\n    moveable: MoveableGroupInterface<any, any>,\n    able: Able,\n    type: string,\n    delta: number[],\n    e: any,\n    isConvert: boolean,\n) {\n    const isStart = !!type.match(/Start$/g);\n    const isEnd = !!type.match(/End$/g);\n    const isPinch = e.isPinch;\n    const datas = e.datas;\n    const events = fillChildEvents(moveable, able.name, e);\n\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent: any = ev;\n\n        if (isStart) {\n            childEvent = new CustomGesto().dragStart(delta, ev);\n        } else {\n            if (!childMoveable.state.gesto) {\n                childMoveable.state.gesto = datas.childGestos[i];\n            }\n            childEvent = setCustomDrag(ev, childMoveable.state, delta, isPinch, isConvert);\n        }\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n    if (isStart) {\n        datas.childGestos = moveables.map(child => child.state.gesto);\n    }\n    return childs;\n}\nexport function triggerChildAble<T extends Able>(\n    moveable: MoveableGroupInterface<any, any>,\n    able: T,\n    type: keyof T & string,\n    e: any,\n    eachEvent: (movebale: MoveableManagerInterface<any, any>, ev: any) => any = (_, ev) => ev,\n    callback?: (moveable: MoveableManagerInterface<any, any>, ev: any, result: any, index: number) => any,\n) {\n    const isEnd = !!type.match(/End$/g);\n    const events = fillChildEvents(moveable, able.name, e);\n    const moveables = moveable.moveables;\n    const childs = events.map((ev, i) => {\n        const childMoveable = moveables[i];\n        let childEvent = ev;\n\n        childEvent = eachEvent(childMoveable, ev);\n\n        const result = (able as any)[type]!(childMoveable,  { ...childEvent, parentFlag: true });\n\n        result && callback && callback(childMoveable, ev, result, i);\n\n        if (isEnd) {\n            childMoveable.state.gesto = null;\n        }\n        return result;\n    });\n\n    return childs;\n}\n","import {\n    invert, caculate, minus, plus,\n    convertPositionMatrix, average,\n    createScaleMatrix, multiply, fromTranslation, convertDimension,\n} from \"../matrix\";\nimport {\n    caculatePoses, getAbsoluteMatrix, getAbsolutePosesByState,\n    caculatePosition, caculateInversePosition, getTransform\n} from \"../utils\";\nimport { splitUnit, isArray, splitSpace } from \"@daybrush/utils\";\nimport {\n    MoveableManagerState, ResizableProps, MoveableManagerInterface,\n    OnTransformEvent, OnTransformStartEvent, DraggableProps, OnDrag\n} from \"../types\";\nimport Draggable from \"../ables/Draggable\";\nimport { setCustomDrag } from \"./CustomGesto\";\nimport { parse, parseMat } from \"css-to-mat\";\n\nexport function caculatePointerDist(moveable: MoveableManagerInterface, e: any) {\n    const { clientX, clientY, datas } = e;\n    const {\n        moveableClientRect,\n        rootMatrix,\n        is3d,\n        pos1,\n    } = moveable.state;\n    const { left, top } = moveableClientRect;\n    const n = is3d ? 4 : 3;\n    const [posX, posY] = minus(caculateInversePosition(rootMatrix, [clientX - left, clientY - top], n), pos1);\n    const [distX, distY] = getDragDist({ datas, distX: posX, distY: posY });\n\n    return [distX, distY];\n}\n\nexport function setDragStart(moveable: MoveableManagerInterface<any>, { datas }: any) {\n    const {\n        allMatrix,\n        beforeMatrix,\n        is3d,\n        left,\n        top,\n        origin,\n        offsetMatrix,\n        targetMatrix,\n        transformOrigin,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n\n    datas.is3d = is3d;\n    datas.matrix = allMatrix;\n    datas.targetMatrix = targetMatrix;\n    datas.beforeMatrix = beforeMatrix;\n    datas.offsetMatrix = offsetMatrix;\n    datas.transformOrigin = transformOrigin;\n    datas.inverseMatrix = invert(allMatrix, n);\n    datas.inverseBeforeMatrix = invert(beforeMatrix, n);\n    datas.absoluteOrigin = convertPositionMatrix(plus([left, top], origin), n);\n    datas.startDragBeforeDist = caculate(datas.inverseBeforeMatrix, datas.absoluteOrigin, n);\n    datas.startDragDist = caculate(datas.inverseMatrix, datas.absoluteOrigin, n);\n}\nexport function resolveTransformEvent(event: any, functionName: string) {\n    const {\n        datas,\n        originalDatas: {\n            beforeRenderable: originalDatas,\n        },\n    } = event;\n\n    const index = datas.transformIndex;\n    const nextTransforms = originalDatas.nextTransforms;\n    const nextTransformAppendedIndexes = originalDatas.nextTransformAppendedIndexes;\n    const nextIndex = index === -1 ? nextTransforms.length\n        : index + nextTransformAppendedIndexes.filter((i: number) => i < index).length;\n\n    const result = getTransform(nextTransforms, nextIndex);\n    const targetFunction = result.targetFunction;\n    const matFunctionName = functionName === \"rotate\" ? \"rotateZ\" : functionName;\n\n    datas.targetAllTransform = multiply(\n        result.beforeFunctionMatrix as number[],\n        result.afterFunctionMatrix as number[],\n        4);\n    datas.beforeFunctionTexts = result.beforeFunctionTexts;\n    datas.afterFunctionTexts = result.afterFunctionTexts;\n    datas.beforeTransform = result.beforeFunctionMatrix;\n    datas.targetTansform = result.targetFunctionMatrix;\n    datas.afterTransform = result.afterFunctionMatrix;\n\n    if (targetFunction.functionName === matFunctionName) {\n        datas.afterFunctionTexts.splice(0, 1);\n        datas.isAppendTransform = false;\n    } else {\n        datas.isAppendTransform = true;\n        originalDatas.nextTransformAppendedIndexes = [...nextTransformAppendedIndexes, nextIndex];\n    }\n}\n\nexport function convertTransformFormat(datas: any, value: any, dist: any) {\n    return `${datas.beforeFunctionTexts.join(\" \")} ${datas.isAppendTransform ? dist : value} ${datas.afterFunctionTexts.join(\" \")}`;\n}\nexport function getTransformDist({ datas, distX, distY }: any) {\n    const [bx, by] = getBeforeDragDist({ datas, distX, distY });\n    // B * [tx, ty] * A = [bx, by] * targetMatrix;\n    // [tx, ty] = B-1 * [bx, by] * targetMatrix * A-1 * [0, 0];\n\n    const res = getTransfromMatrix(datas, fromTranslation([bx, by], 4));\n\n    return caculate(res, convertPositionMatrix([0, 0, 0], 4), 4);\n}\nexport function getTransfromMatrix(datas: any, targetMatrix: number[], isAfter?: boolean) {\n    const {\n        beforeTransform,\n        afterTransform,\n        targetAllTransform,\n    } = datas;\n\n    // B * afterTargetMatrix * A = (targetMatrix * targetAllTransform)\n    // afterTargetMatrix = B-1 * targetMatrix * targetAllTransform * A-1\n    // nextTargetMatrix = (targetMatrix * targetAllTransform)\n    const nextTargetMatrix\n        = isAfter\n        ? multiply(targetAllTransform, targetMatrix, 4)\n        : multiply(targetMatrix, targetAllTransform, 4);\n\n    // res1 = B-1 * nextTargetMatrix\n    const res1 = multiply(invert(beforeTransform, 4), nextTargetMatrix, 4);\n\n    // res3 = res2 * A-1\n    const afterTargetMatrix = multiply(res1, invert(afterTransform, 4), 4);\n\n    return afterTargetMatrix;\n}\nexport function getBeforeDragDist({ datas, distX, distY }: any) {\n    // TT = BT\n    const {\n        inverseBeforeMatrix,\n        is3d,\n        startDragBeforeDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    // ABS_ORIGIN * [distX, distY] = BM * (ORIGIN + [tx, ty])\n    // BM -1 * ABS_ORIGIN * [distX, distY] - ORIGIN = [tx, ty]\n    return minus(\n        caculate(\n            inverseBeforeMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        startDragBeforeDist,\n    );\n}\nexport function getDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        inverseBeforeMatrix,\n        inverseMatrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        caculate(\n            isBefore ? inverseBeforeMatrix : inverseMatrix,\n            plus(absoluteOrigin, [distX, distY]),\n            n,\n        ),\n        isBefore ? startDragBeforeDist : startDragDist,\n    );\n}\nexport function getInverseDragDist({ datas, distX, distY }: any, isBefore?: boolean) {\n    const {\n        beforeMatrix,\n        matrix,\n        is3d,\n        startDragBeforeDist,\n        startDragDist,\n        absoluteOrigin,\n    } = datas;\n    const n = is3d ? 4 : 3;\n\n    return minus(\n        caculate(\n            isBefore ? beforeMatrix : matrix,\n            plus(isBefore ? startDragBeforeDist : startDragDist, [distX, distY]),\n            n,\n        ),\n        absoluteOrigin,\n    );\n}\n\nexport function caculateTransformOrigin(\n    transformOrigin: string[],\n    width: number,\n    height: number,\n    prevWidth: number = width,\n    prevHeight: number = height,\n    prevOrigin: number[] = [0, 0],\n) {\n\n    if (!transformOrigin) {\n        return prevOrigin;\n    }\n    return transformOrigin.map((pos, i) => {\n        const { value, unit } = splitUnit(pos);\n\n        const prevSize = (i ? prevHeight : prevWidth);\n        const size = (i ? height : width);\n        if (pos === \"%\" || isNaN(value)) {\n            // no value but %\n\n            const measureRatio = prevSize ? prevOrigin[i] / prevSize : 0;\n\n            return size * measureRatio;\n        } else if (unit !== \"%\") {\n            return value;\n        }\n        return size * value / 100;\n    });\n}\nexport function getPosIndexesByDirection(direction: number[]) {\n    const indexes: number[] = [];\n\n    if (direction[1] >= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(3);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(2);\n        }\n    }\n    if (direction[1] <= 0) {\n        if (direction[0] >= 0) {\n            indexes.push(1);\n        }\n        if (direction[0] <= 0) {\n            indexes.push(0);\n        }\n    }\n    return indexes;\n}\nexport function getPosesByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    return getPosIndexesByDirection(direction).map(index => poses[index]);\n}\nexport function getPosByDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos1)       [0, -1](pos1,pos2)       [1, -1](pos2)\n    [-1, 0](pos1, pos3)                           [1, 0](pos2, pos4)\n    [-1, 1](pos3)        [0, 1](pos3, pos4)       [1, 1](pos4)\n    */\n    const nextPoses = getPosesByDirection(poses, direction);\n\n    return [\n        average(...nextPoses.map(pos => pos[0])),\n        average(...nextPoses.map(pos => pos[1])),\n    ];\n}\nexport function getPosByReverseDirection(\n    poses: number[][],\n    direction: number[],\n) {\n    /*\n    [-1, -1](pos4)       [0, -1](pos3,pos4)       [1, -1](pos3)\n    [-1, 0](pos2, pos4)                           [1, 0](pos3, pos1)\n    [-1, 1](pos2)        [0, 1](pos1, pos2)       [1, 1](pos1)\n    */\n\n    return getPosByDirection(poses, direction.map(dir => -dir));\n}\n\nfunction getDist(\n    startPos: number[],\n    matrix: number[],\n    width: number,\n    height: number,\n    n: number,\n    direction: number[],\n) {\n    const poses = caculatePoses(matrix, width, height, n);\n    const pos = getPosByReverseDirection(poses, direction);\n    const distX = startPos[0] - pos[0];\n    const distY = startPos[1] - pos[1];\n\n    return [distX, distY];\n}\nexport function getNextMatrix(\n    offsetMatrix: number[],\n    targetMatrix: number[],\n    origin: number[],\n    n: number,\n) {\n    return multiply(\n        offsetMatrix,\n        getAbsoluteMatrix(targetMatrix, n, origin),\n        n,\n    );\n}\nexport function getNextTransformMatrix(\n    state: MoveableManagerState<any>,\n    datas: any,\n    transform: string,\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n    } = state;\n    const {\n        beforeTransform,\n        afterTransform,\n    } = datas;\n    const n = is3d ? 4 : 3;\n    const targetTransform = parseMat([transform]);\n\n    return getNextMatrix(\n        offsetMatrix,\n        convertDimension(multiply(multiply(beforeTransform, targetTransform as any, 4), afterTransform, 4), 4, n),\n        transformOrigin,\n        n,\n    );\n}\nexport function scaleMatrix(\n    state: MoveableManagerState<any>,\n    scale: number[],\n) {\n    const {\n        transformOrigin,\n        offsetMatrix,\n        is3d,\n        targetMatrix,\n    } = state;\n    const n = is3d ? 4 : 3;\n\n    return getNextMatrix(\n        offsetMatrix,\n        multiply(targetMatrix, createScaleMatrix(scale, n), n),\n        transformOrigin,\n        n,\n    );\n}\nexport function getScaleDelta(\n    moveable: MoveableManagerInterface<any>,\n    scale: number[],\n    direction: number[],\n    fixedPosition: number[],\n) {\n    const state = moveable.state;\n    const {\n        is3d,\n        left,\n        top,\n        width,\n        height,\n    } = state;\n\n    const n = is3d ? 4 : 3;\n    const groupable = moveable.props.groupable;\n    const nextMatrix = scaleMatrix(moveable.state, scale);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, direction);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\n\nexport function fillTransformStartEvent(e: any): OnTransformStartEvent {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    return {\n        setTransform: (transform: string | string[], index: number = -1) => {\n            originalDatas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            setTransformIndex(e, index);\n        },\n        setTransformIndex: (index: number) => {\n            setTransformIndex(e, index);\n        },\n    };\n}\nexport function setDefaultTransformIndex(e: any) {\n    setTransformIndex(e, -1);\n}\nexport function setTransformIndex(e: any, index: number) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n    const datas = e.datas;\n    datas.transformIndex = index;\n    if (index === -1) {\n        return;\n    }\n    const transform = originalDatas.startTransforms[index];\n\n    if (!transform) {\n        return;\n    }\n    const info = parse([transform]);\n\n    datas.startValue = info[0].functionValue;\n}\nexport function fillOriginalTransform(\n    e: any,\n    transform: string,\n) {\n    const originalDatas = e.originalDatas.beforeRenderable;\n\n    originalDatas.nextTransforms = splitSpace(transform);\n}\nexport function fillTransformEvent(\n    moveable: MoveableManagerInterface<DraggableProps>,\n    nextTransform: string,\n    delta: number[],\n    isPinch: boolean,\n    e: any,\n): OnTransformEvent {\n    fillOriginalTransform(e, nextTransform);\n    return {\n        transform: nextTransform,\n        drag: Draggable.drag(\n            moveable,\n            setCustomDrag(e, moveable.state, delta, isPinch, false),\n        ) as OnDrag,\n    };\n}\nexport function getTranslateDist(\n    moveable: MoveableManagerInterface<any>,\n    transform: string,\n    fixedPosition: number[],\n    fixedDirection: number[],\n    datas: any,\n) {\n    const state = moveable.state;\n    const {\n        left,\n        top,\n    } = state;\n\n    const groupable = moveable.props.groupable;\n    const nextMatrix = getNextTransformMatrix(moveable.state, datas, transform);\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    // const dist = getDist(fixedPosition, nextMatrix, width, height, n, direction);\n    const nextFixedPosition = getDirectionOffset(moveable, fixedDirection, nextMatrix);\n    const dist = minus(fixedPosition, nextFixedPosition);\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getScaleDist(\n    moveable: MoveableManagerInterface<any>,\n    scaleDist: number[],\n    direction: number[],\n    fixedPosition: number[],\n    datas: any,\n) {\n    return getTranslateDist(\n        moveable,\n        `scale(${scaleDist.join(\", \")})`,\n        fixedPosition,\n        direction.map(dir => -dir),\n        datas,\n    );\n}\nexport function getOriginDirection(moveable: MoveableManagerInterface<any>) {\n    const {\n        width,\n        height,\n        transformOrigin,\n    } = moveable.state;\n    return [\n        -1 + transformOrigin[0] / (width / 2),\n        -1 + transformOrigin[1] / (height / 2),\n    ];\n}\nexport function getDirectionOffset(\n    moveable: MoveableManagerInterface, direction: number[],\n    nextMatrix: number[] = moveable.state.allMatrix,\n) {\n    const {\n        width,\n        height,\n        is3d,\n    } = moveable.state;\n    const n = is3d ? 4 : 3;\n    const nextFixedOffset = [\n        width / 2 * (1 + direction[0]),\n        height / 2 * (1 + direction[1]),\n    ];\n    return caculatePosition(nextMatrix, nextFixedOffset, n);\n}\nexport function getRotateDist(\n    moveable: MoveableManagerInterface<any>,\n    rotateDist: number,\n    fixedPosition: number[],\n    datas: any,\n) {\n    const fixedDirection = getOriginDirection(moveable);\n\n    return getTranslateDist(\n        moveable,\n        `rotate(${rotateDist}deg)`,\n        fixedPosition,\n        fixedDirection,\n        datas,\n    );\n}\nexport function getResizeDist(\n    moveable: MoveableManagerInterface<any>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPosition: number[],\n    transformOrigin: string[],\n) {\n    const {\n        groupable,\n    } = moveable.props;\n    const {\n        transformOrigin: prevOrigin,\n        targetMatrix,\n        offsetMatrix,\n        is3d,\n        width: prevWidth,\n        height: prevHeight,\n        left,\n        top,\n    } = moveable.state;\n\n    const n = is3d ? 4 : 3;\n    const nextOrigin = caculateTransformOrigin(\n        transformOrigin!,\n        width,\n        height,\n        prevWidth,\n        prevHeight,\n        prevOrigin,\n    );\n    const groupLeft = groupable ? left : 0;\n    const groupTop = groupable ? top : 0;\n    const nextMatrix = getNextMatrix(offsetMatrix, targetMatrix, nextOrigin, n);\n    const dist = getDist(fixedPosition, nextMatrix, width, height, n, direction);\n\n    return minus(dist, [groupLeft, groupTop]);\n}\nexport function getStartDirection(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    if (!direction[0] && !direction[1]) {\n        return [0, 0];\n    }\n    const baseDirection = [-1, -1];\n    return [\n        direction[0] ? direction[0] : baseDirection[0] * -1,\n        direction[1] ? direction[1] : baseDirection[1] * -1,\n    ];\n}\nexport function getAbsoluteFixedPosition(\n    moveable: MoveableManagerInterface<ResizableProps>,\n    direction: number[],\n) {\n    return getPosByReverseDirection(getAbsolutePosesByState(moveable.state), direction);\n}\n","import {\n    SnapInfo, SnappableProps, SnappableState,\n    Guideline, ResizableProps, ScalableProps, SnapOffsetInfo, MoveableManagerInterface} from \"../../types\";\nimport { selectValue, throttle, getAbsolutePosesByState, getRect, groupBy, getTinyDist } from \"../../utils\";\nimport { getPosByDirection, getPosesByDirection } from \"../../gesto/GestoUtils\";\nimport { TINY_NUM } from \"../../consts\";\nimport { minus } from \"../../matrix\";\n\nexport function getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    snapThreshold: number,\n    index: number,\n    [start, end]: number[],\n    [otherStart, otherEnd]: number[],\n) {\n    const totalGuidelines: Guideline[] = [];\n    const otherIndex = index ? 0 : 1;\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n\n    const elementGuidelines\n        = groupBy(guidelines.filter(({ type: guidelineType }) => guidelineType === type), ({ element }) => element)\n            .map(group => group[0])\n            .filter(({ pos, sizes }) => pos[otherIndex] <= otherEnd\n                && otherStart <= pos[otherIndex] + sizes![otherIndex]);\n\n    elementGuidelines.forEach(guideline1 => {\n        const elementStart = guideline1.pos[index];\n        const elementEnd = elementStart + guideline1.sizes![index];\n\n        elementGuidelines.forEach(({\n            pos: guideline2Pos,\n            sizes: guideline2Sizes,\n            element: guideline2Element,\n        }) => {\n            const targetStart = guideline2Pos[index];\n            const targetEnd = targetStart + guideline2Sizes![index];\n            let pos = 0;\n            let gap = 0;\n            let canSnap = true;\n\n            if (elementEnd <= targetStart) {\n                // gap -\n                gap = elementEnd - targetStart;\n                pos = targetEnd - gap;\n\n                if (start < pos - snapThreshold) {\n                    canSnap = false;\n                }\n                // element target moveable\n            } else if (targetEnd <= elementStart) {\n                // gap +\n                gap = elementStart - targetEnd;\n                pos = targetStart - gap;\n\n                if (end > pos + snapThreshold) {\n                    canSnap = false;\n                }\n                // moveable target element\n            } else {\n                return;\n            }\n            if (canSnap) {\n                totalGuidelines.push({\n                    pos: otherType === \"vertical\" ? [pos, guideline2Pos[1]] : [guideline2Pos[0], pos],\n                    element: guideline2Element,\n                    sizes: guideline2Sizes,\n                    size: 0,\n                    type: otherType,\n                    gap,\n                    gapGuidelines: elementGuidelines,\n                });\n            }\n            if (elementEnd <= start && end <= targetStart) {\n                // elementEnd   moveable   target\n                const centerPos = ((targetStart + elementEnd) - (end - start)) / 2;\n\n                if (throttle(start - (centerPos - snapThreshold), 0.1) >= 0) {\n                    totalGuidelines.push({\n                        pos: otherType === \"vertical\" ? [centerPos, guideline2Pos[1]] : [guideline2Pos[0], centerPos],\n                        element: guideline2Element,\n                        sizes: guideline2Sizes,\n                        size: 0,\n                        type: otherType,\n                        gap: elementEnd - start,\n                        gapGuidelines: elementGuidelines,\n                    });\n                }\n            }\n        });\n    });\n    return totalGuidelines;\n}\nexport function addGuidelines(\n    totalGuidelines: Guideline[],\n    width: number,\n    height: number,\n    horizontalGuidelines?: number[] | false,\n    verticalGuidelines?: number[] | false,\n): Guideline[] {\n    horizontalGuidelines && horizontalGuidelines!.forEach(pos => {\n        totalGuidelines.push({ type: \"horizontal\", pos: [0, throttle(pos, 0.1)], size: width! });\n    });\n    verticalGuidelines && verticalGuidelines!.forEach(pos => {\n        totalGuidelines.push({ type: \"vertical\", pos: [throttle(pos, 0.1), 0], size: height! });\n    });\n    return totalGuidelines;\n}\nexport function getTotalGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n) {\n    const {\n        guidelines,\n        containerClientRect: {\n            scrollHeight: containerHeight,\n            scrollWidth: containerWidth,\n        },\n    } = moveable.state;\n    const props = moveable.props;\n    const {\n        snapHorizontal = true,\n        snapVertical = true,\n        snapGap = true,\n        verticalGuidelines,\n        horizontalGuidelines,\n        snapThreshold = 5,\n    } = props;\n    const totalGuidelines: Guideline[] = [...guidelines];\n\n    if (snapGap) {\n        const { top, left, bottom, right } = getRect(getAbsolutePosesByState(moveable.state));\n        const elementGuidelines = (guidelines as Guideline[]).filter(({ element }) => element);\n\n        totalGuidelines.push(...getGapGuidelines(\n            elementGuidelines,\n            \"horizontal\",\n            snapThreshold,\n            0,\n            [left, right],\n            [top, bottom],\n        ), ...getGapGuidelines(\n            elementGuidelines,\n            \"vertical\",\n            snapThreshold,\n            1,\n            [top, bottom],\n            [left, right],\n        ));\n    }\n\n    addGuidelines(\n        totalGuidelines,\n        containerWidth!,\n        containerHeight!,\n        snapHorizontal && horizontalGuidelines,\n        snapVertical && verticalGuidelines,\n    );\n\n    return totalGuidelines;\n}\nexport function checkMoveableSnapPoses(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    posesX: number[],\n    posesY: number[],\n    snapCenter?: boolean,\n    customSnapThreshold?: number,\n) {\n    const totalGuidelines = getTotalGuidelines(moveable);\n    const props = moveable.props;\n    const {\n        snapElement = true,\n    } = props;\n    const snapThreshold = selectValue<number>(customSnapThreshold, props.snapThreshold, 5);\n\n    return checkSnapPoses(\n        totalGuidelines,\n        posesX,\n        posesY,\n        {\n            snapThreshold,\n            snapCenter,\n            snapElement,\n        },\n    );\n}\n\nexport function checkSnapPoses(\n    guidelines: Guideline[],\n    posesX: number[],\n    posesY: number[],\n    options: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    },\n) {\n    return {\n        vertical: checkSnap(guidelines, \"vertical\", posesX, options),\n        horizontal: checkSnap(guidelines, \"horizontal\", posesY, options),\n    };\n}\nexport function checkSnapKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n): {\n    vertical: SnapOffsetInfo,\n    horizontal: SnapOffsetInfo,\n} {\n    const [endX, endY] = endPos;\n    const [startX, startY] = startPos;\n    let [dx, dy] = minus(endPos, startPos);\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    dx = getTinyDist(dx);\n    dy = getTinyDist(dy);\n\n    const verticalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo: SnapOffsetInfo = {\n        isSnap: false,\n        offset: 0,\n        pos: 0,\n    };\n\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    }\n    const {\n        vertical: verticalSnapInfo,\n        horizontal: horizontalSnapInfo,\n    } = checkMoveableSnapPoses(moveable, dx ? [endX] : [], dy ? [endY] : []);\n\n    verticalSnapInfo.posInfos.filter(({ pos }) => {\n        return isRight ? pos >= startX : pos <= startX;\n    });\n    horizontalSnapInfo.posInfos.filter(({ pos }) => {\n        return isBottom ? pos >= startY : pos <= startY;\n    });\n    verticalSnapInfo.isSnap = verticalSnapInfo.posInfos.length > 0;\n    horizontalSnapInfo.isSnap = horizontalSnapInfo.posInfos.length > 0;\n\n    const {\n        isSnap: isVerticalSnap,\n        guideline: verticalGuideline,\n    } = getNearestSnapGuidelineInfo(verticalSnapInfo);\n    const {\n        isSnap: isHorizontalSnap,\n        guideline: horizontalGuideline,\n    } = getNearestSnapGuidelineInfo(horizontalSnapInfo);\n    const horizontalPos = isHorizontalSnap ? horizontalGuideline!.pos[1] : 0;\n    const verticalPos = isVerticalSnap ? verticalGuideline!.pos[0] : 0;\n\n    if (dx === 0) {\n        if (isHorizontalSnap) {\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = horizontalGuideline!.pos[1];\n            horizontalInfo.offset = endY - horizontalInfo.pos;\n        }\n    } else if (dy === 0) {\n        if (isVerticalSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = verticalPos;\n            verticalInfo.offset = endX - verticalPos;\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isSnap = false;\n\n        if (isVerticalSnap) {\n            x = verticalPos;\n            y = a * x + b;\n            isSnap = true;\n        } else if (isHorizontalSnap) {\n            y = horizontalPos;\n            x = (y - b) / a;\n            isSnap = true;\n        }\n        if (isSnap) {\n            verticalInfo.isSnap = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isSnap = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\n\nexport function checkSnaps(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    rect: {\n        left?: number,\n        top?: number,\n        bottom?: number,\n        right?: number,\n        center?: number,\n        middle?: number,\n    },\n    isCenter: boolean,\n    customSnapThreshold?: number,\n) {\n    const snapCenter = moveable.props.snapCenter;\n    const isSnapCenter = snapCenter! && isCenter;\n\n    let verticalNames: Array<\"left\" | \"center\" | \"right\"> = [\"left\", \"right\"];\n    let horizontalNames: Array<\"top\" | \"middle\" | \"bottom\"> = [\"top\", \"bottom\"];\n\n    if (isSnapCenter) {\n        verticalNames.push(\"center\");\n        horizontalNames.push(\"middle\");\n    }\n    verticalNames = verticalNames.filter(name => name in rect);\n    horizontalNames = horizontalNames.filter(name => name in rect);\n\n    return checkMoveableSnapPoses(\n        moveable,\n        verticalNames.map(name => rect[name]!),\n        horizontalNames.map(name => rect[name]!),\n        isSnapCenter,\n        customSnapThreshold,\n    );\n}\n\nexport function getNearestSnapGuidelineInfo(\n    snapInfo: SnapInfo,\n) {\n    const isSnap = snapInfo.isSnap;\n\n    if (!isSnap) {\n        return {\n            isSnap: false,\n            offset: 0,\n            dist: -1,\n            pos: 0,\n            guideline: null,\n        };\n    }\n    const posInfo = snapInfo.posInfos[0];\n    const guidelineInfo = posInfo!.guidelineInfos[0];\n    const offset = guidelineInfo!.offset;\n    const dist = guidelineInfo!.dist;\n    const guideline = guidelineInfo!.guideline;\n\n    return {\n        isSnap,\n        offset,\n        dist,\n        pos: posInfo!.pos,\n        guideline,\n    };\n}\n\nfunction checkSnap(\n    guidelines: Guideline[],\n    targetType: \"horizontal\" | \"vertical\",\n    targetPoses: number[],\n    {\n        snapThreshold = 5,\n        snapElement,\n        snapCenter,\n    }: {\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    } = {},\n): SnapInfo {\n    if (!guidelines || !guidelines.length) {\n        return {\n            isSnap: false,\n            index: -1,\n            posInfos: [],\n        };\n    }\n    const isVertical = targetType === \"vertical\";\n    const posType = isVertical ? 0 : 1;\n\n    const snapPosInfos = targetPoses.map((targetPos, index) => {\n        const guidelineInfos = guidelines.map(guideline => {\n            const { pos } = guideline;\n            const offset = targetPos - pos[posType];\n\n            return {\n                offset,\n                dist: Math.abs(offset),\n                guideline,\n            };\n        }).filter(({ guideline, dist }) => {\n            const { type, center, element } = guideline;\n            if (\n                (!snapElement && element)\n                || (!snapCenter && center)\n                || type !== targetType\n                || dist > snapThreshold\n            ) {\n                return false;\n            }\n            return true;\n        }).sort(\n            (a, b) => a.dist - b.dist,\n        );\n\n        return {\n            pos: targetPos,\n            index,\n            guidelineInfos,\n        };\n    }).filter(snapPosInfo => {\n        return snapPosInfo.guidelineInfos.length > 0;\n    }).sort((a, b) => {\n        return a.guidelineInfos[0].dist - b.guidelineInfos[0].dist;\n    });\n\n    const isSnap = snapPosInfos.length > 0;\n    return {\n        isSnap,\n        index: isSnap ? snapPosInfos[0].index : -1,\n        posInfos: snapPosInfos,\n    };\n}\n\nexport function getSnapInfosByDirection(\n    moveable: MoveableManagerInterface<SnappableProps & (ResizableProps | ScalableProps), SnappableState>,\n    poses: number[][],\n    snapDirection: number[],\n) {\n    let nextPoses: number[][] = [];\n    if (snapDirection[0] && snapDirection[1]) {\n        nextPoses = [\n            snapDirection,\n            [-snapDirection[0], snapDirection[1]],\n            [snapDirection[0], -snapDirection[1]],\n        ].map(direction => getPosByDirection(poses, direction));\n    } else if (!snapDirection[0] && !snapDirection[1]) {\n        const alignPoses = [poses[0], poses[1], poses[3], poses[2], poses[0]];\n\n        for (let i = 0; i < 4; ++i) {\n            nextPoses.push(alignPoses[i]);\n            nextPoses.push([\n                (alignPoses[i][0] + alignPoses[i + 1][0]) / 2,\n                (alignPoses[i][1] + alignPoses[i + 1][1]) / 2,\n            ]);\n        }\n    } else {\n        if (moveable.props.keepRatio) {\n            nextPoses = [\n                [-1, -1],\n                [-1, 1],\n                [1, -1],\n                [1, 1],\n                snapDirection,\n            ].map(dir => getPosByDirection(poses, dir));\n        } else {\n            nextPoses = getPosesByDirection(poses, snapDirection);\n\n            if (nextPoses.length > 1) {\n                nextPoses.push([\n                    (nextPoses[0][0] + nextPoses[1][0]) / 2,\n                    (nextPoses[0][1] + nextPoses[1][1]) / 2,\n                ]);\n            }\n        }\n    }\n    return checkMoveableSnapPoses(moveable, nextPoses.map(pos => pos[0]), nextPoses.map(pos => pos[1]), true, 1);\n}\n\nexport function checkSnapBoundPriority(\n    a: { isBound: boolean, isSnap: boolean, offset: number },\n    b: { isBound: boolean, isSnap: boolean, offset: number },\n) {\n    const aDist = Math.abs(a.offset);\n    const bDist = Math.abs(b.offset);\n\n    if (a.isBound && b.isBound) {\n        return bDist - aDist;\n    } else if (a.isBound) {\n        return -1;\n    } else if (b.isBound) {\n        return 1;\n    } else if (a.isSnap && b.isSnap) {\n        return bDist - aDist;\n    } else if (a.isSnap) {\n        return -1;\n    } else if (b.isSnap) {\n        return 1;\n    } else if (aDist < TINY_NUM) {\n        return 1;\n    } else if (bDist < TINY_NUM) {\n        return -1;\n    }\n    return aDist - bDist;\n}\nexport function getNearOffsetInfo<T extends { offset: number[], isBound: boolean, isSnap: boolean, sign: number[] }>(\n    offsets: T[],\n    index: number,\n) {\n    return offsets.slice().sort((a, b) => {\n        const aSign = a.sign[index];\n        const bSign = b.sign[index];\n        const aOffset = a.offset[index];\n        const bOffset = b.offset[index];\n        // -1 The positions of a and b do not change.\n        // 1 The positions of a and b are reversed.\n        if (!aSign) {\n            return 1;\n        } else if (!bSign) {\n            return -1;\n        }\n        return checkSnapBoundPriority(\n            { isBound: a.isBound, isSnap: a.isSnap, offset: aOffset },\n            { isBound: b.isBound, isSnap: b.isSnap, offset: bOffset },\n        );\n    })[0];\n}\n","import { maxOffset, getDistSize, throttle, getTinyDist } from \"../../utils\";\nimport { average, rotate, getRad } from \"../../matrix\";\nimport { SnappableProps, DraggableProps, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { getDragDist, getPosByDirection, getInverseDragDist } from \"../../gesto/GestoUtils\";\nimport { getNearOffsetInfo } from \"./snap\";\nimport { TINY_NUM } from \"../../consts\";\n\nfunction isStartLine(dot: number[], line: number[][]) {\n    // l    o     => true\n    // o    l    => false\n    const cx = average(line[0][0], line[1][0]);\n    const cy = average(line[0][1], line[1][1]);\n\n    return {\n        vertical: cx <= dot[0],\n        horizontal: cy <= dot[1],\n    };\n}\nfunction hitTestLine(\n    dot: number[],\n    [pos1, pos2]: number[][],\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    let test1: number;\n    let test2: number;\n    if (!dx) {\n        test1 = pos1[0];\n        test2 = dot[0];\n    } else if (!dy) {\n        test1 = pos1[1];\n        test2 = dot[1];\n    } else {\n        const a = dy / dx;\n\n        // y = a * (x - pos1) + pos1\n        test1 = a * (dot[0] - pos1[0]) + pos1[1];\n        test2 = dot[1];\n    }\n    return test1 - test2;\n}\nfunction isSameStartLine(dots: number[][], line: number[][], error: number = TINY_NUM) {\n    const centerSign = hitTestLine(dots[0], line) <= 0;\n\n    return dots.slice(1).every(dot => {\n        const value = hitTestLine(dot, line);\n        const sign = value <= 0;\n        return sign === centerSign || Math.abs(value) <= error;\n    });\n}\nfunction checkInnerBoundDot(\n    pos: number,\n    start: number,\n    end: number,\n    isStart: boolean,\n    threshold: number = 0,\n) {\n    if (\n        (isStart && start - threshold <= pos)\n        || (!isStart && pos <= end + threshold)\n    ) {\n        // false 402 565 602 => 37 ([0, 37])\n        // true 400 524.9712603540036 600 => 124 ([124, 0])\n        // true 400 410 600 => 10 ([10, 0])\n        return {\n            isBound: true,\n            offset: isStart ? start - pos : end - pos,\n        };\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\n\nfunction checkInnerBound(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    line: number[][],\n    center: number[],\n) {\n    const bounds = moveable.props.innerBounds;\n\n    if (!bounds) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n    const { left, top, width, height } = bounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n    const {\n        horizontal: isHorizontalStart,\n        vertical: isVerticalStart,\n    } = isStartLine(center, line);\n\n    if (isSameStartLine([\n        center,\n        [left, top],\n        [left + width, top],\n        [left, top + height],\n        [left + width, top + height],\n    ], line)) {\n        return {\n            isAllBound: false,\n            isBound: false,\n            isVerticalBound: false,\n            isHorizontalBound: false,\n            offset: [0, 0],\n        };\n    }\n\n    // test vertical\n    const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart);\n    const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart);\n\n    // test horizontal\n    const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart);\n    const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart);\n\n    const isAllVerticalBound = topBoundInfo.isBound && bottomBoundInfo.isBound;\n    const isVerticalBound = topBoundInfo.isBound || bottomBoundInfo.isBound;\n    const isAllHorizontalBound = leftBoundInfo.isBound && rightBoundInfo.isBound;\n    const isHorizontalBound = leftBoundInfo.isBound || rightBoundInfo.isBound;\n    const verticalOffset = maxOffset(topBoundInfo.offset, bottomBoundInfo.offset);\n    const horizontalOffset = maxOffset(leftBoundInfo.offset, rightBoundInfo.offset);\n\n    let offset = [0, 0];\n    let isBound = false;\n    let isAllBound = false;\n\n    if (Math.abs(horizontalOffset) < Math.abs(verticalOffset)) {\n        offset = [verticalOffset, 0];\n        isBound = isVerticalBound;\n        isAllBound = isAllVerticalBound;\n    } else {\n        offset = [0, horizontalOffset];\n        isBound = isHorizontalBound;\n        isAllBound = isAllHorizontalBound;\n    }\n    return {\n        isAllBound,\n        isVerticalBound,\n        isHorizontalBound,\n        isBound,\n        offset,\n    };\n}\n\nfunction checkLineBoundCollision(\n    line: number[][],\n    boundLine: number[][],\n    isStart: boolean,\n    threshold?: number,\n    isRender?: boolean,\n) {\n    const dot1 = line[0];\n    const dot2 = line[1];\n    const boundDot1 = boundLine[0];\n    const boundDot2 = boundLine[1];\n    const dy1 = getTinyDist(dot2[1] - dot1[1]);\n    const dx1 = getTinyDist(dot2[0] - dot1[0]);\n\n    const dy2 = getTinyDist(boundDot2[1] - boundDot1[1]);\n    const dx2 = getTinyDist(boundDot2[0] - boundDot1[0]);\n\n    // dx2 or dy2 is zero\n    if (!dx2) {\n        // vertical\n        if (isRender && !dy1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dx1) {\n            // const y = dy1 ? dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1] : dot1[1];\n            const y = dy1 / dx1 * (boundDot1[0] - dot1[0]) + dot1[1];\n\n            // boundDot1[1] <= y  <= boundDot2[1]\n            return checkInnerBoundDot(y, boundDot1[1], boundDot2[1], isStart, threshold);\n        } else {\n            const offset = boundDot1[0] - dot1[0];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    } else if (!dy2) {\n        // horizontal\n        if (isRender && !dx1) {\n            // 90deg\n            return {\n                isBound: false,\n                offset: 0,\n            };\n        } else if (dy1) {\n            // y = a * (x - x1) + y1\n            // x = (y - y1) / a + x1\n            // const a = dy1 / dx1;\n            // const x = dx1 ? (boundDot1[1] - dot1[1]) / a + dot1[0] : dot1[0];\n            const x = (boundDot1[1] - dot1[1]) / (dy1 / dx1) + dot1[0];\n\n            // boundDot1[0] <= x && x <= boundDot2[0]\n            return checkInnerBoundDot(x, boundDot1[0], boundDot2[0], isStart, threshold);\n        } else {\n            const offset = boundDot1[1] - dot1[1];\n\n            const isBound = Math.abs(offset) <= (threshold || 0);\n\n            return {\n                isBound,\n                offset: isBound ? offset : 0,\n            };\n        }\n    }\n    return {\n        isBound: false,\n        offset: 0,\n    };\n}\nexport function getInnerBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    lines: number[][][],\n    center: number[],\n    datas: any,\n) {\n    return lines.map(([multiple, pos1, pos2]) => {\n        const {\n            isBound,\n            offset,\n            isVerticalBound,\n            isHorizontalBound,\n        } = checkInnerBound(moveable, [pos1, pos2], center);\n\n        const sizeOffset = getDragDist({\n            datas,\n            distX: offset[0],\n            distY: offset[1],\n        }).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound,\n            isVerticalBound,\n            isHorizontalBound,\n            isSnap: false,\n            offset: sizeOffset,\n        };\n    });\n}\n\nexport function getInnerBoundDragInfo(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    poses: number[][],\n    datas: any,\n) {\n    const lines = getCheckSnapLines(poses, [0, 0], false).map(([sign, pos1, pos2]) => {\n        return [\n            sign.map(dir => Math.abs(dir) * 2),\n            pos1,\n            pos2,\n        ];\n    });\n    const innerBoundInfo = getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas);\n    const widthOffsetInfo = getNearOffsetInfo(innerBoundInfo, 0);\n    const heightOffsetInfo = getNearOffsetInfo(innerBoundInfo, 1);\n    let verticalOffset = 0;\n    let horizontalOffset = 0;\n    const isVerticalBound = widthOffsetInfo.isVerticalBound || heightOffsetInfo.isVerticalBound;\n    const isHorizontalBound = widthOffsetInfo.isHorizontalBound || heightOffsetInfo.isHorizontalBound;\n\n    if (isVerticalBound || isHorizontalBound) {\n        [verticalOffset, horizontalOffset] = getInverseDragDist({\n            datas,\n            distX: -widthOffsetInfo.offset[0],\n            distY: -heightOffsetInfo.offset[1],\n        });\n    }\n\n    return {\n        vertical: {\n            isBound: isVerticalBound,\n            offset: verticalOffset,\n        },\n        horizontal: {\n            isBound: isHorizontalBound,\n            offset: horizontalOffset,\n        },\n    };\n}\nexport function getCheckSnapLineDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const lineDirections: number[][][] = [];\n    const x = direction[0];\n    const y = direction[1];\n    if (x && y) {\n        lineDirections.push(\n            [[0, y * 2], direction, [-x, y]],\n            [[x * 2, 0], direction, [x, -y]],\n        );\n    } else if (x) {\n        // vertcal\n        lineDirections.push(\n            [[x * 2, 0], [x, 1], [x, -1]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[0, -1], [x, -1], [-x, -1]],\n                [[0, 1], [x, 1], [-x, 1]],\n            );\n        }\n    } else if (y) {\n        // horizontal\n        lineDirections.push(\n            [[0, y * 2], [1, y], [-1, y]],\n        );\n        if (keepRatio) {\n            lineDirections.push(\n                [[-1, 0], [-1, y], [-1, -y]],\n                [[1, 0], [1, y], [1, -y]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        lineDirections.push(\n            [[-1, 0], [-1, -1], [-1, 1]],\n            [[1, 0], [1, -1], [1, 1]],\n            [[0, -1], [-1, -1], [1, -1]],\n            [[0, 1], [-1, 1], [1, 1]],\n        );\n    }\n\n    return lineDirections;\n}\nexport function getCheckSnapLines(\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n) {\n    return getCheckSnapLineDirections(direction, keepRatio).map(([sign, dir1, dir2]) => {\n        return [\n            sign,\n            getPosByDirection(poses, dir1),\n            getPosByDirection(poses, dir2),\n        ];\n    });\n}\n\nfunction isBoundRotate(\n    relativePoses: number[][],\n    boundDots: number[][],\n    center: number[],\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n    const dots = [\n        center,\n        ...boundDots,\n    ];\n    return [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].some((line, i) => !isSameStartLine(dots, line));\n}\nfunction getDistPointLine([pos1, pos2]: number[][]) {\n    // x = 0, y = 0\n    // d = (ax + by + c) / root(a2 + b2)\n\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return Math.abs(pos1[0]);\n    }\n    if (!dy) {\n        return Math.abs(pos1[1]);\n    }\n    // y - y1 = a(x - x1)\n    // 0 = ax -y + -a * x1 + y1\n\n    const a = dy / dx;\n\n    return Math.abs((-a * pos1[0] + pos1[1]) / Math.sqrt(Math.pow(a, 2) + 1));\n}\nfunction solveReverseLine([pos1, pos2]: number[][]) {\n    const dx = pos2[0] - pos1[0];\n    const dy = pos2[1] - pos1[1];\n\n    if (!dx) {\n        return [pos1[0], 0];\n    }\n    if (!dy) {\n        return [0, pos1[1]];\n    }\n    const a = dy / dx;\n    // y - y1 = a (x  - x1)\n    // y = ax - a * x1 + y1\n    const b = -a * pos1[0] + pos1[1];\n    // y = ax + b = -1/a x\n    // x = -b / (a + 1 / a)\n    // y = b / (1 + 1 / a^2)\n\n    return [\n        -b / (a + 1 / a),\n        b / ((a * a) + 1),\n    ];\n}\nexport function checkRotateInnerBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.innerBounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left,\n        top,\n        width,\n        height,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = left + width - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = top + height - origin[1];\n    const dots = [\n        [relativeLeft, relativeTop],\n        [relativeRight, relativeTop],\n        [relativeLeft, relativeBottom],\n        [relativeRight, relativeBottom],\n    ];\n    const center = getPosByDirection(nextPoses, [0, 0]);\n\n    if (!isBoundRotate(nextPoses, dots, center, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    const dotInfos = dots.map(dot => [\n        getDistSize(dot),\n        getRad([0, 0], dot),\n    ]);\n    [\n        [nextPoses[0], nextPoses[1]],\n        [nextPoses[1], nextPoses[3]],\n        [nextPoses[3], nextPoses[2]],\n        [nextPoses[2], nextPoses[0]],\n    ].forEach(line => {\n        const lineRad = getRad([0, 0], solveReverseLine(line));\n        const lineDist = getDistPointLine(line);\n\n        result.push(...dotInfos\n            .filter(([dotDist]) => {\n                return dotDist && lineDist <= dotDist;\n            })\n            .map(([dotDist, dotRad]) => {\n                const distRad = Math.acos(dotDist ? lineDist / dotDist : 0);\n                const nextRad1 = dotRad + distRad;\n                const nextRad2 = dotRad - distRad;\n\n                return [\n                    rad + nextRad1 - lineRad,\n                    rad + nextRad2 - lineRad,\n                ];\n            })\n            .reduce<number[]>((prev, cur) => {\n                prev.push(...cur);\n                return prev;\n            }, [])\n            .filter(nextRad => !isBoundRotate(prevPoses, dots, center, nextRad))\n            .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n    });\n    return result;\n}\n\nexport function checkInnerBoundPoses(\n    moveable: MoveableManagerInterface<SnappableProps>,\n) {\n    const innerBounds = moveable.props.innerBounds;\n\n    if (!innerBounds) {\n        return {\n            vertical: [],\n            horizontal: [],\n        };\n    }\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = moveable.getRect();\n    const poses = [pos1, pos2, pos3, pos4];\n    const center = getPosByDirection(poses, [0, 0]);\n    const { left, top, width, height } = innerBounds;\n    const leftLine = [[left, top], [left, top + height]];\n    const topLine = [[left, top], [left + width, top]];\n    const rightLine = [[left + width, top], [left + width, top + height]];\n    const bottomLine = [[left, top + height], [left + width, top + height]];\n\n    const lines = [\n        [pos1, pos2],\n        [pos2, pos4],\n        [pos4, pos3],\n        [pos3, pos1],\n    ];\n\n    const horizontalPoses: number[] = [];\n    const verticalPoses: number[] = [];\n\n    const boundMap = {\n        top: false,\n        bottom: false,\n        left: false,\n        right: false,\n    };\n\n    lines.forEach(line => {\n        const {\n            horizontal: isHorizontalStart,\n            vertical: isVerticalStart,\n        } = isStartLine(center, line);\n\n        // test vertical\n        const topBoundInfo = checkLineBoundCollision(line, topLine, isVerticalStart, 1, true);\n        const bottomBoundInfo = checkLineBoundCollision(line, bottomLine, isVerticalStart, 1, true);\n\n        // test horizontal\n        const leftBoundInfo = checkLineBoundCollision(line, leftLine, isHorizontalStart, 1, true);\n        const rightBoundInfo = checkLineBoundCollision(line, rightLine, isHorizontalStart, 1, true);\n\n        if (topBoundInfo.isBound && !boundMap.top) {\n            horizontalPoses.push(top);\n            boundMap.top = true;\n        }\n        if (bottomBoundInfo.isBound && !boundMap.bottom) {\n            horizontalPoses.push(top + height);\n            boundMap.bottom = true;\n        }\n        if (leftBoundInfo.isBound && !boundMap.left) {\n            verticalPoses.push(left);\n            boundMap.left = true;\n        }\n        if (rightBoundInfo.isBound && !boundMap.right) {\n            verticalPoses.push(left + width);\n            boundMap.right = true;\n        }\n    });\n\n    return {\n        horizontal: horizontalPoses,\n        vertical: verticalPoses,\n    };\n}\n","import { BoundInfo, SnappableProps, BoundType, RotatableProps, MoveableManagerInterface } from \"../../types\";\nimport { rotate, getRad, minus } from \"../../matrix\";\nimport { getDistSize, throttle } from \"../../utils\";\nimport { TINY_NUM } from \"../../consts\";\n\nexport function checkBoundPoses(\n    bounds: BoundType | false | undefined,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds || {};\n    const nextBounds = { left, top, right, bottom };\n\n    return {\n        vertical: checkBounds(nextBounds, verticalPoses, true),\n        horizontal: checkBounds(nextBounds, horizontalPoses, false),\n    };\n}\n\nexport function checkBoundKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    startPos: number[],\n    endPos: number[],\n) {\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = moveable.props.bounds || {};\n\n    const [endX, endY] = endPos;\n    let [dx, dy] = minus(endPos, startPos);\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    const isBottom = dy > 0;\n    const isRight = dx > 0;\n\n    const verticalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    const horizontalInfo = {\n        isBound: false,\n        offset: 0,\n        pos: 0,\n    };\n    if (dx === 0 && dy === 0) {\n        return {\n            vertical: verticalInfo,\n            horizontal: horizontalInfo,\n        };\n    } else if (dx === 0) {\n        if (isBottom) {\n            if (bottom < endY) {\n                horizontalInfo.pos = bottom;\n                horizontalInfo.offset = endY - bottom;\n            }\n        } else {\n            if (top > endY) {\n                horizontalInfo.pos = top;\n                horizontalInfo.offset = endY - top;\n            }\n        }\n    } else if (dy === 0) {\n        if (isRight) {\n            if (right < endX) {\n                verticalInfo.pos = right;\n                verticalInfo.offset = endX - right;\n            }\n        } else {\n            if (left > endX) {\n                verticalInfo.pos = left;\n                verticalInfo.offset = endX - left;\n            }\n        }\n    } else {\n        // y - y1 = a * (x - x1)\n        const a = dy / dx;\n        const b = endPos[1] - a * endX;\n        let y = 0;\n        let x = 0;\n        let isBound = false;\n\n        if (isRight && right <= endX) {\n            y = a * right + b;\n            x = right;\n            isBound = true;\n        } else if (!isRight && endX <= left) {\n            y = a * left + b;\n            x = left;\n            isBound = true;\n        }\n        if (isBound) {\n            if (y < top || y > bottom) {\n                isBound = false;\n            }\n        }\n        if (!isBound) {\n            if (isBottom && bottom <= endY) {\n                y = bottom;\n                x = (y - b) / a;\n                isBound = true;\n            } else if (!isBottom &&  endY <= top) {\n                y = top;\n                x = (y - b) / a;\n                isBound = true;\n            }\n        }\n        if (isBound) {\n            verticalInfo.isBound = true;\n            verticalInfo.pos = x;\n            verticalInfo.offset = endX - x;\n\n            horizontalInfo.isBound = true;\n            horizontalInfo.pos = y;\n            horizontalInfo.offset = endY - y;\n        }\n    }\n\n    return {\n        vertical: verticalInfo,\n        horizontal: horizontalInfo,\n    };\n}\nfunction checkBounds(\n    bounds: Required<BoundType>,\n    poses: number[],\n    isVertical: boolean,\n): BoundInfo[] {\n    // 0   [100 - 200]  300\n    const startBoundPos = bounds[isVertical ? \"left\" : \"top\"];\n    const endBoundPos = bounds[isVertical ? \"right\" : \"bottom\"];\n\n    // 450\n    const minPos = Math.min(...poses);\n    const maxPos = Math.max(...poses);\n    const boundInfos: BoundInfo[] = [];\n\n    if (startBoundPos + 1 > minPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: minPos - startBoundPos,\n            pos: startBoundPos,\n        });\n    }\n    if (endBoundPos - 1 < maxPos) {\n        boundInfos.push({\n            isBound: true,\n            offset: maxPos - endBoundPos,\n            pos: endBoundPos,\n        });\n    }\n\n    if (!boundInfos.length) {\n        boundInfos.push({\n            isBound: false,\n            offset: 0,\n            pos: 0,\n        });\n    }\n\n    return boundInfos.sort((a, b) => Math.abs(b.offset) - Math.abs(a.offset));\n}\nexport function isBoundRotate(\n    relativePoses: number[][],\n    boundRect: { left: number, top: number, right: number, bottom: number },\n    rad: number,\n) {\n    const nextPoses = rad ? relativePoses.map(pos => rotate(pos, rad)) : relativePoses;\n\n    return nextPoses.some(pos => {\n        return (pos[0] < boundRect.left && Math.abs(pos[0] - boundRect.left) > 0.1)\n            || (pos[0] > boundRect.right && Math.abs(pos[0] - boundRect.right) > 0.1)\n            || (pos[1] < boundRect.top && Math.abs(pos[1] - boundRect.top) > 0.1)\n            || (pos[1] > boundRect.bottom && Math.abs(pos[1] - boundRect.bottom) > 0.1);\n    });\n}\nexport function boundRotate(\n    vec: number[],\n    boundPos: number,\n    index: number,\n) {\n    const r = getDistSize(vec);\n    const nextPos = Math.sqrt(r * r - boundPos * boundPos) || 0;\n\n    return [nextPos, -nextPos].sort((a, b) => {\n        return Math.abs(a - vec[index ? 0 : 1]) - Math.abs(b - vec[index ? 0 : 1]);\n    }).map(pos => {\n        return getRad([0, 0], index ? [pos, boundPos] : [boundPos, pos]);\n    });\n}\n\nexport function checkRotateBounds(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    prevPoses: number[][],\n    nextPoses: number[][],\n    origin: number[],\n    rotation: number,\n) {\n    const bounds = moveable.props.bounds;\n    const rad = rotation * Math.PI / 180;\n\n    if (!bounds) {\n        return [];\n    }\n    const {\n        left = -Infinity,\n        top = -Infinity,\n        right = Infinity,\n        bottom = Infinity,\n    } = bounds;\n\n    const relativeLeft = left - origin[0];\n    const relativeRight = right - origin[0];\n    const relativeTop = top - origin[1];\n    const relativeBottom = bottom - origin[1];\n    const boundRect = {\n        left: relativeLeft,\n        top: relativeTop,\n        right: relativeRight,\n        bottom: relativeBottom,\n    };\n\n    if (!isBoundRotate(nextPoses, boundRect, 0)) {\n        return [];\n    }\n    const result: number[] = [];\n    [\n        [relativeLeft, 0],\n        [relativeRight, 0],\n        [relativeTop, 1],\n        [relativeBottom, 1],\n    ].forEach(([boundPos, index], i) => {\n        nextPoses.forEach(nextPos => {\n            const relativeRad1 = getRad([0, 0], nextPos);\n\n            result.push(...boundRotate(nextPos, boundPos, index)\n                .map(relativeRad2 => rad + relativeRad2 - relativeRad1)\n                .filter(nextRad => !isBoundRotate(prevPoses, boundRect, nextRad))\n                .map(nextRad => throttle(nextRad * 180 / Math.PI, TINY_NUM)));\n        });\n    });\n\n    return result;\n}\n","\nimport {\n    Renderer,\n    SnappableProps,\n    SnappableState, Guideline,\n    SnapInfo, BoundInfo,\n    ScalableProps, SnapPosInfo, RotatableProps,\n    RectInfo, DraggableProps, SnapOffsetInfo, GapGuideline,\n    SnappableOptions, MoveableClientRect, MoveableManagerInterface, SnappableRenderType, BoundType, SnapBoundInfo,\n} from \"../types\";\nimport {\n    prefix, caculatePoses, getRect,\n    getAbsolutePosesByState, getAbsolutePoses, throttle, roundSign,\n    getDistSize, groupBy, flat, maxOffset, minOffset,\n    triggerEvent, caculateInversePosition, caculatePosition,\n    directionCondition,\n} from \"../utils\";\nimport { IObject, find, findIndex, hasClass } from \"@daybrush/utils\";\nimport {\n    getPosByReverseDirection,\n    getDragDist, scaleMatrix, getPosByDirection,\n} from \"../gesto/GestoUtils\";\nimport { minus, rotate, plus, getRad } from \"../matrix\";\nimport {\n    dragControlCondition as rotatableDragControlCondtion,\n} from \"./Rotatable\";\nimport { TINY_NUM } from \"../consts\";\nimport {\n    getInnerBoundInfo, getCheckSnapLines,\n    getInnerBoundDragInfo, checkRotateInnerBounds, checkInnerBoundPoses,\n} from \"./snappable/innerBounds\";\nimport { checkBoundPoses, checkRotateBounds, checkBoundKeepRatio } from \"./snappable/bounds\";\nimport {\n    checkSnaps, getSnapInfosByDirection,\n    checkMoveableSnapPoses, getNearestSnapGuidelineInfo,\n    getNearOffsetInfo,\n    checkSnapKeepRatio,\n    checkSnapPoses,\n} from \"./snappable/snap\";\n\nexport function caculateContainerPos(\n    rootMatrix: number[],\n    containerRect: MoveableClientRect,\n    n: number,\n) {\n    const clientPos = caculatePosition(\n        rootMatrix, [containerRect.clientLeft!, containerRect.clientTop!], n);\n\n    return [\n        containerRect.left + clientPos[0],\n        containerRect.top + clientPos[1],\n    ];\n}\nexport function snapStart(moveable: MoveableManagerInterface<SnappableProps, SnappableState>) {\n    const state = moveable.state;\n\n    if (state.guidelines && state.guidelines.length) {\n        return;\n    }\n\n    const {\n        horizontalGuidelines = [],\n        verticalGuidelines = [],\n        elementGuidelines = [],\n        bounds,\n        innerBounds,\n        snapCenter,\n    } = moveable.props;\n\n    if (\n        !innerBounds && !bounds\n        && !horizontalGuidelines.length\n        && !verticalGuidelines.length && !elementGuidelines.length\n    ) {\n        return;\n    }\n\n    const {\n        containerClientRect,\n        targetClientRect: {\n            top: clientTop,\n            left: clientLeft,\n        },\n        rootMatrix,\n        is3d,\n    } = state;\n    const n = is3d ? 4 : 3;\n    const [containerLeft, containerTop] = caculateContainerPos(rootMatrix, containerClientRect, n);\n    const poses = getAbsolutePosesByState(state);\n    const targetLeft = Math.min(...poses.map(pos => pos[0]));\n    const targetTop = Math.min(...poses.map(pos => pos[1]));\n    const [distLeft, distTop] = minus([targetLeft, targetTop], caculateInversePosition(rootMatrix, [\n        clientLeft - containerLeft,\n        clientTop - containerTop,\n    ], n)).map(pos => roundSign(pos));\n\n    const guidelines: Guideline[] = [];\n\n    elementGuidelines!.forEach(el => {\n        const rect = el.getBoundingClientRect();\n        const left = rect.left - containerLeft;\n        const top = rect.top - containerTop;\n        const bottom = top + rect.height;\n        const right = left + rect.width;\n        const [elementLeft, elementTop] = caculateInversePosition(rootMatrix, [left, top], n);\n        const [elementRight, elementBottom] = caculateInversePosition(rootMatrix, [right, bottom], n);\n        const width = elementRight - elementLeft;\n        const height = elementBottom - elementTop;\n        const sizes = [width, height];\n\n        guidelines.push({\n            type: \"vertical\", element: el, pos: [\n                throttle(elementLeft + distLeft, 0.1),\n                elementTop,\n            ], size: height,\n            sizes,\n        });\n        guidelines.push({\n            type: \"vertical\", element: el, pos: [\n                throttle(elementRight + distLeft, 0.1),\n                elementTop,\n            ], size: height,\n            sizes,\n        });\n        guidelines.push({\n            type: \"horizontal\", element: el, pos: [\n                elementLeft,\n                throttle(elementTop + distTop, 0.1),\n            ], size: width,\n            sizes,\n        });\n        guidelines.push({\n            type: \"horizontal\", element: el, pos: [\n                elementLeft,\n                throttle(elementBottom + distTop, 0.1),\n            ], size: width,\n            sizes,\n        });\n\n        if (snapCenter) {\n            guidelines.push({\n                type: \"vertical\",\n                element: el,\n                pos: [\n                    throttle((elementLeft + elementRight) / 2 + distLeft, 0.1),\n                    elementTop,\n                ],\n                size: height,\n                sizes,\n                center: true,\n            });\n            guidelines.push({\n                type: \"horizontal\",\n                element: el,\n                pos: [\n                    elementLeft,\n                    throttle((elementTop + elementBottom) / 2 + distTop, 0.1),\n                ],\n                size: width,\n                sizes,\n                center: true,\n            });\n        }\n    });\n\n    state.guidelines = guidelines;\n    state.enableSnap = true;\n}\n\nexport function hasGuidelines(\n    moveable: MoveableManagerInterface<any, any>,\n    ableName: string,\n): moveable is MoveableManagerInterface<SnappableProps, SnappableState> {\n    const {\n        props: {\n            snappable,\n            bounds,\n            innerBounds,\n            verticalGuidelines,\n            horizontalGuidelines,\n        },\n        state: {\n            guidelines,\n            enableSnap,\n        },\n    } = moveable;\n\n    if (\n        !snappable\n        || !enableSnap\n        || (ableName && snappable !== true && snappable.indexOf(ableName) < 0)\n    ) {\n        return false;\n    }\n    if (\n        bounds || innerBounds\n        || (guidelines && guidelines.length)\n        || (verticalGuidelines && verticalGuidelines.length)\n        || (horizontalGuidelines && horizontalGuidelines.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\nfunction solveNextOffset(\n    pos1: number[],\n    pos2: number[],\n    offset: number,\n    isVertical: boolean,\n    datas: IObject<any>,\n) {\n    const sizeOffset = solveEquation(\n        pos1,\n        pos2,\n        offset,\n        isVertical,\n    );\n\n    if (!sizeOffset) {\n        return [0, 0];\n    }\n    const [widthOffset, heightOffset] = getDragDist({\n        datas,\n        distX: sizeOffset[0],\n        distY: sizeOffset[1],\n    });\n\n    return [widthOffset, heightOffset];\n}\nfunction getNextFixedPoses(\n    matrix: number[],\n    width: number,\n    height: number,\n    fixedPos: number[],\n    direction: number[],\n    is3d: boolean,\n) {\n    const nextPoses = caculatePoses(matrix, width, height, is3d ? 4 : 3);\n    const nextPos = getPosByReverseDirection(nextPoses, direction);\n\n    return getAbsolutePoses(nextPoses, minus(fixedPos, nextPos));\n}\nfunction getSnapBoundOffset(boundInfo: BoundInfo, snapInfo: SnapOffsetInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return snapInfo.offset;\n    }\n    return 0;\n}\nfunction getSnapBound(boundInfo: BoundInfo, snapInfo: SnapInfo) {\n    if (boundInfo.isBound) {\n        return boundInfo.offset;\n    } else if (snapInfo.isSnap) {\n        return getNearestSnapGuidelineInfo(snapInfo).offset;\n    }\n    return 0;\n}\nexport function checkSnapBoundsKeepRatio(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    startPos: number[],\n    endPos: number[],\n    isRequest: boolean,\n) {\n    const {\n        horizontal: horizontalBoundInfo,\n        vertical: verticalBoundInfo,\n    } = checkBoundKeepRatio(\n        moveable,\n        startPos,\n        endPos,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false },\n        vertical: { isSnap: false },\n    } as any : checkSnapKeepRatio(\n        moveable,\n        startPos,\n        endPos,\n    );\n\n    const horizontalOffset = getSnapBoundOffset(horizontalBoundInfo, horizontalSnapInfo);\n    const verticalOffset = getSnapBoundOffset(verticalBoundInfo, verticalSnapInfo);\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfo.isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n        },\n        vertical: {\n            isBound: verticalBoundInfo.isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            offset: verticalOffset,\n            dist: verticalDist,\n        },\n    };\n}\nexport function checkMoveableSnapBounds(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    isRequest: boolean,\n    poses: number[][],\n    boundPoses: number[][] = poses,\n): {\n    vertical: SnapBoundInfo,\n    horizontal: SnapBoundInfo,\n} {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        moveable.props.bounds,\n        boundPoses.map(pos => pos[0]),\n        boundPoses.map(pos => pos[1]),\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkMoveableSnapPoses(\n        moveable,\n        poses.map(pos => pos[0]),\n        poses.map(pos => pos[1]),\n    );\n\n    const horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n    const verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function checkSnapBounds(\n    guideines: Guideline[],\n    bounds: BoundType | undefined | false,\n    posesX: number[],\n    posesY: number[],\n    options: {\n        isRequest?: boolean,\n        snapThreshold?: number,\n        snapCenter?: boolean,\n        snapElement?: boolean,\n    } = {},\n): {\n    vertical: SnapBoundInfo,\n    horizontal: SnapBoundInfo,\n} {\n    const {\n        horizontal: horizontalBoundInfos,\n        vertical: verticalBoundInfos,\n    } = checkBoundPoses(\n        bounds,\n        posesX,\n        posesY,\n    );\n    const {\n        horizontal: horizontalSnapInfo,\n        vertical: verticalSnapInfo,\n    } = options.isRequest ? {\n        horizontal: { isSnap: false, index: -1 } as SnapInfo,\n        vertical: { isSnap: false, index: -1 } as SnapInfo,\n    } : checkSnapPoses(\n        guideines,\n        posesX,\n        posesY,\n        options,\n    );\n\n    const horizontalOffset = getSnapBound(horizontalBoundInfos[0], horizontalSnapInfo);\n    const verticalOffset = getSnapBound(verticalBoundInfos[0], verticalSnapInfo);\n\n    const horizontalDist = Math.abs(horizontalOffset);\n    const verticalDist = Math.abs(verticalOffset);\n\n    return {\n        horizontal: {\n            isBound: horizontalBoundInfos[0].isBound,\n            isSnap: horizontalSnapInfo.isSnap,\n            snapIndex: horizontalSnapInfo.index,\n            offset: horizontalOffset,\n            dist: horizontalDist,\n            bounds: horizontalBoundInfos,\n            snap: horizontalSnapInfo,\n        },\n        vertical: {\n            isBound: verticalBoundInfos[0].isBound,\n            isSnap: verticalSnapInfo.isSnap,\n            snapIndex: verticalSnapInfo.index,\n            offset: verticalOffset,\n            dist: verticalDist,\n            bounds: verticalBoundInfos,\n            snap: verticalSnapInfo,\n        },\n    };\n}\nexport function normalized(value: number) {\n    return value ? value / Math.abs(value) : 0;\n}\nexport function checkMaxBounds(\n    moveable: MoveableManagerInterface<SnappableProps>,\n    poses: number[][],\n    direction: number[],\n    fixedPos: number[],\n    datas: any,\n) {\n    const fixedDirection = [-direction[0], -direction[1]];\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const bounds = moveable.props.bounds;\n    let maxWidth = Infinity;\n    let maxHeight = Infinity;\n\n    if (bounds) {\n        const directions = [\n            [direction[0], -direction[1]],\n            [-direction[0], direction[1]],\n        ];\n        const {\n            left = -Infinity,\n            top = -Infinity,\n            right = Infinity,\n            bottom = Infinity,\n        } = bounds;\n\n        directions.forEach(otherDirection => {\n            const isCheckVertical = otherDirection[0] !== fixedDirection[0];\n            const isCheckHorizontal = otherDirection[1] !== fixedDirection[1];\n            const otherPos = getPosByDirection(poses, otherDirection);\n\n            const verticalDirection = normalized(otherDirection[1] - fixedDirection[1]);\n            const horizontalDirection = normalized(otherDirection[0] - fixedDirection[0]);\n            const deg = getRad(fixedPos, otherPos) * 360 / Math.PI;\n\n            if (isCheckHorizontal) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 360) < 2 || Math.abs(deg - 180) < 2) {\n                    nextOtherPos[1] = fixedPos[1];\n                }\n                const [\n                    ,\n                    heightOffset,\n                ] = solveNextOffset(\n                    fixedPos, nextOtherPos,\n                    (fixedPos[1] < otherPos[1] ? bottom : top) - otherPos[1],\n                    false, datas,\n                );\n                if (!isNaN(heightOffset)) {\n                    maxHeight = height + verticalDirection * heightOffset;\n                }\n            }\n            if (isCheckVertical) {\n                const nextOtherPos = otherPos.slice();\n\n                if (Math.abs(deg - 90) < 2 || Math.abs(deg - 270) < 2) {\n                    nextOtherPos[0] = fixedPos[0];\n                }\n                const [\n                    widthOffset,\n                ] = solveNextOffset(\n                    fixedPos, nextOtherPos,\n                    (fixedPos[0] < otherPos[0] ? right : left) - otherPos[0],\n                    true, datas,\n                );\n                if (!isNaN(widthOffset)) {\n                    maxWidth = width + horizontalDirection * widthOffset;\n                }\n            }\n        });\n    }\n    return {\n        maxWidth,\n        maxHeight,\n    };\n}\nfunction getSnapBoundInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    directions: number[][][],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any,\n) {\n    return directions.map(([startDirection, endDirection]) => {\n        const otherStartPos = getPosByDirection(poses, startDirection);\n        const otherEndPos = getPosByDirection(poses, endDirection);\n        const snapBoundInfo\n            = keepRatio\n                ? checkSnapBoundsKeepRatio(moveable, otherStartPos, otherEndPos, isRequest)\n                : checkMoveableSnapBounds(moveable, isRequest, [otherEndPos]);\n\n        const {\n            horizontal: {\n                dist: otherHorizontalDist,\n                offset: otherHorizontalOffset,\n                isBound: isOtherHorizontalBound,\n                isSnap: isOtherHorizontalSnap,\n            },\n            vertical: {\n                dist: otherVerticalDist,\n                offset: otherVerticalOffset,\n                isBound: isOtherVerticalBound,\n                isSnap: isOtherVerticalSnap,\n            },\n        } = snapBoundInfo;\n\n        const multiple = minus(endDirection, startDirection);\n\n        if (!otherVerticalOffset && !otherHorizontalOffset) {\n            return {\n                isBound: isOtherVerticalBound || isOtherHorizontalBound,\n                isSnap: isOtherVerticalSnap || isOtherHorizontalSnap,\n                sign: multiple,\n                offset: [0, 0],\n            };\n        }\n        const isVertical = otherHorizontalDist < otherVerticalDist;\n        const sizeOffset = solveNextOffset(\n            otherStartPos,\n            otherEndPos,\n            -(isVertical ? otherVerticalOffset : otherHorizontalOffset),\n            isVertical,\n            datas,\n        ).map((size, i) => size * (multiple[i] ? 2 / multiple[i] : 0));\n\n        return {\n            sign: multiple,\n            isBound: isVertical ? isOtherVerticalBound : isOtherHorizontalBound,\n            isSnap: isVertical ? isOtherVerticalSnap : isOtherHorizontalSnap,\n            offset: sizeOffset,\n        };\n    });\n}\nexport function getCheckSnapDirections(\n    direction: number[],\n    keepRatio: boolean,\n) {\n    const directions: number[][][] = [];\n    const fixedDirection = [-direction[0], -direction[1]];\n\n    if (direction[0] && direction[1]) {\n        directions.push(\n            [fixedDirection, [direction[0], -direction[1]]],\n            [fixedDirection, [-direction[0], direction[1]]],\n        );\n        if (keepRatio) {\n            // pass two direction condition\n            directions.push(\n                [fixedDirection, direction],\n            );\n        }\n    } else if (direction[0]) {\n        // vertcal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [fixedDirection[0], -1]],\n                [fixedDirection, [fixedDirection[0], 1]],\n                [fixedDirection, [direction[0], -1]],\n                [fixedDirection, direction],\n                [fixedDirection, [direction[0], 1]],\n            );\n        } else {\n            directions.push(\n                [[fixedDirection[0], -1], [direction[0], -1]],\n                [[fixedDirection[0], 0], [direction[0], 0]],\n                [[fixedDirection[0], 1], [direction[0], 1]],\n            );\n        }\n    } else if (direction[1]) {\n        // horizontal\n        if (keepRatio) {\n            directions.push(\n                [fixedDirection, [-1, fixedDirection[1]]],\n                [fixedDirection, [1, fixedDirection[1]]],\n                [fixedDirection, [-1, direction[1]]],\n                [fixedDirection, [1, direction[1]]],\n                [fixedDirection, direction],\n            );\n        } else {\n            directions.push(\n                [[-1, fixedDirection[1]], [-1, direction[1]]],\n                [[0, fixedDirection[1]], [0, direction[1]]],\n                [[1, fixedDirection[1]], [1, direction[1]]],\n            );\n        }\n    } else {\n        // [0, 0] to all direction\n        directions.push(\n            [fixedDirection, [1, 0]],\n            [fixedDirection, [-1, 0]],\n            [fixedDirection, [0, -1]],\n            [fixedDirection, [0, 1]],\n\n            [[1, 0], [1, -1]],\n            [[1, 0], [1, 1]],\n            [[0, 1], [1, 1]],\n            [[0, 1], [-1, 1]],\n\n            [[-1, 0], [-1, -1]],\n            [[-1, 0], [-1, 1]],\n            [[0, -1], [1, -1]],\n            [[0, -1], [-1, -1]],\n        );\n    }\n\n    return directions;\n}\nexport function getSizeOffsetInfo(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    direction: number[],\n    keepRatio: boolean,\n    isRequest: boolean,\n    datas: any,\n) {\n    const directions = getCheckSnapDirections(direction, keepRatio);\n    const lines = getCheckSnapLines(poses, direction, keepRatio);\n    const offsets = [\n        ...getSnapBoundInfo(moveable, poses, directions, keepRatio, isRequest, datas),\n        ...getInnerBoundInfo(moveable, lines, getPosByDirection(poses, [0, 0]), datas),\n    ];\n    const widthOffsetInfo = getNearOffsetInfo(offsets, 0);\n    const heightOffsetInfo = getNearOffsetInfo(offsets, 1);\n\n    return {\n        width: {\n            isBound: widthOffsetInfo.isBound,\n            offset: widthOffsetInfo.offset[0],\n        },\n        height: {\n            isBound: heightOffsetInfo.isBound,\n            offset: heightOffsetInfo.offset[1],\n        },\n    };\n}\nexport function recheckSizeByTwoDirection(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    poses: number[][],\n    width: number,\n    height: number,\n    maxWidth: number,\n    maxHeight: number,\n    direction: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    const snapPos = getPosByDirection(poses, direction);\n\n    const {\n        horizontal: {\n            offset: horizontalOffset,\n        },\n        vertical: {\n            offset: verticalOffset,\n        },\n    } = checkMoveableSnapBounds(moveable, isRequest, [snapPos]);\n\n    if (verticalOffset || horizontalOffset) {\n        const [nextWidthOffset, nextHeightOffset] = getDragDist({\n            datas,\n            distX: -verticalOffset,\n            distY: -horizontalOffset,\n        });\n\n        const nextWidth\n            = Math.min(maxWidth || Infinity, width + direction[0] * nextWidthOffset);\n        const nextHeight\n            = Math.min(maxHeight || Infinity, height + direction[1] * nextHeightOffset);\n\n        return [\n            nextWidth - width,\n            nextHeight - height,\n        ];\n    }\n    return [\n        0,\n        0,\n    ];\n}\nexport function checkSizeDist(\n    moveable: MoveableManagerInterface<any, any>,\n    getNextPoses: (widthOffset: number, heightOffset: number) => number[][],\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    const poses = getAbsolutePosesByState(moveable.state);\n    const keepRatio = moveable.props.keepRatio;\n\n    let widthOffset = 0;\n    let heightOffset = 0;\n\n    for (let i = 0; i < 2; ++i) {\n        const nextPoses = getNextPoses(widthOffset, heightOffset);\n        const {\n            width: widthOffsetInfo,\n            height: heightOffsetInfo,\n        } = getSizeOffsetInfo(\n            moveable,\n            nextPoses,\n            direction,\n            keepRatio,\n            isRequest,\n            datas,\n        );\n\n        const isWidthBound = widthOffsetInfo.isBound;\n        const isHeightBound = heightOffsetInfo.isBound;\n        let nextWidthOffset = widthOffsetInfo.offset;\n        let nextHeightOffset = heightOffsetInfo.offset;\n\n        if (i === 1) {\n            if (!isWidthBound) {\n                nextWidthOffset = 0;\n            }\n            if (!isHeightBound) {\n                nextHeightOffset = 0;\n            }\n        }\n        if (i === 0 && isRequest && !isWidthBound && !isHeightBound) {\n            return [0, 0];\n        }\n        if (keepRatio) {\n            const widthDist = Math.abs(nextWidthOffset) * (width ? 1 / width : 1);\n            const heightDist = Math.abs(nextHeightOffset) * (height ? 1 / height : 1);\n            const isGetWidthOffset\n                = isWidthBound && isHeightBound ? widthDist < heightDist\n                    : isHeightBound || (!isWidthBound && widthDist < heightDist);\n\n            // height * widthOffset = width * heighOffset\n            if (isGetWidthOffset) {\n                // width : height = ? : heightOffset\n                nextWidthOffset = width * nextHeightOffset / height;\n            } else {\n                // width : height = widthOffset : ?\n                nextHeightOffset = height * nextWidthOffset / width;\n            }\n        }\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    if (direction[0] && direction[1]) {\n        const {\n            maxWidth,\n            maxHeight,\n        } = checkMaxBounds(moveable, poses, direction, fixedPos, datas);\n\n        const [nextWidthOffset, nextHeightOffset] = recheckSizeByTwoDirection(\n            moveable,\n            getNextPoses(widthOffset, heightOffset),\n            width + widthOffset,\n            height + heightOffset,\n            maxWidth,\n            maxHeight,\n            direction,\n            isRequest,\n            datas,\n        );\n        widthOffset += nextWidthOffset;\n        heightOffset += nextHeightOffset;\n    }\n\n    return [\n        widthOffset,\n        heightOffset,\n    ];\n}\n\nexport function checkSnapRotate(\n    moveable: MoveableManagerInterface<SnappableProps & RotatableProps, any>,\n    rect: RectInfo,\n    origin: number[],\n    rotation: number,\n) {\n    if (!hasGuidelines(moveable, \"rotatable\")) {\n        return rotation;\n    }\n\n    const {\n        pos1,\n        pos2,\n        pos3,\n        pos4,\n    } = rect;\n    const rad = rotation * Math.PI / 180;\n    const prevPoses = [pos1, pos2, pos3, pos4].map(pos => minus(pos, origin));\n    const nextPoses = prevPoses.map(pos => rotate(pos, rad));\n\n    const result = [\n        ...checkRotateBounds(moveable, prevPoses, nextPoses, origin, rotation),\n        ...checkRotateInnerBounds(moveable, prevPoses, nextPoses, origin, rotation),\n    ];\n    result.sort((a, b) => Math.abs(a - rotation) - Math.abs(b - rotation));\n\n    if (result.length) {\n        return result[0];\n    } else {\n        return rotation;\n    }\n}\nexport function checkSnapSize(\n    moveable: MoveableManagerInterface<{}, {}>,\n    width: number,\n    height: number,\n    direction: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    if (!hasGuidelines(moveable, \"resizable\")) {\n        return [0, 0];\n    }\n    const {\n        allMatrix,\n        is3d,\n    } = moveable.state;\n    return checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                allMatrix,\n                width + widthOffset,\n                height + heightOffset,\n                fixedPos,\n                direction,\n                is3d,\n            );\n        }, width, height, direction, fixedPos, isRequest, datas,\n    );\n}\nexport function checkSnapScale(\n    moveable: MoveableManagerInterface<ScalableProps, any>,\n    scale: number[],\n    direction: number[],\n    fixedPos: number[],\n    isRequest: boolean,\n    datas: any,\n) {\n    const {\n        width,\n        height,\n    } = datas;\n    if (!hasGuidelines(moveable, \"scalable\")) {\n        return [0, 0];\n    }\n    const is3d = datas.is3d;\n    const sizeDist = checkSizeDist(\n        moveable,\n        (widthOffset: number, heightOffset: number) => {\n            return getNextFixedPoses(\n                scaleMatrix(datas, plus(scale, [widthOffset / width, heightOffset / height])),\n                width,\n                height,\n                fixedPos,\n                direction,\n                is3d,\n            );\n        },\n        width, height,\n        direction,\n        fixedPos,\n        isRequest,\n        datas,\n    );\n\n    return [\n        sizeDist[0] / width,\n        sizeDist[1] / height,\n    ];\n}\nexport function solveEquation(\n    pos1: number[],\n    pos2: number[],\n    snapOffset: number,\n    isVertical: boolean,\n) {\n    let dx = pos2[0] - pos1[0];\n    let dy = pos2[1] - pos1[1];\n\n    if (Math.abs(dx) < TINY_NUM) {\n        dx = 0;\n    }\n    if (Math.abs(dy) < TINY_NUM) {\n        dy = 0;\n    }\n    if (!dx) {\n        // y = 0 * x + b\n        // only horizontal\n        if (!isVertical) {\n            return [0, snapOffset];\n        }\n        return [0, 0];\n    }\n    if (!dy) {\n        // only vertical\n        if (isVertical) {\n            return [snapOffset, 0];\n        }\n        return [0, 0];\n    }\n    // y = ax + b\n    const a = dy / dx;\n    const b = pos1[1] - a * pos1[0];\n\n    if (isVertical) {\n        // y = a * x + b\n        const y = a * (pos2[0] + snapOffset) + b;\n\n        return [snapOffset, y - pos2[1]];\n    } else {\n        // x = (y - b) / a\n        const x = (pos2[1] + snapOffset - b) / a;\n\n        return [x - pos2[0], snapOffset];\n    }\n}\n\nexport function startCheckSnapDrag(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: any,\n) {\n    datas.absolutePoses = getAbsolutePosesByState(moveable.state);\n}\n\nexport function checkThrottleDragRotate(\n    throttleDragRotate: number,\n    [distX, distY]: number[],\n    [isVerticalBound, isHorizontalBound]: boolean[],\n    [isVerticalSnap, isHorizontalSnap]: boolean[],\n    [verticalOffset, horizontalOffset]: number[],\n) {\n    let offsetX = -verticalOffset;\n    let offsetY = -horizontalOffset;\n\n    if (throttleDragRotate && distX && distY) {\n        offsetX = 0;\n        offsetY = 0;\n        const adjustPoses: number[][] = [];\n        if (isVerticalBound && isHorizontalBound) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n                [verticalOffset, 0],\n            );\n        } else if (isVerticalBound) {\n            adjustPoses.push(\n                [verticalOffset, 0],\n            );\n        } else if (isHorizontalBound) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n            );\n        } else if (isVerticalSnap && isHorizontalSnap) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n                [verticalOffset, 0],\n            );\n        } else if (isVerticalSnap) {\n            adjustPoses.push(\n                [verticalOffset, 0],\n            );\n        } else if (isHorizontalSnap) {\n            adjustPoses.push(\n                [0, horizontalOffset],\n            );\n        }\n        if (adjustPoses.length) {\n            adjustPoses.sort((a, b) => {\n                return getDistSize(minus([distX, distY], a)) - getDistSize(minus([distX, distY], b));\n            });\n            const adjustPos = adjustPoses[0];\n\n            if (adjustPos[0] && Math.abs(distX) > TINY_NUM) {\n                offsetX = -adjustPos[0];\n                offsetY = distY * Math.abs(distX + offsetX) / Math.abs(distX) - distY;\n            } else if (adjustPos[1] && Math.abs(distY) > TINY_NUM) {\n                const prevDistY = distY;\n                offsetY = -adjustPos[1];\n                offsetX = distX * Math.abs(distY + offsetY) / Math.abs(prevDistY) - distX;\n            }\n            if (throttleDragRotate && isHorizontalBound && isVerticalBound) {\n                if (Math.abs(offsetX) > TINY_NUM && Math.abs(offsetX) < Math.abs(verticalOffset)) {\n                    const scale = Math.abs(verticalOffset) / Math.abs(offsetX);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else if (Math.abs(offsetY) > TINY_NUM && Math.abs(offsetY) < Math.abs(horizontalOffset)) {\n                    const scale = Math.abs(horizontalOffset) / Math.abs(offsetY);\n\n                    offsetX *= scale;\n                    offsetY *= scale;\n                } else {\n                    offsetX = maxOffset(-verticalOffset, offsetX);\n                    offsetY = maxOffset(-horizontalOffset, offsetY);\n                }\n            }\n        }\n    } else {\n        offsetX = (distX || isVerticalBound) ? -verticalOffset : 0;\n        offsetY = (distY || isHorizontalBound) ? -horizontalOffset : 0;\n    }\n    return [offsetX, offsetY];\n}\nexport function checkSnapDrag(\n    moveable: MoveableManagerInterface<SnappableProps & DraggableProps, any>,\n    distX: number,\n    distY: number,\n    throttleDragRotate: number,\n    isRequest: boolean,\n    datas: any,\n) {\n\n    if (!hasGuidelines(moveable, \"draggable\")) {\n        return [\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n            {\n                isSnap: false,\n                isBound: false,\n                offset: 0,\n            },\n        ];\n    }\n    const poses = getAbsolutePoses(\n        datas.absolutePoses,\n        [distX, distY],\n    );\n    const { left, right, top, bottom } = getRect(poses);\n    const snapCenter = moveable.props.snapCenter;\n    const snapPoses = [\n        [left, top],\n        [right, top],\n        [left, bottom],\n        [right, bottom],\n    ];\n\n    if (snapCenter) {\n        snapPoses.push([(left + right) / 2, (top + bottom) / 2]);\n    }\n    const {\n        vertical: verticalSnapBoundInfo,\n        horizontal: horizontalSnapBoundInfo,\n    } = checkMoveableSnapBounds(moveable, isRequest, snapPoses, poses);\n    const {\n        vertical: verticalInnerBoundInfo,\n        horizontal: horizontalInnerBoundInfo,\n    } = getInnerBoundDragInfo(moveable, poses, datas);\n\n    const isVerticalSnap = verticalSnapBoundInfo.isSnap;\n    const isHorizontalSnap = horizontalSnapBoundInfo.isSnap;\n    const isVerticalBound\n        = verticalSnapBoundInfo.isBound\n        || verticalInnerBoundInfo.isBound;\n    const isHorizontalBound\n        = horizontalSnapBoundInfo.isBound\n        || horizontalInnerBoundInfo.isBound;\n    const verticalOffset = maxOffset(verticalSnapBoundInfo.offset, verticalInnerBoundInfo.offset);\n    const horizontalOffset = maxOffset(horizontalSnapBoundInfo.offset, horizontalInnerBoundInfo.offset);\n    const [offsetX, offsetY] = checkThrottleDragRotate(\n        throttleDragRotate,\n        [distX, distY],\n        [isVerticalBound, isHorizontalBound],\n        [isVerticalSnap, isHorizontalSnap],\n        [verticalOffset, horizontalOffset],\n    );\n    return [\n        {\n            isBound: isVerticalBound,\n            isSnap: isVerticalSnap,\n            offset: offsetX,\n        },\n        {\n            isBound: isHorizontalBound,\n            isSnap: isHorizontalSnap,\n            offset: offsetY,\n        },\n    ];\n}\n\nfunction getSnapGuidelines(posInfos: SnapPosInfo[]) {\n    const guidelines: Guideline[] = [];\n\n    posInfos.forEach(posInfo => {\n        posInfo.guidelineInfos.forEach(({ guideline }) => {\n            if (guidelines.indexOf(guideline) > -1) {\n                return;\n            }\n            guidelines.push(guideline);\n        });\n    });\n\n    return guidelines;\n}\n\nfunction getElementGuidelineDist(\n    elementPos: number,\n    elementSize: number,\n    targetPos: number,\n    targetSize: number,\n) {\n    // relativePos < 0  => element(l)  ---  (r)target\n    // relativePos > 0  => target(l)   ---  (r)element\n    const relativePos = elementPos - targetPos;\n    const startPos = relativePos < 0 ? relativePos + elementSize : targetSize;\n    const endPos = relativePos < 0 ? 0 : relativePos;\n    const size = endPos - startPos;\n\n    return {\n        size,\n        pos: startPos,\n    };\n}\nfunction groupByElementGuidelines(\n    guidelines: Guideline[],\n    clientPos: number,\n    size: number,\n    index: number,\n) {\n    const groupInfos: Array<[Element, number, any]> = [];\n\n    const group = groupBy(guidelines.filter(({ element, gap }) => element && !gap), ({ element, pos }) => {\n        const elementPos = pos[index];\n        const sign = Math.min(0, elementPos - clientPos) < 0 ? -1 : 1;\n        const groupKey = `${sign}_${pos[index ? 0 : 1]}`;\n        const groupInfo = find(groupInfos, ([groupElement, groupPos]) => {\n            return element === groupElement && elementPos === groupPos;\n        });\n        if (groupInfo) {\n            return groupInfo[2];\n        }\n        groupInfos.push([element!, elementPos, groupKey]);\n        return groupKey;\n    });\n    group.forEach(elementGuidelines => {\n        elementGuidelines.sort((a, b) => {\n            const result = getElementGuidelineDist(a.pos[index], a.size, clientPos, size).size\n                - getElementGuidelineDist(b.pos[index], a.size, clientPos, size).size;\n\n            return result || a.pos[index ? 0 : 1] - b.pos[index ? 0 : 1];\n        });\n    });\n    return group;\n}\nfunction renderElementGroup(\n    group: Guideline[][],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    minPos: number,\n    clientPos: number,\n    clientSize: number,\n    targetPos: number,\n    snapThreshold: number,\n    isDisplaySnapDigit: boolean,\n    snapDigit: number,\n    index: number,\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: Renderer,\n) {\n    return flat(group.map((elementGuidelines, i) => {\n        let isFirstRenderSize = true;\n\n        return elementGuidelines.map(({ pos, size }, j) => {\n            const {\n                pos: linePos,\n                size: lineSize,\n            } = getElementGuidelineDist(pos[index], size, clientPos, clientSize);\n\n            if (lineSize < snapThreshold) {\n                return null;\n            }\n            const isRenderSize = isFirstRenderSize;\n\n            isFirstRenderSize = false;\n            const snapSize = isDisplaySnapDigit && isRenderSize ? parseFloat(lineSize.toFixed(snapDigit)) : 0;\n\n            return <div className={prefix(\n                \"line\",\n                directionName,\n                \"guideline\",\n                \"dashed\",\n            )}\n                data-size={snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n                key={`${directionName}LinkGuidline${i}-${j}`} style={{\n                    [posName1]: `${minPos + linePos}px`,\n                    [posName2]: `${-targetPos + pos[index ? 0 : 1]}px`,\n                    [sizeName]: `${lineSize}px`,\n                }} />;\n        });\n    }));\n}\nfunction renderSnapPoses(\n    snapPoses: SnappableRenderType[],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    minPos: number,\n    targetPos: number,\n    size: number,\n    React: Renderer,\n) {\n    return snapPoses.map(({ type, pos }, i) => {\n        return <div className={prefix(\n            \"line\",\n            directionName,\n            \"guideline\",\n            \"target\",\n            \"bold\",\n            type,\n        )} key={`${directionName}TargetGuidline${i}`} style={{\n            [posName1]: `${minPos}px`,\n            [posName2]: `${-targetPos + pos}px`,\n            [sizeName]: `${size}px`,\n        }} />;\n    });\n}\nfunction renderGuidelines(\n    guidelines: Guideline[],\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    targetPos1: number,\n    targetPos2: number,\n    index: number,\n    React: Renderer,\n) {\n    return guidelines.map((guideline, i) => {\n        const { pos, size, element } = guideline;\n\n        return <div className={prefix(\n            \"line\",\n            directionName,\n            \"guideline\",\n            element ? \"bold\" : \"\",\n        )} key={`${directionName}Guidline${i}`} style={{\n            [posName1]: `${-targetPos1 + pos[index]}px`,\n            [posName2]: `${-targetPos2 + pos[index ? 0 : 1]}px`,\n            [sizeName]: `${size}px`,\n        }} />;\n    });\n}\n\nfunction getGapGuidelinesToStart(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number,\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap > 0 ? targetSizes[0] : 0);\n\n    return guidelines.filter(({ pos: gapPos }) => gapPos[index] <= targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => bPos[index] - aPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (throttle(nextPos + gapSizes![index], 0.0001) === throttle(start - absGap, 0.0001)) {\n                start = nextPos;\n                return true;\n            }\n            return false;\n        }).map(gapGuideline => {\n            const renderPos = -targetPos[index] + gapGuideline.pos[index] + gapGuideline.sizes![index];\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index ? [otherPos, renderPos] : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelinesToEnd(\n    guidelines: Guideline[],\n    index: number,\n    targetPos: number[],\n    targetSizes: number[],\n    guidelinePos: number[],\n    gap: number,\n    otherPos: number,\n): GapGuideline[] {\n    const absGap = Math.abs(gap);\n    let start = guidelinePos[index] + (gap < 0 ? targetSizes[index] : 0);\n\n    return guidelines.filter(({ pos: gapPos }) => gapPos[index] > targetPos[index])\n        .sort(({ pos: aPos }, { pos: bPos }) => aPos[index] - bPos[index])\n        .filter(({ pos: gapPos, sizes: gapSizes }) => {\n            const nextPos = gapPos[index];\n\n            if (throttle(nextPos, 0.0001) === throttle(start + absGap, 0.0001)) {\n                start = nextPos + gapSizes![index];\n                return true;\n            }\n            return false;\n        }).map(gapGuideline => {\n            const renderPos = -targetPos[index] + gapGuideline.pos[index] - absGap;\n\n            return {\n                ...gapGuideline,\n                gap,\n                renderPos: index ? [otherPos, renderPos] : [renderPos, otherPos],\n            };\n        });\n}\nfunction getGapGuidelines(\n    guidelines: Guideline[],\n    type: \"vertical\" | \"horizontal\",\n    targetPos: number[],\n    targetSizes: number[],\n): GapGuideline[] {\n    const elementGuidelines = guidelines.filter(\n        ({ element, gap, type: guidelineType }) => element && gap && guidelineType === type);\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return flat(elementGuidelines.map((guideline, i) => {\n        const pos = guideline.pos;\n        const gap = guideline.gap!;\n        const gapGuidelines = guideline.gapGuidelines!;\n        const sizes = guideline.sizes!;\n\n        let offset = minOffset(\n            pos[otherIndex] + sizes[otherIndex] - targetPos[otherIndex],\n            pos[otherIndex] - targetPos[otherIndex] - targetSizes[otherIndex],\n        );\n        const minSize = Math.min(sizes[otherIndex], targetSizes[otherIndex]);\n\n        if (offset > 0 && offset > minSize) {\n            offset = (offset - minSize / 2) * 2;\n        } else if (offset < 0 && offset < -minSize) {\n            offset = (offset + minSize / 2) * 2;\n        }\n\n        const otherPos = (offset > 0 ? 0 : targetSizes[otherIndex]) + offset / 2;\n        return [\n            ...getGapGuidelinesToStart(gapGuidelines, index, targetPos, targetSizes, pos, gap, otherPos),\n            ...getGapGuidelinesToEnd(gapGuidelines, index, targetPos, targetSizes, pos, gap, otherPos),\n        ];\n    }));\n}\nfunction renderGapGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    gapGuidelines: GapGuideline[],\n    type: \"vertical\" | \"horizontal\",\n    [directionName, posName1, posName2, sizeName]: readonly [string, string, string, string],\n    snapDistFormat: Required<SnappableOptions>[\"snapDistFormat\"],\n    React: any,\n) {\n    const {\n        snapDigit = 0,\n        isDisplaySnapDigit = true,\n    } = moveable.props;\n\n    const otherType = type === \"vertical\" ? \"horizontal\" : \"vertical\";\n    const [index, otherIndex] = type === \"vertical\" ? [0, 1] : [1, 0];\n\n    return gapGuidelines.map(({ renderPos, gap }, i) => {\n        const absGap = Math.abs(gap!);\n        const snapSize = isDisplaySnapDigit ? parseFloat(absGap.toFixed(snapDigit)) : 0;\n\n        return <div className={prefix(\n            \"line\",\n            directionName,\n            \"guideline\",\n            \"gap\",\n        )}\n            data-size={snapSize > 0 ? snapDistFormat(snapSize) : \"\"}\n            key={`${otherType}GapGuideline${i}`} style={{\n                [posName1]: `${renderPos[index]}px`,\n                [posName2]: `${renderPos[otherIndex]}px`,\n                [sizeName]: `${absGap}px`,\n            }} />;\n    });\n}\n\nfunction addBoundGuidelines(\n    moveable: MoveableManagerInterface<SnappableProps, SnappableState>,\n    verticalPoses: number[],\n    horizontalPoses: number[],\n    verticalSnapPoses: SnappableRenderType[],\n    horizontalSnapPoses: SnappableRenderType[],\n    externalBounds?: BoundType | false | null,\n) {\n    const {\n        vertical: verticalBoundInfos,\n        horizontal: horizontalBoundInfos,\n    } = checkBoundPoses(externalBounds || moveable.props.bounds, verticalPoses, horizontalPoses);\n\n    verticalBoundInfos.forEach(info => {\n        if (info.isBound) {\n            verticalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    horizontalBoundInfos.forEach(info => {\n        if (info.isBound) {\n            horizontalSnapPoses.push({\n                type: \"bounds\",\n                pos: info.pos,\n            });\n        }\n    });\n    const {\n        vertical: verticalInnerBoundPoses,\n        horizontal: horizontalInnerBoundPoses,\n    } = checkInnerBoundPoses(moveable);\n\n    verticalInnerBoundPoses.forEach(innerPos => {\n        if (findIndex(verticalSnapPoses, ({ type, pos }) => type === \"bounds\" && pos === innerPos) >= 0) {\n            return;\n        }\n        verticalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n\n    horizontalInnerBoundPoses.forEach(innerPos => {\n        if (findIndex(horizontalSnapPoses, ({ type, pos }) => type === \"bounds\" && pos === innerPos) >= 0) {\n            return;\n        }\n        horizontalSnapPoses.push({\n            type: \"bounds\",\n            pos: innerPos,\n        });\n    });\n}\n/**\n * @namespace Moveable.Snappable\n * @description Whether or not target can be snapped to the guideline. (default: false)\n * @sort 2\n */\nexport default {\n    name: \"snappable\",\n    props: {\n        snappable: [Boolean, Array],\n        snapCenter: Boolean,\n        snapHorizontal: Boolean,\n        snapVertical: Boolean,\n        snapElement: Boolean,\n        snapGap: Boolean,\n        isDisplaySnapDigit: Boolean,\n        snapDigit: Number,\n        snapThreshold: Number,\n        horizontalGuidelines: Array,\n        verticalGuidelines: Array,\n        elementGuidelines: Array,\n        bounds: Object,\n        innerBounds: Object,\n        snapDistFormat: Function,\n    } as const,\n    events: {\n        onSnap: \"snap\",\n    } as const,\n    css: [\n        `:host {\n    --bounds-color: #d66;\n}`,\n    `.guideline {\npointer-events: none;\nz-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<SnappableProps, SnappableState>, React: Renderer): any[] {\n        const {\n            top: targetTop,\n            left: targetLeft,\n            pos1, pos2, pos3, pos4,\n            snapRenderInfo,\n            targetClientRect,\n            containerClientRect,\n            is3d,\n            rootMatrix,\n        } = moveable.state;\n\n        if (!snapRenderInfo || !hasGuidelines(moveable, \"\")) {\n            return [];\n        }\n\n        const n = is3d ? 4 : 3;\n        const minLeft = Math.min(pos1[0], pos2[0], pos3[0], pos4[0]);\n        const minTop = Math.min(pos1[1], pos2[1], pos3[1], pos4[1]);\n        const containerPos = caculateContainerPos(rootMatrix, containerClientRect, n);\n        const [clientLeft, clientTop] = caculateInversePosition(rootMatrix, [\n            targetClientRect.left - containerPos[0],\n            targetClientRect.top - containerPos[1],\n        ], n);\n\n        const {\n            snapThreshold = 5,\n            snapDigit = 0,\n            isDisplaySnapDigit = true,\n            snapDistFormat = (v: number) => v,\n        } = moveable.props;\n        const externalPoses = snapRenderInfo.externalPoses || [];\n        const poses = getAbsolutePosesByState(moveable.state);\n        const verticalSnapPoses: SnappableRenderType[] = [];\n        const horizontalSnapPoses: SnappableRenderType[] = [];\n        const verticalGuidelines: Guideline[] = [];\n        const horizontalGuidelines: Guideline[] = [];\n        const snapInfos: Array<{ vertical: SnapInfo, horizontal: SnapInfo }> = [];\n        const { width, height, top, left, bottom, right } = getRect(poses);\n        const hasExternalPoses = externalPoses.length > 0;\n        const externalRect = hasExternalPoses ? getRect(externalPoses) : {} as ReturnType<typeof getRect>;\n\n        if (!snapRenderInfo.request) {\n            if (snapRenderInfo.direction) {\n                snapInfos.push(getSnapInfosByDirection(moveable, poses, snapRenderInfo.direction));\n            }\n            if (snapRenderInfo.snap) {\n                const rect = getRect(poses);\n\n                if (snapRenderInfo.center) {\n                    (rect as any).middle = (rect.top + rect.bottom) / 2;\n                    (rect as any).center = (rect.left + rect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, rect, true, 1));\n            }\n            if (hasExternalPoses) {\n                if (snapRenderInfo.center) {\n                    (externalRect as any).middle = (externalRect.top + externalRect.bottom) / 2;\n                    (externalRect as any).center = (externalRect.left + externalRect.right) / 2;\n                }\n                snapInfos.push(checkSnaps(moveable, externalRect, true, 1));\n            }\n            snapInfos.forEach(snapInfo => {\n                const {\n                    vertical: {\n                        posInfos: verticalPosInfos,\n                    },\n                    horizontal: {\n                        posInfos: horizontalPosInfos,\n                    },\n                } = snapInfo;\n                verticalSnapPoses.push(...verticalPosInfos.map(posInfo => ({\n                    type: \"snap\",\n                    pos: posInfo.pos,\n                } as const)));\n                horizontalSnapPoses.push(...horizontalPosInfos.map(posInfo => ({\n                    type: \"snap\",\n                    pos: posInfo.pos,\n                } as const)));\n                verticalGuidelines.push(...getSnapGuidelines(verticalPosInfos));\n                horizontalGuidelines.push(...getSnapGuidelines(horizontalPosInfos));\n            });\n        }\n\n        addBoundGuidelines(\n            moveable,\n            [left, right],\n            [top, bottom],\n            verticalSnapPoses,\n            horizontalSnapPoses,\n        );\n        if (hasExternalPoses) {\n            addBoundGuidelines(\n                moveable,\n                [externalRect.left, externalRect.right],\n                [externalRect.top, externalRect.bottom],\n                verticalSnapPoses,\n                horizontalSnapPoses,\n                snapRenderInfo.externalBounds,\n            );\n        }\n        const elementHorizontalGroup = groupByElementGuidelines(\n            horizontalGuidelines,\n            clientLeft,\n            width,\n            0,\n        );\n        const elementVerticalGroup = groupByElementGuidelines(\n            verticalGuidelines,\n            clientTop,\n            height,\n            1,\n        );\n        const horizontalNames = [\"horizontal\", \"left\", \"top\", \"width\"] as const;\n        const verticalNames = [\"vertical\", \"top\", \"left\", \"height\"] as const;\n\n        const gapVerticalGuidelines = getGapGuidelines(\n            verticalGuidelines, \"vertical\",\n            [targetLeft, targetTop],\n            [width, height],\n        );\n        const gapHorizontalGuidelines = getGapGuidelines(\n            horizontalGuidelines, \"horizontal\",\n            [targetLeft, targetTop],\n            [width, height],\n        );\n\n        const allGuidelines = [\n            ...verticalGuidelines,\n            ...horizontalGuidelines,\n        ];\n        triggerEvent(moveable, \"onSnap\", {\n            guidelines: allGuidelines.filter(({ element }) => !element),\n            elements: groupBy(allGuidelines.filter(({ element }) => element), ({ element }) => element),\n            gaps: [\n                ...gapVerticalGuidelines,\n                ...gapHorizontalGuidelines,\n            ],\n        }, true);\n\n        return [\n            ...renderGapGuidelines(\n                moveable,\n                gapVerticalGuidelines,\n                \"vertical\",\n                horizontalNames,\n                snapDistFormat,\n                React,\n            ),\n            ...renderGapGuidelines(\n                moveable,\n                gapHorizontalGuidelines,\n                \"horizontal\",\n                verticalNames,\n                snapDistFormat,\n                React,\n            ),\n            ...renderElementGroup(\n                elementHorizontalGroup,\n                horizontalNames,\n                minLeft,\n                clientLeft,\n                width,\n                targetTop,\n                snapThreshold,\n                isDisplaySnapDigit,\n                snapDigit,\n                0,\n                snapDistFormat,\n                React,\n            ),\n            ...renderElementGroup(\n                elementVerticalGroup,\n                verticalNames,\n                minTop,\n                clientTop,\n                height,\n                targetLeft,\n                snapThreshold,\n                isDisplaySnapDigit,\n                snapDigit,\n                1,\n                snapDistFormat,\n                React,\n            ),\n            ...renderSnapPoses(\n                horizontalSnapPoses,\n                horizontalNames,\n                minLeft,\n                targetTop,\n                width,\n                React,\n            ),\n            ...renderSnapPoses(\n                verticalSnapPoses,\n                verticalNames,\n                minTop,\n                targetLeft,\n                height,\n                React,\n            ),\n            ...renderGuidelines(\n                horizontalGuidelines,\n                horizontalNames,\n                targetLeft,\n                targetTop,\n                0,\n                React,\n            ),\n            ...renderGuidelines(\n                verticalGuidelines,\n                verticalNames,\n                targetTop,\n                targetLeft,\n                1,\n                React,\n            ),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface<SnappableProps, SnappableState>, e: any) {\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n            snap: true,\n            center: true,\n        };\n        snapStart(moveable);\n    },\n    pinchStart(moveable: MoveableManagerInterface<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragEnd(moveable: MoveableManagerInterface<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragControlCondition(e: any) {\n        if (directionCondition(e) || rotatableDragControlCondtion(e)) {\n            return true;\n        }\n        if (!e.isRequest && e.inputEvent) {\n            return hasClass(e.inputEvent.target, prefix(\"snap-control\"));\n        }\n    },\n    dragControlStart(moveable: MoveableManagerInterface<SnappableProps, SnappableState>, e: any) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<SnappableProps, SnappableState>) {\n        this.unset(moveable);\n    },\n    dragGroupStart(moveable: any, e: any) {\n        this.dragStart(moveable, e);\n    },\n    dragGroupEnd(moveable: any) {\n        this.unset(moveable);\n    },\n    dragGroupControlStart(moveable: any, e: any) {\n        moveable.state.snapRenderInfo = null;\n        snapStart(moveable);\n    },\n    dragGroupControlEnd(moveable: any) {\n        this.unset(moveable);\n    },\n    unset(moveable: any) {\n        const state = moveable.state;\n\n        state.enableSnap = false;\n        state.guidelines = [];\n        state.snapRenderInfo = null;\n    },\n};\n\n/**\n* Whether or not target can be snapped to the guideline. (default: false)\n* @name Moveable.Snappable#snappable\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.snappable = true;\n*/\n/**\n * When you drag, make the snap in the center of the target. (default: false)\n * @name Moveable.Snappable#snapCenter\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n * });\n *\n * moveable.snapCenter = true;\n */\n\n/**\n * When you drag, make the snap in the vertical guidelines. (default: true)\n * @name Moveable.Snappable#snapVertical\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapVertical = false;\n */\n/**\n * When you drag, make the snap in the horizontal guidelines. (default: true)\n * @name Moveable.Snappable#snapHorizontal\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapHorizontal = false;\n */\n/**\n * When you drag, make the gap snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapGap\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n *   snapGap: true,\n * });\n *\n * moveable.snapGap = false;\n */\n/**\n * When you drag, make the snap in the element guidelines. (default: true)\n * @name Moveable.Snappable#snapElement\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   snappable: true,\n *   snapVertical: true,\n *   snapHorizontal: true,\n *   snapElement: true,\n * });\n *\n * moveable.snapElement = false;\n */\n/**\n * Distance value that can snap to guidelines. (default: 5)\n * @name Moveable.Snappable#snapThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapThreshold = 5;\n */\n\n/**\n * Add guidelines in the horizontal direction. (default: [])\n * @name Moveable.Snappable#horizontalGuidlines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.horizontalGuidlines = [100, 200, 500];\n */\n\n/**\n * Add guidelines in the vertical direction. (default: [])\n * @name Moveable.Snappable#verticalGuidlines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.verticalGuidlines = [100, 200, 500];\n */\n/**\n * Add guidelines for the element. (default: [])\n * @name Moveable.Snappable#elementGuidelines\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.elementGuidelines = [\n *   document.querySelector(\".element\"),\n * ];\n */\n/**\n * You can set up boundaries. (default: null)\n * @name Moveable.Snappable#bounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.bounds = { left: 0, right: 1000, top: 0, bottom: 1000};\n */\n/**\n * You can set up inner boundaries. (default: null)\n * @name Moveable.Snappable#innerBounds\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.innerBounds = { left: 500, top: 500, width: 100, height: 100};\n */\n/**\n * snap distance digits (default: 0)\n * @name Moveable.Snappable#snapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.snapDigit = 0\n */\n/**\n * Whether to show snap distance (default: true)\n * @name Moveable.Snappable#isDisplaySnapDigit\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.isDisplaySnapDigit = true;\n */\n\n/**\n * You can set the text format of the distance shown in the guidelines. (default: self)\n * @name Moveable.Snappable#snapDistFormat\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  snappable: true,\n *  snapDistFormat: v => v,\n * });\n * moveable.snapDistFormat = v => `${v}px`;\n */\n\n/**\n * When you drag or dragControl, the `snap` event is called.\n * @memberof Moveable.Snappable\n * @event snap\n * @param {Moveable.Snappable.OnSnap} - Parameters for the `snap` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     snappable: true\n * });\n * moveable.on(\"snap\", e => {\n *     console.log(\"onSnap\", e);\n * });\n */\n","import {\n    setDragStart, getBeforeDragDist, getTransformDist,\n    convertTransformFormat, resolveTransformEvent, fillTransformStartEvent, setDefaultTransformIndex\n} from \"../gesto/GestoUtils\";\nimport { throttleArray, triggerEvent, fillParams, throttle, getDistSize, prefix, fillEndParams } from \"../utils\";\nimport { minus, plus, getRad } from \"../matrix\";\nimport {\n    DraggableProps, OnDrag, OnDragGroup,\n    OnDragGroupStart, OnDragStart, OnDragEnd, DraggableState,\n    Renderer, OnDragGroupEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { triggerChildGesto } from \"../groupUtils\";\nimport { checkSnapDrag, startCheckSnapDrag } from \"./Snappable\";\nimport { IObject } from \"@daybrush/utils\";\n\n/**\n * @namespace Draggable\n * @memberof Moveable\n * @description Draggable refers to the ability to drag and move targets.\n */\nexport default {\n    name: \"draggable\",\n    props: {\n        draggable: Boolean,\n        throttleDrag: Number,\n        throttleDragRotate: Number,\n        startDragRotate: Number,\n    } as const,\n    events: {\n        onDragStart: \"dragStart\",\n        onDrag: \"drag\",\n        onDragEnd: \"dragEnd\",\n        onDragGroupStart: \"dragGroupStart\",\n        onDragGroup: \"dragGroup\",\n        onDragGroupEnd: \"dragGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        React: Renderer,\n    ): any[] {\n        const throttleDragRotate = moveable.props.throttleDragRotate;\n        const { dragInfo, beforeOrigin } = moveable.state;\n\n        if (!throttleDragRotate || !dragInfo) {\n            return [];\n        }\n        const dist = dragInfo.dist;\n\n        if (!dist[0] && !dist[1]) {\n            return [];\n        }\n\n        const width = getDistSize(dist);\n        const rad = getRad(dist, [0, 0]);\n\n        return [<div className={prefix(\n            \"line\",\n            \"horizontal\",\n            \"dragline\",\n            \"dashed\",\n        )} key={`dragRotateGuideline`} style={{\n            width: `${width}px`,\n            transform: `translate(${beforeOrigin[0]}px, ${beforeOrigin[1]}px) rotate(${rad}rad)`,\n        }} />];\n    },\n    dragStart(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ) {\n        const { datas, parentEvent, parentGesto } = e;\n        const state = moveable.state;\n        const {\n            target,\n            gesto,\n        } = state;\n\n        if (gesto) {\n            return false;\n        }\n        state.gesto = parentGesto || moveable.targetGesto;\n        const style = window.getComputedStyle(target!);\n\n        datas.datas = {};\n        datas.left = parseFloat(style.left || \"\") || 0;\n        datas.top = parseFloat(style.top || \"\") || 0;\n        datas.bottom = parseFloat(style.bottom || \"\") || 0;\n        datas.right = parseFloat(style.right || \"\") || 0;\n        datas.startValue = [0, 0];\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e);\n        startCheckSnapDrag(moveable, datas);\n\n        datas.prevDist = [0, 0];\n        datas.prevBeforeDist = [0, 0];\n        datas.isDrag = false;\n\n        const params = fillParams<OnDragStart>(moveable, e, {\n            set: (translate: number[]) => {\n                datas.startValue = translate;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = parentEvent || triggerEvent(moveable, \"onDragStart\", params);\n\n        if (result !== false) {\n            datas.isDrag = true;\n            moveable.state.dragInfo = {\n                startRect: moveable.getRect(),\n                dist: [0, 0],\n            };\n        } else {\n            state.gesto = null;\n            datas.isPinch = false;\n        }\n        return datas.isDrag ? params : false;\n    },\n    drag(\n        moveable: MoveableManagerInterface<DraggableProps, any>,\n        e: any,\n    ): OnDrag | undefined {\n        resolveTransformEvent(e, \"translate\");\n\n        const { datas, parentEvent, parentFlag, isPinch, isRequest } = e;\n        let { distX, distY } = e;\n        const { isDrag, prevDist, prevBeforeDist, startValue } = datas;\n\n        if (!isDrag) {\n            return;\n        }\n        const props = moveable.props;\n\n        const parentMoveable = props.parentMoveable;\n        const throttleDrag = parentEvent ? 0 : (props.throttleDrag || 0);\n        const throttleDragRotate = parentEvent ? 0 : (props.throttleDragRotate || 0);\n\n        let isSnap = false;\n        let dragRotateRad = 0;\n\n        if (!parentEvent && throttleDragRotate > 0 && (distX || distY)) {\n            const startDragRotate = props.startDragRotate || 0;\n            const deg\n                = throttle(startDragRotate + getRad([0, 0], [distX, distY]) * 180 / Math.PI, throttleDragRotate)\n                - startDragRotate;\n            const ry = distY * Math.abs(Math.cos((deg - 90) / 180 * Math.PI));\n            const rx = distX * Math.abs(Math.cos(deg / 180 * Math.PI));\n            const r = getDistSize([rx, ry]);\n            dragRotateRad = deg * Math.PI / 180;\n\n            distX = r * Math.cos(dragRotateRad);\n            distY = r * Math.sin(dragRotateRad);\n        }\n\n        if (!isPinch && !parentEvent && !parentFlag && (!throttleDragRotate || distX || distY)) {\n            const [verticalInfo, horizontalInfo] = checkSnapDrag(\n                moveable, distX, distY, throttleDragRotate, isRequest, datas,\n            );\n            const {\n                isSnap: isVerticalSnap,\n                isBound: isVerticalBound,\n                offset: verticalOffset,\n            } = verticalInfo;\n            const {\n                isSnap: isHorizontalSnap,\n                isBound: isHorizontalBound,\n                offset: horizontalOffset,\n            } = horizontalInfo;\n            isSnap = isVerticalSnap || isHorizontalSnap || isVerticalBound || isHorizontalBound;\n\n            distX += verticalOffset;\n            distY += horizontalOffset;\n        }\n        datas.passDeltaX = distX - (datas.passDistX || 0);\n        datas.passDeltaY = distY - (datas.passDistY || 0);\n        datas.passDistX = distX;\n        datas.passDistY = distY;\n        const beforeTranslate = plus(getBeforeDragDist({ datas, distX, distY }), startValue);\n        const translate = plus(getTransformDist({ datas, distX, distY }), startValue);\n\n        if (!throttleDragRotate && !isSnap) {\n            throttleArray(translate, throttleDrag);\n            throttleArray(beforeTranslate, throttleDrag);\n        }\n\n        const beforeDist = minus(beforeTranslate, startValue);\n        const dist = minus(translate, startValue);\n        const delta = minus(dist, prevDist);\n        const beforeDelta = minus(beforeDist, prevBeforeDist);\n\n        datas.prevDist = dist;\n        datas.prevBeforeDist = beforeDist;\n\n        const left = datas.left + beforeDist[0];\n        const top = datas.top + beforeDist[1];\n        const right = datas.right - beforeDist[0];\n        const bottom = datas.bottom - beforeDist[1];\n        const nextTransform = convertTransformFormat(datas,\n            `translate(${translate[0]}px, ${translate[1]}px)`, `translate(${dist[0]}px, ${dist[1]}px)`);\n\n        moveable.state.dragInfo.dist = parentEvent ? [0, 0] : dist;\n        if (!parentEvent && !parentMoveable && delta.every(num => !num) && beforeDelta.some(num => !num)) {\n            return;\n        }\n\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const params = fillParams<OnDrag>(moveable, e, {\n            transform: nextTransform,\n            dist,\n            delta,\n            translate,\n            beforeDist,\n            beforeDelta,\n            beforeTranslate,\n            left,\n            top,\n            right,\n            bottom,\n            width,\n            height,\n            isPinch,\n        });\n\n        !parentEvent && triggerEvent(moveable, \"onDrag\", params);\n        return params;\n    },\n    dragEnd(\n        moveable: MoveableManagerInterface<DraggableProps, DraggableState>,\n        e: any,\n    ) {\n        const { parentEvent, datas, isDrag } = e;\n\n        moveable.state.gesto = null;\n        moveable.state.dragInfo = null;\n        if (!datas.isDrag) {\n            return;\n        }\n        datas.isDrag = false;\n        !parentEvent && triggerEvent(moveable, \"onDragEnd\", fillEndParams<OnDragEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas, clientX, clientY } = e;\n\n        const params = this.dragStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const events = triggerChildGesto(moveable, this, \"dragStart\", [\n            clientX || 0,\n            clientY || 0,\n        ], e, false);\n\n        const nextParams: OnDragGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onDragGroupStart\", nextParams);\n\n        datas.isDrag = result !== false;\n\n        return datas.isDrag ? params : false;\n    },\n    dragGroup(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        const params = this.drag(moveable, e);\n        const { passDeltaX, passDeltaY } = e.datas;\n        const events = triggerChildGesto(moveable, this, \"drag\", [passDeltaX, passDeltaY], e, false);\n\n        if (!params) {\n            return;\n        }\n        const nextParams: OnDragGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onDragGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isDrag) {\n            return;\n        }\n        this.dragEnd(moveable, e);\n        triggerChildGesto(moveable, this, \"dragEnd\", [0, 0], e, false);\n        triggerEvent(moveable, \"onDragGroupEnd\", fillEndParams<OnDragGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        }));\n\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Draggable#request\n     * @param {object} [e] - the draggable's request parameter\n     * @param {number} [e.x] - x position\n     * @param {number} [e.y] - y position\n     * @param {number} [e.deltaX] - X number to move\n     * @param {number} [e.deltaY] - Y number to move\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"draggable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * // Use Absolute Value\n     * moveable.request(\"draggable\", { x: 200, y: 100 });\n     * moveable.request(\"draggable\", { x: 220, y: 100 });\n     * moveable.request(\"draggable\", { x: 240, y: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        return {\n            isControl: false,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"x\" in e) {\n                    distX = e.x - rect.left;\n                } else if (\"deltaX\" in e) {\n                    distX += e.deltaX;\n                }\n                if (\"y\" in e) {\n                    distY = e.y - rect.top;\n                } else if (\"deltaY\" in e) {\n                    distY += e.deltaY;\n                }\n\n                return { datas, distX, distY };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n    unset(moveable: any) {\n        moveable.state.dragInfo = null;\n    },\n};\n\n/**\n * Whether or not target can be dragged. (default: false)\n * @name Moveable.Draggable#draggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.draggable = true;\n */\n\n/**\n * throttle of x, y when drag.\n * @name Moveable.Draggable#throttleDrag\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleDrag = 1;\n */\n\n/**\n* throttle of angle of x, y when drag.\n* @name Moveable.Draggable#throttleDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* moveable.throttleDragRotate = 45;\n*/\n\n/**\n* start angle of throttleDragRotate of x, y when drag.\n* @name Moveable.Draggable#startDragRotate\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body);\n*\n* // 45, 135, 225, 315\n* moveable.throttleDragRotate = 90;\n* moveable.startDragRotate = 45;\n*/\n\n/**\n * When the drag starts, the dragStart event is called.\n * @memberof Moveable.Draggable\n * @event dragStart\n * @param {Moveable.Draggable.OnDragStart} - Parameters for the dragStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When dragging, the drag event is called.\n * @memberof Moveable.Draggable\n * @event drag\n * @param {Moveable.Draggable.OnDrag} - Parameters for the drag event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"drag\", ({ target, transform }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the drag finishes, the dragEnd event is called.\n * @memberof Moveable.Draggable\n * @event dragEnd\n * @param {Moveable.Draggable.OnDragEnd} - Parameters for the dragEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { draggable: true });\n * moveable.on(\"dragEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group drag starts, the `dragGroupStart` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroupStart\n* @param {Moveable.Draggable.OnDragGroupStart} - Parameters for the `dragGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroupStart\", ({ targets }) => {\n*     console.log(\"onDragGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group drag, the `dragGroup` event is called.\n* @memberof Moveable.Draggable\n* @event dragGroup\n* @param {Moveable.Draggable.OnDragGroup} - Parameters for the `dragGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     draggable: true\n* });\n* moveable.on(\"dragGroup\", ({ targets, events }) => {\n*     console.log(\"onDragGroup\", targets);\n*     events.forEach(ev => {\n*          // drag event\n*          console.log(\"onDrag left, top\", ev.left, ev.top);\n*          // ev.target!.style.left = `${ev.left}px`;\n*          // ev.target!.style.top = `${ev.top}px`;\n*          console.log(\"onDrag translate\", ev.dist);\n*          ev.target!.style.transform = ev.transform;)\n*     });\n* });\n*/\n\n/**\n * When the group drag finishes, the `dragGroupEnd` event is called.\n * @memberof Moveable.Draggable\n * @event dragGroupEnd\n * @param {Moveable.Draggable.OnDragGroupEnd} - Parameters for the `dragGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     draggable: true\n * });\n * moveable.on(\"dragGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onDragGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, prefix, triggerEvent, fillParams,\n    getRotationRad, getClientRect, caculatePosition, fillEndParams\n} from \"../utils\";\nimport { IObject, hasClass } from \"@daybrush/utils\";\nimport {\n    RotatableProps, OnRotateGroup, OnRotateGroupEnd,\n    Renderer, OnRotateGroupStart, OnRotateStart, OnRotate,\n    OnRotateEnd, MoveableClientRect, SnappableProps,\n    SnappableState, MoveableManagerInterface, MoveableGroupInterface, DraggableProps,\n    OnDragStart,\n} from \"../types\";\nimport { triggerChildAble } from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { minus, plus, getRad, rotate as rotateMatrix } from \"../matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapRotate } from \"./Snappable\";\nimport {\n    fillTransformStartEvent,\n    convertTransformFormat, getRotateDist,\n    getOriginDirection,\n    getDirectionOffset,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n    resolveTransformEvent,\n} from \"../gesto/GestoUtils\";\n\n/**\n * @namespace Rotatable\n * @memberof Moveable\n * @description Rotatable indicates whether the target can be rotated.\n */\n\nfunction setRotateStartInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    datas: IObject<any>, clientX: number, clientY: number, origin: number[], rect: MoveableClientRect) {\n\n    const n = moveable.state.is3d ? 4 : 3;\n    const nextOrigin = caculatePosition(moveable.state.rootMatrix, origin, n);\n    const startAbsoluteOrigin = plus([rect.left, rect.top], nextOrigin);\n\n    datas.startAbsoluteOrigin = startAbsoluteOrigin;\n    datas.prevDeg = getRad(startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180;\n    datas.prevSnapDeg = datas.prevDeg;\n    datas.startDeg = datas.prevDeg;\n    datas.loop = 0;\n}\nfunction getParentDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    parentDist: number,\n    direction: number,\n    startValue: number,\n) {\n    const {\n        prevDeg,\n    } = datas;\n\n    // const absoluteDeg = startValue + parentDist;\n    const dist = checkSnapRotate(\n        moveable,\n        moveableRect,\n        datas.origin,\n        parentDist,\n    );\n    datas.prevDeg = dist;\n\n    const delta = dist - prevDeg;\n\n    return [delta, dist, startValue + dist];\n}\nfunction getDeg(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    deg: number,\n    direction: number,\n    startValue: number,\n    throttleRotate: number,\n    isSnap?: boolean,\n) {\n    const {\n        prevDeg,\n        prevSnapDeg,\n        startDeg,\n        loop: prevLoop,\n    } = datas;\n\n    if (prevDeg > deg && prevDeg > 270 && deg < 90) {\n        // 360 => 0\n        ++datas.loop;\n    } else if (prevDeg < deg && prevDeg < 90 && deg > 270) {\n        // 0 => 360\n        --datas.loop;\n    }\n    const loop = datas.loop;\n    const absolutePrevSnapDeg = prevLoop * 360 + prevSnapDeg - startDeg + startValue;\n    let absoluteDeg = loop * 360 + deg - startDeg + startValue;\n\n    datas.prevDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    absoluteDeg = throttle(absoluteDeg, throttleRotate);\n    let dist = direction * (absoluteDeg - startValue);\n    if (isSnap) {\n        dist = checkSnapRotate(moveable, moveableRect, datas.origin, dist);\n        absoluteDeg = dist / direction + startValue;\n    }\n    datas.prevSnapDeg = absoluteDeg - loop * 360 + startDeg - startValue;\n\n    const delta = direction * (absoluteDeg - absolutePrevSnapDeg);\n\n    return [delta, dist, startValue + dist];\n}\nfunction getRotateInfo(\n    moveable: MoveableManagerInterface<any, any>,\n    moveableRect: any,\n    datas: IObject<any>,\n    direction: number,\n    clientX: number, clientY: number,\n    startValue: number,\n    throttleRotate: number,\n) {\n    return getDeg(\n        moveable,\n        moveableRect,\n        datas,\n        getRad(datas.startAbsoluteOrigin, [clientX, clientY]) / Math.PI * 180,\n        direction,\n        startValue,\n        throttleRotate,\n        true,\n    );\n}\n\nexport function getReversePositionX(dir: string) {\n    if (dir === \"left\") {\n        return \"right\";\n    } else if (dir === \"right\") {\n        return \"left\";\n    }\n    return dir;\n}\nexport function getReversePositionY(dir: string) {\n    if (dir === \"top\") {\n        return \"bottom\";\n    } else if (dir === \"bottom\") {\n        return \"top\";\n    }\n    return dir;\n}\nexport function getPositions(\n    rotationPosition: RotatableProps[\"rotationPosition\"],\n    [pos1, pos2, pos3, pos4]: number[][],\n    direction: number,\n) {\n    const [dir1, dir2] = (rotationPosition || \"top\").split(\"-\");\n    let radPoses = [pos1, pos2];\n\n    // if (scale[0] < 0) {\n    //     dir1 = getReversePositionX(dir1);\n    //     dir2 = getReversePositionX(dir2);\n    // }\n    // if (scale[1] < 0) {\n    //     dir1 = getReversePositionY(dir1);\n    //     dir2 = getReversePositionY(dir2);\n    // }\n    if (dir1 === \"left\") {\n        radPoses = [pos3, pos1];\n    } else if (dir1 === \"right\") {\n        radPoses = [pos2, pos4];\n    } else if (dir1 === \"bottom\") {\n        radPoses = [pos4, pos3];\n    }\n    let pos = [\n        (radPoses[0][0] + radPoses[1][0]) / 2,\n        (radPoses[0][1] + radPoses[1][1]) / 2,\n    ];\n    const rad = getRotationRad(radPoses, direction);\n\n    if (dir2) {\n        const isStart = dir2 === \"top\" || dir2 === \"left\";\n        const isReverse = dir1 === \"bottom\" || dir1 === \"left\";\n\n        pos = radPoses[(isStart && !isReverse) || (!isStart && isReverse) ? 0 : 1];\n    }\n    return [pos, rad] as const;\n}\n\nexport function dragControlCondition(e: any) {\n    if (e.isRequest) {\n        return e.requestAble === \"rotatable\";\n    }\n    return hasClass(e.inputEvent.target, prefix(\"rotation\"));\n}\n\nexport default {\n    name: \"rotatable\",\n    canPinch: true,\n    props: {\n        rotatable: Boolean,\n        rotationPosition: String,\n        throttleRotate: Number,\n    } as const,\n    events: {\n        onRotateStart: \"rotateStart\",\n        onRotate: \"rotate\",\n        onRotateEnd: \"rotateEnd\",\n        onRotateGroupStart: \"rotateGroupStart\",\n        onRotateGroup: \"rotateGroup\",\n        onRotateGroupEnd: \"rotateGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<RotatableProps>, React: Renderer): any {\n        const {\n            rotatable,\n            rotationPosition,\n        } = moveable.props;\n        if (!rotatable) {\n            return null;\n        }\n        const { renderPoses, direction } = moveable.state;\n        const [pos, rotationRad] = getPositions(rotationPosition!, renderPoses, direction);\n\n        return (\n            <div key=\"rotation\" className={prefix(\"line rotation-line\")} style={{\n                // tslint:disable-next-line: max-line-length\n                transform: `translate(-50%) translate(${pos[0]}px, ${pos[1]}px) rotate(${rotationRad}rad)`,\n            }}>\n                <div className={prefix(\"control\", \"rotation\")}></div>\n            </div>\n        );\n    },\n    dragControlCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<RotatableProps & SnappableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const {\n            datas,\n            clientX, clientY,\n            parentRotate, parentFlag, isPinch,\n            isRequest,\n        } = e;\n        const {\n            target, left, top, origin, beforeOrigin,\n            direction, beforeDirection, targetTransform,\n        } = moveable.state;\n\n        if (!isRequest && !target) {\n            return false;\n        }\n\n        const rect = moveable.getRect();\n        datas.rect = rect;\n        datas.transform = targetTransform;\n        datas.left = left;\n        datas.top = top;\n        datas.fixedPosition = getDirectionOffset(moveable, getOriginDirection(moveable));\n\n        if (isRequest || isPinch || parentFlag) {\n            const externalRotate = parentRotate || 0;\n\n            datas.beforeInfo = {\n                origin: rect.beforeOrigin,\n                prevDeg: externalRotate,\n                startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n            datas.afterInfo = {\n                origin: rect.origin,\n                prevDeg: externalRotate, startDeg: externalRotate,\n                prevSnapDeg: externalRotate, loop: 0,\n            };\n        } else {\n            datas.beforeInfo = { origin: rect.beforeOrigin };\n            datas.afterInfo = { origin: rect.origin };\n\n            const controlRect = getClientRect(moveable.controlBox.getElement());\n\n            setRotateStartInfo(moveable, datas.beforeInfo, clientX, clientY, beforeOrigin, controlRect);\n            setRotateStartInfo(moveable, datas.afterInfo, clientX, clientY, origin, controlRect);\n        }\n\n        datas.direction = direction;\n        datas.beforeDirection = beforeDirection;\n        datas.startValue = 0;\n        datas.datas = {};\n\n        setDefaultTransformIndex(e);\n\n        const params = fillParams<OnRotateStart>(moveable, e, {\n            set: (rotatation: number) => {\n                datas.startValue = rotatation * Math.PI / 180;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart | false,\n        });\n        const result = triggerEvent(moveable, \"onRotateStart\", params);\n        datas.isRotate = result !== false;\n        moveable.state.snapRenderInfo = {\n            request: e.isRequest,\n        };\n\n        return datas.isRotate ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<RotatableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, clientX, clientY, parentRotate, parentFlag, isPinch, groupDelta } = e;\n        const {\n            direction,\n            beforeDirection,\n            beforeInfo,\n            afterInfo,\n            isRotate,\n            startValue,\n            rect,\n        } = datas;\n\n        if (!isRotate) {\n            return;\n        }\n\n        resolveTransformEvent(e, \"rotate\");\n\n        const {\n            throttleRotate = 0,\n            parentMoveable,\n        } = moveable.props;\n\n        let delta: number;\n        let dist: number;\n        let rotate: number;\n        let beforeDelta: number;\n        let beforeDist: number;\n        let beforeRotate: number;\n\n        const startDeg = 180 / Math.PI * startValue;\n\n        if (!parentFlag && \"parentDist\" in e) {\n            const parentDist = e.parentDist;\n\n            [delta, dist, rotate]\n                = getParentDeg(moveable, rect, afterInfo, parentDist, direction, startDeg);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getParentDeg(moveable, rect, beforeInfo, parentDist, direction, startDeg);\n\n        } else if (isPinch || parentFlag) {\n            [delta, dist, rotate]\n                = getDeg(moveable, rect, afterInfo, parentRotate, direction, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate]\n                = getDeg(moveable, rect, beforeInfo, parentRotate, direction, startDeg, throttleRotate);\n        } else {\n            [delta, dist, rotate]\n                = getRotateInfo(moveable, rect, afterInfo, direction, clientX, clientY, startDeg, throttleRotate);\n            [beforeDelta, beforeDist, beforeRotate] = getRotateInfo(\n                moveable, rect, beforeInfo, beforeDirection, clientX, clientY, startDeg, throttleRotate,\n            );\n        }\n\n        if (!delta && !beforeDelta && !parentMoveable) {\n            return;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `rotate(${rotate}deg)`, `rotate(${dist}deg)`);\n\n        const inverseDist = getRotateDist(moveable, dist, datas.fixedPosition, datas);\n        const inverseDelta = minus(\n            plus(groupDelta || [0, 0], inverseDist),\n            datas.prevInverseDist || [0, 0],\n        );\n        datas.prevInverseDist = inverseDist;\n\n        const params = fillParams<OnRotate>(moveable, e, {\n            delta,\n            dist,\n            rotate,\n            beforeDist,\n            beforeDelta,\n            beforeRotate,\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onRotate\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RotatableProps>, e: any) {\n        const { datas, isDrag } = e;\n\n        if (!datas.isRotate) {\n            return false;\n        }\n        datas.isRotate = false;\n\n        triggerEvent(moveable, \"onRotateEnd\", fillEndParams<OnRotateEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: dragControlCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const {\n            left: parentLeft,\n            top: parentTop,\n            beforeOrigin: parentBeforeOrigin,\n        } = moveable.state;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        params.set(datas.beforeDirection * moveable.rotation);\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const { left, top, beforeOrigin } = child.state;\n                const childClient = plus(\n                    minus([left, top], [parentLeft, parentTop]),\n                    minus(beforeOrigin, parentBeforeOrigin),\n                );\n\n                ev.datas.groupClient = childClient;\n                return { ...ev, parentRotate: 0 };\n            },\n        );\n\n        const nextParams: OnRotateGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onRotateGroupStart\", nextParams);\n\n        datas.isRotate = result !== false;\n\n        return datas.isRotate ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const direction = datas.beforeDirection;\n        const parentRotate = params.beforeDist;\n        const deg = params.beforeDelta;\n        const rad = deg / 180 * Math.PI;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [prevX, prevY] = ev.datas.groupClient;\n                const [clientX, clientY] = rotateMatrix([prevX, prevY], rad * direction);\n                const delta = [clientX - prevX, clientY - prevY];\n\n                ev.datas.groupClient = [clientX, clientY];\n\n                return { ...ev, parentRotate, groupDelta: delta };\n            },\n        );\n        moveable.rotation = direction * params.beforeRotate;\n\n        const nextParams: OnRotateGroup = {\n            targets: moveable.props.targets!,\n            events,\n            set: (rotation: number) => {\n                moveable.rotation = rotation;\n            },\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onRotateGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isRotate) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnRotateGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onRotateGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Rotatable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.deltaRotate=0] -  delta number of rotation\n     * @param {number} [e.rotate=0] - absolute number of moveable's rotation\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"rotatable\", { deltaRotate: 10 }, true);\n     *\n     * * moveable.request(\"rotatable\", { rotate: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"rotatable\");\n     *\n     * // request\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     * requester.request({ deltaRotate: 10 });\n     *\n     * requester.request({ rotate: 10 });\n     * requester.request({ rotate: 20 });\n     * requester.request({ rotate: 30 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<RotatableProps>) {\n        const datas = {};\n        let distRotate = 0;\n\n        const startRotation = moveable.getRotation();\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaRotate\" in e) {\n                    distRotate += e.deltaRotate;\n                } else if (\"rotate\" in e) {\n                    distRotate = e.rotate - startRotation;\n                }\n\n                return { datas, parentDist: distRotate };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether or not target can be rotated. (default: false)\n * @name Moveable.Rotatable#rotatable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.rotatable = true;\n */\n/**\n * You can specify the position of the rotation. (default: \"top\")\n * @name Moveable.Rotatable#rotationPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   rotationPosition: \"top\",\n * });\n *\n * moveable.rotationPosition = \"bottom\"\n */\n\n/**\n * throttle of angle(degree) when rotate.\n * @name Moveable.Rotatable#throttleRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleRotate = 1;\n */\n\n/**\n * When the rotate starts, the rotateStart event is called.\n * @memberof Moveable.Rotatable\n * @event rotateStart\n * @param {Moveable.Rotatable.OnRotateStart} - Parameters for the rotateStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n\n/**\n* When rotating, the rotate event is called.\n* @memberof Moveable.Rotatable\n* @event rotate\n* @param {Moveable.Rotatable.OnRotate} - Parameters for the rotate event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { rotatable: true });\n* moveable.on(\"rotate\", ({ target, transform, dist }) => {\n*     target.style.transform = transform;\n* });\n*/\n/**\n * When the rotate finishes, the rotateEnd event is called.\n * @memberof Moveable.Rotatable\n * @event rotateEnd\n * @param {Moveable.Rotatable.OnRotateEnd} - Parameters for the rotateEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { rotatable: true });\n * moveable.on(\"rotateEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n * When the group rotate starts, the `rotateGroupStart` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupStart\n * @param {Moveable.Rotatable.OnRotateGroupStart} - Parameters for the `rotateGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupStart\", ({ targets }) => {\n *     console.log(\"onRotateGroupStart\", targets);\n * });\n */\n\n/**\n* When the group rotate, the `rotateGroup` event is called.\n* @memberof Moveable.Rotatable\n* @event rotateGroup\n* @param {Moveable.Rotatable.OnRotateGroup} - Parameters for the `rotateGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     rotatable: true\n* });\n* moveable.on(\"rotateGroup\", ({ targets, events }) => {\n*     console.log(\"onRotateGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group rotate.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const deg = ev.beforeDist;\n*     });\n* });\n*/\n\n/**\n * When the group rotate finishes, the `rotateGroupEnd` event is called.\n * @memberof Moveable.Rotatable\n * @event rotateGroupEnd\n * @param {Moveable.Rotatable.OnRotateGroupEnd} - Parameters for the `rotateGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     rotatable: true\n * });\n * moveable.on(\"rotateGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onRotateGroupEnd\", targets, isDrag);\n * });\n */\n","import { prefix, getControlTransform, throttle, getLineStyle } from \"./utils\";\nimport { ResizableProps, ScalableProps, WarpableProps, Renderer, MoveableManagerInterface } from \"./types\";\nimport { DIRECTION_INDEXES, DIRECTION_ROTATIONS, DIRECTIONS } from \"./consts\";\nimport { IObject } from \"@daybrush/utils\";\nimport { getRad } from \"./matrix\";\n\nexport function renderControls(\n    moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    defaultDirections: string[],\n    React: Renderer,\n): any[] {\n    const {\n        renderPoses,\n        rotation,\n    } = moveable.state;\n    const {\n        renderDirections: directions = defaultDirections,\n    } = moveable.props;\n    const {\n        direction,\n    } = moveable.state;\n\n    const directionMap: IObject<boolean> = {};\n    directions.forEach(dir => {\n        directionMap[dir] = true;\n    });\n    return directions.map(dir => {\n        const indexes = DIRECTION_INDEXES[dir];\n\n        if (!indexes || !directionMap[dir]) {\n            return null;\n        }\n        let directionRotation = throttle(rotation / Math.PI * 180, 15) + DIRECTION_ROTATIONS[dir];\n\n        if (direction < 1) {\n            directionRotation = 360 - directionRotation;\n        }\n        directionRotation %= 180;\n\n        return (\n            <div className={prefix(\"control\", \"direction\", dir)}\n                data-rotation={directionRotation} data-direction={dir} key={`direction-${dir}`}\n                style={getControlTransform(rotation, ...indexes.map(index => renderPoses[index]))}></div>\n        );\n    });\n}\nexport function renderLine(\n    React: Renderer, direction: string, pos1: number[], pos2: number[],\n    key: number | string, ...classNames: string[]) {\n    const rad = getRad(pos1, pos2);\n    const rotation = direction ? (throttle(rad / Math.PI * 180, 15)) % 180 : -1;\n\n    return <div key={`line${key}`} className={prefix(\"line\", \"direction\", direction, ...classNames)}\n        data-rotation={rotation}\n        data-line-index={key}\n        data-direction={direction} style={getLineStyle(pos1, pos2, rad)}></div>;\n}\nexport function renderAllDirections(\n    moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n) {\n    return renderControls(moveable, DIRECTIONS, React);\n}\nexport function renderDiagonalDirections(\n    moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps & WarpableProps>>,\n    React: Renderer,\n): any[] {\n    return renderControls(moveable, [\"nw\", \"ne\", \"sw\", \"se\"], React);\n}\n","import {\n    throttle, getDirection, triggerEvent,\n    fillParams, getKeepRatioHeight, getKeepRatioWidth, getCSSSize,\n    getDistSize, caculateBoundSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport {\n    setDragStart,\n    getDragDist,\n    getResizeDist,\n    getStartDirection,\n    getAbsoluteFixedPosition,\n} from \"../gesto/GestoUtils\";\nimport {\n    ResizableProps, OnResizeGroup, OnResizeGroupEnd,\n    Renderer, OnResizeGroupStart, DraggableProps, OnDrag, OnResizeStart, SnappableState,\n    OnResize, OnResizeEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport {\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { getRad, caculate, createRotateMatrix, plus } from \"../matrix\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\nimport { checkSnapSize } from \"./Snappable\";\nimport { IObject, isString } from \"@daybrush/utils\";\nimport { TINY_NUM } from \"../consts\";\n\n/**\n * @namespace Resizable\n * @memberof Moveable\n * @description Resizable indicates whether the target's width and height can be increased or decreased.\n */\n\nexport default {\n    name: \"resizable\",\n    ableGroup: \"size\",\n    updateRect: true,\n    canPinch: true,\n    props: {\n        resizable: Boolean,\n        throttleResize: Number,\n        renderDirections: Array,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onResizeStart: \"resizeStart\",\n        onResize: \"resize\",\n        onResizeEnd: \"resizeEnd\",\n\n        onResizeGroupStart: \"resizeGroupStart\",\n        onResizeGroup: \"resizeGroup\",\n        onResizeGroupEnd: \"resizeGroupEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<Partial<ResizableProps>>, React: Renderer): any[] | undefined {\n        const { resizable, edge } = moveable.props;\n        if (resizable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps, SnappableState>,\n        e: any,\n    ) {\n        const {\n            inputEvent,\n            isPinch,\n            parentDirection,\n            datas,\n            parentFlag,\n        } = e;\n\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n\n        const { target, width, height } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        !isPinch && setDragStart(moveable, e);\n\n        datas.datas = {};\n        datas.direction = direction;\n        datas.startOffsetWidth = width;\n        datas.startOffsetHeight = height;\n        datas.prevWidth = 0;\n        datas.prevHeight = 0;\n        [\n            datas.startWidth,\n            datas.startHeight,\n        ] = getCSSSize(target);\n        const padding = [Math.max(0, width - datas.startWidth), Math.max(0, height - datas.startHeight)];\n        datas.minSize = padding;\n        datas.maxSize = [Infinity, Infinity];\n\n        if (!parentFlag) {\n            const style = window.getComputedStyle(target);\n\n            datas.minSize = plus([\n                parseFloat(style.minWidth!) || 0,\n                parseFloat(style.minHeight!) || 0,\n            ], padding);\n            datas.maxSize = plus([\n                parseFloat(style.maxWidth!) || Infinity,\n                parseFloat(style.maxHeight!) || Infinity,\n            ], padding);\n        }\n        const transformOrigin = moveable.props.transformOrigin || \"% %\";\n\n        datas.transformOrigin = transformOrigin && isString(transformOrigin)\n            ? transformOrigin.split(\" \")\n            : transformOrigin;\n        datas.startDirection = getStartDirection(moveable, direction);\n        datas.fixedPosition = getAbsoluteFixedPosition(moveable, datas.startDirection);\n        datas.fixedOriginalPosition = getAbsoluteFixedPosition(moveable, direction);\n\n        const params = fillParams<OnResizeStart>(moveable, e, {\n            direction,\n            set: ([startWidth, startHeight]: number[]) => {\n                datas.startWidth = startWidth;\n                datas.startHeight = startHeight;\n            },\n            setMin: (minSize: number[]) => {\n                datas.minSize = minSize;\n            },\n            setMax: (maxSize: number[]) => {\n                datas.maxSize = maxSize;\n            },\n            setOrigin: (origin: Array<string | number>) => {\n                datas.transformOrigin = origin;\n            },\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeStart\", params);\n        if (result !== false) {\n            datas.isResize = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n        }\n        return datas.isResize ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const {\n            datas,\n            distX, distY,\n            parentFlag, isPinch,\n            parentDistance, parentScale,\n            parentKeepRatio,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n\n        const {\n            direction,\n            isResize,\n            transformOrigin,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            startWidth,\n            startHeight,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n            minSize,\n            maxSize,\n        } = datas;\n        const {\n            throttleResize = 0,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = moveable.props.keepRatio || parentKeepRatio;\n        const isWidth = sizeDirection[0] || !sizeDirection[1];\n        const ratio = isWidth ? startOffsetHeight / startOffsetWidth : startOffsetWidth / startOffsetHeight;\n        const startDirection = keepRatio || parentFlag ? direction : datas.startDirection;\n        let fixedPosition = dragClient;\n        let distWidth: number = 0;\n        let distHeight: number = 0;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsoluteFixedPosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = (keepRatio ? datas.fixedOriginalPosition : datas.fixedPosition);\n            }\n        }\n\n        if (parentDist) {\n            distWidth = parentDist[0];\n            distHeight = parentDist[1];\n        } else if (parentScale) {\n            distWidth = (parentScale[0] - 1) * startOffsetWidth;\n            distHeight = (parentScale[1] - 1) * startOffsetHeight;\n        } else if (isPinch) {\n            if (parentDistance) {\n                distWidth = parentDistance;\n                distHeight = parentDistance * startOffsetHeight / startOffsetWidth;\n            }\n        } else {\n            const dist = getDragDist({ datas, distX, distY });\n\n            distWidth = sizeDirection[0] * dist[0];\n            distHeight = sizeDirection[1] * dist[1];\n\n            if (keepRatio && startOffsetWidth && startOffsetHeight) {\n                const rad = getRad([0, 0], dist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const ratioRad = getRad([0, 0], [startOffsetWidth, startOffsetHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = getKeepRatioWidth(distHeight, isWidth, ratio);\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = getKeepRatioHeight(distWidth, isWidth, ratio);\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n        }\n        let nextWidth = sizeDirection[0] || keepRatio\n            ? Math.max(startOffsetWidth + distWidth, TINY_NUM) : startOffsetWidth;\n        let nextHeight = sizeDirection[1] || keepRatio\n            ? Math.max(startOffsetHeight + distHeight, TINY_NUM) : startOffsetHeight;\n\n        if (keepRatio && startOffsetWidth && startOffsetHeight) {\n            // startOffsetWidth : startOffsetHeight = nextWidth : nextHeight\n            nextHeight = nextWidth * startOffsetHeight / startOffsetWidth;\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapSize(\n                moveable, nextWidth,\n                nextHeight, direction,\n                datas.fixedOriginalPosition,\n                isRequest,\n                datas,\n            );\n        }\n        if (parentDist) {\n            !parentDist[0] && (snapDist[0] = 0);\n            !parentDist[1] && (snapDist[1] = 0);\n        }\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    nextWidth = throttle(nextWidth, throttleResize!);\n                } else {\n                    nextHeight = throttle(nextHeight, throttleResize!);\n                }\n            }\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                nextWidth += snapDist[0];\n                nextHeight = getKeepRatioHeight(nextWidth, isWidth, ratio);\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                nextHeight += snapDist[1];\n                nextWidth = getKeepRatioWidth(nextHeight, isWidth, ratio);\n            }\n        } else {\n            nextWidth += snapDist[0];\n            nextHeight += snapDist[1];\n            if (!snapDist[0]) {\n                nextWidth = throttle(nextWidth, throttleResize!);\n            }\n            if (!snapDist[1]) {\n                nextHeight = throttle(nextHeight, throttleResize!);\n            }\n        }\n        [nextWidth, nextHeight] = caculateBoundSize(\n            [nextWidth, nextHeight],\n            minSize,\n            maxSize,\n            keepRatio,\n        );\n        nextWidth = Math.round(nextWidth);\n        nextHeight = Math.round(nextHeight);\n        distWidth = nextWidth - startOffsetWidth;\n        distHeight = nextHeight - startOffsetHeight;\n\n        const delta = [distWidth - prevWidth, distHeight - prevHeight];\n\n        datas.prevWidth = distWidth;\n        datas.prevHeight = distHeight;\n\n        const inverseDelta = getResizeDist(\n                moveable,\n                nextWidth, nextHeight,\n                startDirection, fixedPosition, transformOrigin);\n\n        if (!parentMoveable && delta.every(num => !num) && inverseDelta.every(num => !num)) {\n            return;\n        }\n        const params = fillParams<OnResize>(moveable, e, {\n            width: startWidth + distWidth,\n            height: startHeight + distHeight,\n            offsetWidth: nextWidth,\n            offsetHeight: nextHeight,\n            direction,\n            dist: [distWidth, distHeight],\n            delta,\n            isPinch: !!isPinch,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, inverseDelta, !!isPinch, false),\n            ) as OnDrag,\n        });\n        triggerEvent<ResizableProps>(moveable, \"onResize\", params);\n        return params;\n    },\n    dragControlAfter(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const datas = e.datas;\n        const {\n            isResize,\n            startOffsetWidth,\n            startOffsetHeight,\n            prevWidth,\n            prevHeight,\n        } = datas;\n\n        if (!isResize) {\n            return;\n        }\n        const {\n            width,\n            height,\n        } = moveable.state;\n        const errorWidth = width - (startOffsetWidth + prevWidth);\n        const errorHeight = height - (startOffsetHeight + prevHeight);\n        const isErrorWidth = Math.abs(errorWidth) > 3;\n        const isErrorHeight = Math.abs(errorHeight) > 3;\n\n        if (isErrorWidth) {\n            datas.startWidth += errorWidth;\n            datas.startOffsetWidth += errorWidth;\n            datas.prevWidth += errorWidth;\n        }\n        if (isErrorHeight) {\n            datas.startHeight += errorHeight;\n            datas.startOffsetHeight += errorHeight;\n            datas.prevHeight += errorHeight;\n        }\n        if (isErrorWidth || isErrorHeight) {\n            this.dragControl(moveable, e);\n            return true;\n        }\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<ResizableProps & DraggableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isResize) {\n            return false;\n        }\n        datas.isResize = false;\n\n        const params = fillEndParams<OnResizeEnd>(moveable, e, {});\n        triggerEvent<ResizableProps>(moveable, \"onResizeEnd\", params);\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const direction = params.direction;\n        const fixedPosition = datas.fixedOriginalPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const pos = getAbsoluteFixedPosition(child, direction);\n                const [originalX, originalY] = caculate(\n                    createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                    [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                    3,\n                );\n                ev.datas.originalX = originalX;\n                ev.datas.originalY = originalY;\n\n                return ev;\n            },\n        );\n\n        const nextParams: OnResizeGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent<ResizableProps>(moveable, \"onResizeGroupStart\", nextParams);\n\n        datas.isResize = result !== false;\n        return datas.isResize ? params : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isResize) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return;\n        }\n        const {\n            offsetWidth, offsetHeight, dist,\n        } = params;\n\n        const keepRatio = moveable.props.keepRatio;\n\n        const parentScale = [\n            offsetWidth / (offsetWidth - dist[0]),\n            offsetHeight / (offsetHeight - dist[1]),\n        ];\n        const fixedPosition = datas.fixedOriginalPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = caculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * parentScale[0],\n                        ev.datas.originalY * parentScale[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                    parentKeepRatio: keepRatio,\n                };\n            },\n        );\n        const nextParams: OnResizeGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isResize) {\n            return;\n        }\n\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams: OnResizeGroupEnd = fillEndParams<OnResizeGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent<ResizableProps>(moveable, \"onResizeGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Resizable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to resize\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @param {number} [e.offsetWidth] - offset number of width\n     * @param {number} [e.offsetHeight] - offset number of height\n     * @param {number} [e.isInstant] - Whether to execute the request instantly\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * // Use Relative Value\n     * moveable.request(\"resizable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"resizable\");\n     *\n     * // request\n     * // Use Relative Value\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // Use Absolute Value\n     * moveable.request(\"resizable\", { offsetWidth: 100, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 110, offsetHeight: 100 });\n     * moveable.request(\"resizable\", { offsetWidth: 120, offsetHeight: 100 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request(moveable: MoveableManagerInterface<any>) {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n        const rect = moveable.getRect();\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                if (\"offsetWidth\" in e) {\n                    distWidth = e.offsetWidth - rect.offsetWidth;\n                } else if (\"deltaWidth\" in e) {\n                    distWidth += e.deltaWidth;\n                }\n                if (\"offsetHeight\" in e) {\n                    distHeight = e.offsetHeight - rect.offsetHeight;\n                } else if (\"deltaHeight\" in e) {\n                    distHeight += e.deltaHeight;\n                }\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can be resized. (default: false)\n * @name Moveable.Resizable#resizable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     resizable: false,\n * });\n *\n * moveable.resizable = true;\n */\n\n/**\n * throttle of width, height when resize.\n * @name Moveable.Resizable#throttleResize\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   throttleResize: 0,\n * });\n *\n * moveable.throttleResize = 1;\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Resizable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Resizable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   resizable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n\n/**\n * When the resize starts, the resizeStart event is called.\n * @memberof Moveable.Resizable\n * @event resizeStart\n * @param {Moveable.Resizable.OnResizeStart} - Parameters for the resizeStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When resizing, the resize event is called.\n * @memberof Moveable.Resizable\n * @event resize\n * @param {Moveable.Resizable.OnResize} - Parameters for the resize event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resize\", ({ target, width, height }) => {\n *     target.style.width = `${e.width}px`;\n *     target.style.height = `${e.height}px`;\n * });\n */\n/**\n * When the resize finishes, the resizeEnd event is called.\n * @memberof Moveable.Resizable\n * @event resizeEnd\n * @param {Moveable.Resizable.OnResizeEnd} - Parameters for the resizeEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { resizable: true });\n * moveable.on(\"resizeEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n /**\n * When the group resize starts, the `resizeGroupStart` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupStart\n * @param {Moveable.Resizable.OnResizeGroupStart} - Parameters for the `resizeGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupStart\", ({ targets }) => {\n *     console.log(\"onResizeGroupStart\", targets);\n * });\n */\n\n /**\n * When the group resize, the `resizeGroup` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroup\n * @param {Moveable.Resizable.onResizeGroup} - Parameters for the `resizeGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroup\", ({ targets, events }) => {\n *     console.log(\"onResizeGroup\", targets);\n *     events.forEach(ev => {\n *         const offset = [\n *             direction[0] < 0 ? -ev.delta[0] : 0,\n *             direction[1] < 0 ? -ev.delta[1] : 0,\n *         ];\n *         // ev.drag is a drag event that occurs when the group resize.\n *         const left = offset[0] + ev.drag.beforeDist[0];\n *         const top = offset[1] + ev.drag.beforeDist[1];\n *         const width = ev.width;\n *         const top = ev.top;\n *     });\n * });\n */\n\n/**\n * When the group resize finishes, the `resizeGroupEnd` event is called.\n * @memberof Moveable.Resizable\n * @event resizeGroupEnd\n * @param {Moveable.Resizable.OnResizeGroupEnd} - Parameters for the `resizeGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     resizable: true\n * });\n * moveable.on(\"resizeGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onResizeGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    throttle, getDirection, triggerEvent, multiply2,\n    fillParams, getKeepRatioHeight, getKeepRatioWidth, getDistSize, fillEndParams, directionCondition,\n} from \"../utils\";\nimport { MIN_SCALE } from \"../consts\";\nimport {\n    setDragStart, getDragDist,\n    getAbsoluteFixedPosition,\n    resolveTransformEvent,\n    convertTransformFormat,\n    getScaleDist,\n    fillTransformStartEvent,\n    fillTransformEvent,\n    setDefaultTransformIndex,\n} from \"../gesto/GestoUtils\";\nimport { renderAllDirections, renderDiagonalDirections } from \"../renderDirection\";\nimport {\n    ScalableProps, ResizableProps, OnScaleGroup, OnScaleGroupEnd,\n    Renderer, OnScaleGroupStart, DraggableProps, OnDragStart,\n    SnappableState, GroupableProps, OnScaleStart,\n    OnScale, OnScaleEnd, MoveableManagerInterface, MoveableGroupInterface,\n} from \"../types\";\nimport {\n    triggerChildAble,\n} from \"../groupUtils\";\nimport Draggable from \"./Draggable\";\nimport { getRad, caculate, createRotateMatrix, plus, minus } from \"../matrix\";\nimport CustomGesto from \"../gesto/CustomGesto\";\nimport { checkSnapScale } from \"./Snappable\";\nimport { isArray, IObject } from \"@daybrush/utils\";\n\n/**\n * @namespace Scalable\n * @memberof Moveable\n * @description Scalable indicates whether the target's x and y can be scale of transform.\n */\nexport default {\n    name: \"scalable\",\n    ableGroup: \"size\",\n    canPinch: true,\n    props: {\n        scalable: Boolean,\n        throttleScale: Number,\n        renderDirections: String,\n        keepRatio: Boolean,\n    } as const,\n    events: {\n        onScaleStart: \"scaleStart\",\n        onScale: \"scale\",\n        onScaleEnd: \"scaleEnd\",\n        onScaleGroupStart: \"scaleGroupStart\",\n        onScaleGroup: \"scaleGroup\",\n        onScaleGroupEnd: \"scaleGroupEnd\",\n    } as const,\n    render(\n        moveable: MoveableManagerInterface<Partial<ResizableProps & ScalableProps>>,\n        React: Renderer): any[] | undefined {\n        const { resizable, scalable, edge } = moveable.props;\n        if (!resizable && scalable) {\n            if (edge) {\n                return renderDiagonalDirections(moveable, React);\n            }\n            return renderAllDirections(moveable, React);\n        }\n    },\n    dragControlCondition: directionCondition,\n    dragControlStart(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps, SnappableState>,\n        e: any) {\n        const { datas, isPinch, inputEvent, parentDirection } = e;\n        const direction = parentDirection || (isPinch ? [0, 0] : getDirection(inputEvent.target));\n        const {\n            width,\n            height,\n            targetTransform,\n            target,\n        } = moveable.state;\n\n        if (!direction || !target) {\n            return false;\n        }\n        if (!isPinch) {\n            setDragStart(moveable, e);\n        }\n        setDefaultTransformIndex(e);\n\n        datas.datas = {};\n        datas.transform = targetTransform;\n        datas.prevDist = [1, 1];\n        datas.direction = direction;\n        datas.width = width;\n        datas.height = height;\n        datas.startValue = [1, 1];\n        datas.fixedDirection = direction.map((dir: number) => -dir);\n        datas.fixedPosition = getAbsoluteFixedPosition(moveable, direction);\n\n        const params = fillParams<OnScaleStart>(moveable, e, {\n            direction,\n            set: (scale: number[]) => {\n                datas.startValue = scale;\n            },\n            ...fillTransformStartEvent(e),\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ) as OnDragStart,\n        });\n        const result = triggerEvent<ScalableProps, \"onScaleStart\">(moveable, \"onScaleStart\", params);\n\n        if (result !== false) {\n            datas.isScale = true;\n            moveable.state.snapRenderInfo = {\n                request: e.isRequest,\n                direction,\n            };\n\n        }\n        return datas.isScale ? params : false;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<ScalableProps & DraggableProps & GroupableProps, SnappableState>,\n        e: any) {\n        resolveTransformEvent(e, \"scale\");\n        const {\n            datas, distX, distY,\n            parentScale,\n            parentDistance,\n            parentKeepRatio,\n            parentFlag, isPinch,\n            dragClient,\n            parentDist,\n            isRequest,\n        } = e;\n        const {\n            prevDist,\n            direction,\n            width,\n            height,\n            isScale,\n            startValue,\n        } = datas;\n\n        if (!isScale) {\n            return false;\n        }\n\n        const {\n            throttleScale,\n            parentMoveable,\n        } = moveable.props;\n        let sizeDirection = direction;\n\n        if (!direction[0] && !direction[1]) {\n            sizeDirection = [1, 1];\n        }\n        const keepRatio = moveable.props.keepRatio || parentKeepRatio;\n        const state = moveable.state;\n        const isWidth = sizeDirection[0] || !sizeDirection[1];\n        const startWidth = width * startValue[0];\n        const startHeight = height * startValue[1];\n        const ratio = isWidth ? startHeight / startWidth : startWidth / startHeight;\n        let scaleX: number = 1;\n        let scaleY: number = 1;\n        let fixedPosition = dragClient;\n\n        if (!dragClient) {\n            if (!parentFlag && isPinch) {\n                fixedPosition = getAbsoluteFixedPosition(moveable, [0, 0]);\n            } else {\n                fixedPosition = datas.fixedPosition;\n            }\n        }\n\n        if (parentDist) {\n            scaleX = (width + parentDist[0]) / width;\n            scaleY = (height + parentDist[1]) / height;\n        } else if (parentScale) {\n            scaleX = parentScale[0];\n            scaleY = parentScale[1];\n        } else if (isPinch) {\n            if (parentDistance) {\n                scaleX = (width + parentDistance) / width;\n                scaleY = (height + parentDistance * height / width) / height;\n            }\n        } else {\n            const dragDist = getDragDist({ datas, distX, distY });\n\n            let distWidth = sizeDirection[0] * dragDist[0];\n            let distHeight = sizeDirection[1] * dragDist[1];\n\n            if (keepRatio && width && height) {\n                const rad = getRad([0, 0], dragDist);\n                const standardRad = getRad([0, 0], sizeDirection);\n                const ratioRad = getRad([0, 0], [startWidth, startHeight]);\n                const size = getDistSize([distWidth, distHeight]);\n                const signSize = Math.cos(rad - standardRad) * size;\n\n                if (!sizeDirection[0]) {\n                    // top, bottom\n                    distHeight = signSize;\n                    distWidth = getKeepRatioWidth(distHeight, isWidth, ratio);\n                } else if (!sizeDirection[1]) {\n                    // left, right\n                    distWidth = signSize;\n                    distHeight = getKeepRatioHeight(distWidth, isWidth, ratio);\n                } else {\n                    // two-way\n                    distWidth = Math.cos(ratioRad) * signSize;\n                    distHeight = Math.sin(ratioRad) * signSize;\n                }\n            }\n            scaleX = (width + distWidth) / width;\n            scaleY = (height + distHeight) / height;\n        }\n\n        scaleX = sizeDirection[0] || keepRatio ? scaleX * startValue[0] : startValue[0];\n        scaleY = sizeDirection[1] || keepRatio ? scaleY * startValue[1] : startValue[1];\n\n        if (scaleX === 0) {\n            scaleX = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (scaleY === 0) {\n            scaleY = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n\n        const dist = [scaleX / startValue[0], scaleY / startValue[1]];\n        let scale = [scaleX, scaleY];\n\n        if (!isPinch && moveable.props.groupable) {\n            const snapRenderInfo = state.snapRenderInfo || {};\n            const stateDirection = snapRenderInfo.direction;\n\n            if (isArray(stateDirection) && (stateDirection[0] || stateDirection[1])) {\n                state.snapRenderInfo = { direction, request: e.isRequest, };\n            }\n        }\n        let snapDist = [0, 0];\n\n        if (!isPinch) {\n            snapDist = checkSnapScale(\n                moveable,\n                dist,\n                direction,\n                datas.fixedPosition,\n                isRequest,\n                datas,\n            );\n        }\n\n        if (keepRatio) {\n            if (sizeDirection[0] && sizeDirection[1] && snapDist[0] && snapDist[1]) {\n                if (Math.abs(snapDist[0]) > Math.abs(snapDist[1])) {\n                    snapDist[1] = 0;\n                } else {\n                    snapDist[0] = 0;\n                }\n            }\n\n            const isNoSnap = !snapDist[0] && !snapDist[1];\n\n            if (isNoSnap) {\n                if (isWidth) {\n                    dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n                } else {\n                    dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n                }\n            }\n\n            if (\n                (sizeDirection[0] && !sizeDirection[1])\n                || (snapDist[0] && !snapDist[1])\n                || (isNoSnap && isWidth)\n            ) {\n                dist[0] += snapDist[0];\n                const snapHeight = getKeepRatioHeight(width * dist[0] * startValue[0], isWidth, ratio);\n\n                dist[1] = snapHeight / height / startValue[1];\n            } else if (\n                (!sizeDirection[0] && sizeDirection[1])\n                || (!snapDist[0] && snapDist[1])\n                || (isNoSnap && !isWidth)\n            ) {\n                dist[1] += snapDist[1];\n                const snapWidth = getKeepRatioWidth(height * dist[1] * startValue[1], isWidth, ratio);\n\n                dist[0] = snapWidth / width / startValue[0];\n            }\n        } else {\n            dist[0] += snapDist[0];\n            dist[1] += snapDist[1];\n            if (!snapDist[0]) {\n                dist[0] = throttle(dist[0] * startValue[0], throttleScale!) / startValue[0];\n            }\n            if (!snapDist[1]) {\n                dist[1] = throttle(dist[1] * startValue[1], throttleScale!) / startValue[1];\n            }\n        }\n        if (dist[0] === 0) {\n            dist[0] = (prevDist[0] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        if (dist[1] === 0) {\n            dist[1] = (prevDist[1] > 0 ? 1 : -1) * MIN_SCALE;\n        }\n        const delta = [dist[0] / prevDist[0], dist[1] / prevDist[1]];\n        scale = multiply2(dist, startValue);\n\n        const inverseDist = getScaleDist(moveable, dist, direction, fixedPosition, datas);\n        const inverseDelta = minus(inverseDist, datas.prevInverseDist || [0, 0]);\n\n        datas.prevDist = dist;\n        datas.prevInverseDist = inverseDist;\n        if (\n            scaleX === prevDist[0] && scaleY === prevDist[1]\n            && inverseDelta.every(num => !num)\n            && !parentMoveable\n        ) {\n            return false;\n        }\n\n        const nextTransform = convertTransformFormat(\n            datas, `scale(${scale.join(\", \")})`, `scale(${dist.join(\", \")})`);\n        const params = fillParams<OnScale>(moveable, e, {\n            offsetWidth: width,\n            offsetHeight: height,\n            direction,\n\n            // beforeScale,\n            // beforeDist,\n            // beforeDelta,\n\n            scale,\n            dist,\n            delta,\n\n            isPinch: !!isPinch,\n            ...fillTransformEvent(\n                moveable,\n                nextTransform,\n                inverseDelta,\n                isPinch,\n                e,\n            ),\n        });\n        triggerEvent(moveable, \"onScale\", params);\n\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScalableProps>, e: any) {\n        const { datas, isDrag } = e;\n        if (!datas.isScale) {\n            return false;\n        }\n\n        datas.isScale = false;\n\n        triggerEvent(moveable, \"onScaleEnd\", fillEndParams<OnScaleEnd>(moveable, e, {}));\n        return isDrag;\n    },\n    dragGroupControlCondition: directionCondition,\n    dragGroupControlStart(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        const direction = params.direction;\n        const fixedPosition = datas.fixedPosition;\n\n        datas.moveableScale = moveable.scale;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControlStart\",\n            e,\n            (child, ev) => {\n                const pos = getAbsoluteFixedPosition(child, direction);\n\n                const [originalX, originalY] = caculate(\n                    createRotateMatrix(-moveable.rotation / 180 * Math.PI, 3),\n                    [pos[0] - fixedPosition[0], pos[1] - fixedPosition[1], 1],\n                    3,\n                );\n                ev.datas.originalX = originalX;\n                ev.datas.originalY = originalY;\n\n                return ev;\n            },\n        );\n\n        const nextParams: OnScaleGroupStart = {\n            ...params,\n            targets: moveable.props.targets!,\n            events,\n        };\n        const result = triggerEvent(moveable, \"onScaleGroupStart\", nextParams);\n\n        datas.isScale = result !== false;\n        return datas.isScale ? nextParams : false;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { datas } = e;\n        if (!datas.isScale) {\n            return;\n        }\n        const params = this.dragControl(moveable, e);\n        if (!params) {\n            return;\n        }\n\n        const moveableScale = datas.moveableScale;\n        moveable.scale = [\n            params.scale[0] * moveableScale[0],\n            params.scale[1] * moveableScale[1],\n        ];\n        const keepRatio = moveable.props.keepRatio;\n        const { dist, scale } = params;\n\n        // const fixedDirection = datas.fixedDirection;\n        const fixedPosition = datas.fixedPosition;\n\n        const events = triggerChildAble(\n            moveable,\n            this,\n            \"dragControl\",\n            e,\n            (_, ev) => {\n                const [clientX, clientY] = caculate(\n                    createRotateMatrix(moveable.rotation / 180 * Math.PI, 3),\n                    [\n                        ev.datas.originalX * dist[0],\n                        ev.datas.originalY * dist[1],\n                        1,\n                    ],\n                    3,\n                );\n\n                return {\n                    ...ev,\n                    parentDist: null,\n                    parentScale: scale,\n                    parentKeepRatio: keepRatio,\n                    dragClient: plus(fixedPosition, [clientX, clientY]),\n                };\n            },\n        );\n        const nextParams: OnScaleGroup = {\n            targets: moveable.props.targets!,\n            events,\n            ...params,\n        };\n\n        triggerEvent(moveable, \"onScaleGroup\", nextParams);\n        return nextParams;\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<any, any>, e: any) {\n        const { isDrag, datas } = e;\n\n        if (!datas.isScale) {\n            return;\n        }\n        this.dragControlEnd(moveable, e);\n        triggerChildAble(moveable, this, \"dragControlEnd\", e);\n\n        const nextParams = fillEndParams<OnScaleGroupEnd>(moveable, e, {\n            targets: moveable.props.targets!,\n        });\n\n        triggerEvent(moveable, \"onScaleGroupEnd\", nextParams);\n        return isDrag;\n    },\n    /**\n     * @method Moveable.Scalable#request\n     * @param {object} [e] - the Resizable's request parameter\n     * @param {number} [e.direction=[1, 1]] - Direction to scale\n     * @param {number} [e.deltaWidth] - delta number of width\n     * @param {number} [e.deltaHeight] - delta number of height\n     * @return {Moveable.Requester} Moveable Requester\n     * @example\n\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"scalable\", { deltaWidth: 10, deltaHeight: 10 }, true);\n     *\n     * // requestStart\n     * const requester = moveable.request(\"scalable\");\n     *\n     * // request\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     * requester.request({ deltaWidth: 10, deltaHeight: 10 });\n     *\n     * // requestEnd\n     * requester.requestEnd();\n     */\n    request() {\n        const datas = {};\n        let distWidth = 0;\n        let distHeight = 0;\n\n        return {\n            isControl: true,\n            requestStart(e: IObject<any>) {\n                return { datas, parentDirection: e.direction || [1, 1] };\n            },\n            request(e: IObject<any>) {\n                distWidth += e.deltaWidth;\n                distHeight += e.deltaHeight;\n\n                return { datas, parentDist: [distWidth, distHeight] };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n\n/**\n * Whether or not target can scaled. (default: false)\n * @name Moveable.Scalable#scalable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.scalable = true;\n */\n\n/**\n * throttle of scaleX, scaleY when scale.\n * @name Moveable.Scalable#throttleScale\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.throttleScale = 0.1;\n */\n/**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Scalable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n *   renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n * When resize or scale, keeps a ratio of the width, height. (default: false)\n * @name Moveable.Scalable#keepRatio\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     scalable: true,\n * });\n *\n * moveable.keepRatio = true;\n */\n/**\n * When the scale starts, the scaleStart event is called.\n * @memberof Moveable.Scalable\n * @event scaleStart\n * @param {Moveable.Scalable.OnScaleStart} - Parameters for the scaleStart event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleStart\", ({ target }) => {\n *     console.log(target);\n * });\n */\n/**\n * When scaling, the scale event is called.\n * @memberof Moveable.Scalable\n * @event scale\n * @param {Moveable.Scalable.OnScale} - Parameters for the scale event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scale\", ({ target, transform, dist }) => {\n *     target.style.transform = transform;\n * });\n */\n/**\n * When the scale finishes, the scaleEnd event is called.\n * @memberof Moveable.Scalable\n * @event scaleEnd\n * @param {Moveable.Scalable.OnScaleEnd} - Parameters for the scaleEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { scalable: true });\n * moveable.on(\"scaleEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n\n/**\n* When the group scale starts, the `scaleGroupStart` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroupStart\n* @param {Moveable.Scalable.OnScaleGroupStart} - Parameters for the `scaleGroupStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroupStart\", ({ targets }) => {\n*     console.log(\"onScaleGroupStart\", targets);\n* });\n*/\n\n/**\n* When the group scale, the `scaleGroup` event is called.\n* @memberof Moveable.Scalable\n* @event scaleGroup\n* @param {Moveable.Scalable.OnScaleGroup} - Parameters for the `scaleGroup` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     target: [].slice.call(document.querySelectorAll(\".target\")),\n*     scalable: true\n* });\n* moveable.on(\"scaleGroup\", ({ targets, events }) => {\n*     console.log(\"onScaleGroup\", targets);\n*     events.forEach(ev => {\n*         const target = ev.target;\n*         // ev.drag is a drag event that occurs when the group scale.\n*         const left = ev.drag.beforeDist[0];\n*         const top = ev.drag.beforeDist[1];\n*         const scaleX = ev.scale[0];\n*         const scaleY = ev.scale[1];\n*     });\n* });\n*/\n\n/**\n * When the group scale finishes, the `scaleGroupEnd` event is called.\n * @memberof Moveable.Scalable\n * @event scaleGroupEnd\n * @param {Moveable.Scalable.OnScaleGroupEnd} - Parameters for the `scaleGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n *     scalable: true\n * });\n * moveable.on(\"scaleGroupEnd\", ({ targets, isDrag }) => {\n *     console.log(\"onScaleGroupEnd\", targets, isDrag);\n * });\n */\n","import {\n    prefix, getLineStyle, getDirection, getAbsolutePosesByState,\n    triggerEvent, fillParams, fillEndParams,\n } from \"../utils\";\nimport {\n    convertDimension, invert, multiply,\n    caculate,\n    createIdentityMatrix,\n    ignoreDimension,\n    minus,\n    createWarpMatrix,\n    getRad,\n    plus,\n} from \"../matrix\";\nimport { NEARBY_POS } from \"../consts\";\nimport {\n    setDragStart, getDragDist, getPosIndexesByDirection, setDefaultTransformIndex,\n    fillTransformStartEvent, resolveTransformEvent, convertTransformFormat, fillOriginalTransform, getTransfromMatrix\n} from \"../gesto/GestoUtils\";\nimport {\n    WarpableProps, ScalableProps, ResizableProps,\n    Renderer, SnappableProps, SnappableState,\n    OnWarpStart, OnWarp, OnWarpEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { hasClass, dot } from \"@daybrush/utils\";\nimport { renderAllDirections } from \"../renderDirection\";\nimport { hasGuidelines, checkMoveableSnapBounds } from \"./Snappable\";\n\nfunction getMiddleLinePos(pos1: number[], pos2: number[]) {\n    return pos1.map((pos, i) => dot(pos, pos2[i], 1, 2));\n}\n\nfunction getTriangleRad(pos1: number[], pos2: number[], pos3: number[]) {\n    // pos1 Rad\n    const rad1 = getRad(pos1, pos2);\n    const rad2 = getRad(pos1, pos3);\n\n    const rad = rad2 - rad1;\n\n    return rad >= 0 ? rad : rad + 2 * Math.PI;\n}\n\nfunction isValidPos(poses1: number[][], poses2: number[][]) {\n    const rad1 = getTriangleRad(poses1[0], poses1[1], poses1[2]);\n    const rad2 = getTriangleRad(poses2[0], poses2[1], poses2[2]);\n    const pi = Math.PI;\n\n    if ((rad1 >= pi && rad2 <= pi) || (rad1 <= pi && rad2 >= pi)) {\n        return false;\n    }\n    return true;\n}\n\n/**\n * @namespace Moveable.Warpable\n * @description Warpable indicates whether the target can be warped(distorted, bented).\n */\nexport default {\n    name: \"warpable\",\n    ableGroup: \"size\",\n    props: {\n        warpable: Boolean,\n        renderDirections: Array,\n    } as const,\n    events: {\n        onWarpStart: \"warpStart\",\n        onWarp: \"warp\",\n        onWarpEnd: \"warpEnd\",\n    } as const,\n    render(moveable: MoveableManagerInterface<ResizableProps & ScalableProps & WarpableProps>, React: Renderer): any[] {\n        const { resizable, scalable, warpable } = moveable.props;\n\n        if (resizable || scalable || !warpable) {\n            return [];\n        }\n        const { pos1, pos2, pos3, pos4 } = moveable.state;\n\n        const linePosFrom1 = getMiddleLinePos(pos1, pos2);\n        const linePosFrom2 = getMiddleLinePos(pos2, pos1);\n        const linePosFrom3 = getMiddleLinePos(pos1, pos3);\n        const linePosFrom4 = getMiddleLinePos(pos3, pos1);\n        const linePosTo1 = getMiddleLinePos(pos3, pos4);\n        const linePosTo2 = getMiddleLinePos(pos4, pos3);\n        const linePosTo3 = getMiddleLinePos(pos2, pos4);\n        const linePosTo4 = getMiddleLinePos(pos4, pos2);\n\n        return [\n            <div className={prefix(\"line\")} key=\"middeLine1\" style={getLineStyle(linePosFrom1, linePosTo1)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine2\" style={getLineStyle(linePosFrom2, linePosTo2)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine3\" style={getLineStyle(linePosFrom3, linePosTo3)}></div>,\n            <div className={prefix(\"line\")} key=\"middeLine4\" style={getLineStyle(linePosFrom4, linePosTo4)}></div>,\n            ...renderAllDirections(moveable, React),\n        ];\n    },\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return false;\n        }\n        return hasClass(e.inputEvent.target, prefix(\"direction\"));\n    },\n    dragControlStart(\n        moveable: MoveableManagerInterface<WarpableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, inputEvent } = e;\n        const { target } = moveable.props;\n        const { target: inputTarget } = inputEvent;\n        const direction = getDirection(inputTarget);\n\n        if (!direction || !target) {\n            return false;\n        }\n        const state = moveable.state;\n        const {\n            transformOrigin, is3d,\n            targetTransform, targetMatrix,\n            width, height,\n            left, top,\n        } = state;\n\n        datas.datas = {};\n        datas.targetTransform = targetTransform;\n        datas.warpTargetMatrix = is3d ? targetMatrix : convertDimension(targetMatrix, 3, 4);\n        datas.targetInverseMatrix = ignoreDimension(invert(datas.warpTargetMatrix, 4), 3, 4);\n        datas.direction = direction;\n        datas.left = left;\n        datas.top = top;\n\n        setDragStart(moveable, e);\n        setDefaultTransformIndex(e);\n\n        datas.poses = [\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n        ].map(p => minus(p, transformOrigin));\n\n        datas.nextPoses = datas.poses.map(([x, y]: number[]) => caculate(datas.warpTargetMatrix, [x, y, 0, 1], 4));\n        datas.startValue = createIdentityMatrix(4);\n        datas.prevMatrix = createIdentityMatrix(4);\n        datas.absolutePoses = getAbsolutePosesByState(state);\n        datas.posIndexes = getPosIndexesByDirection(direction);\n\n        state.snapRenderInfo = {\n            request: e.isRequest,\n            direction,\n        };\n\n        const params = fillParams<OnWarpStart>(moveable, e, {\n            set: (matrix: number[]) => {\n                datas.startValue = matrix;\n            },\n            ...fillTransformStartEvent(e),\n        });\n        const result = triggerEvent(moveable, \"onWarpStart\", params);\n        if (result !== false) {\n            datas.isWarp = true;\n        }\n        return datas.isWarp;\n    },\n    dragControl(\n        moveable: MoveableManagerInterface<WarpableProps & SnappableProps, SnappableState>,\n        e: any,\n    ) {\n        const { datas, isRequest } = e;\n        let { distX, distY } = e;\n        const {\n            targetInverseMatrix, prevMatrix, isWarp, startValue,\n            poses,\n            posIndexes,\n            absolutePoses,\n        } = datas;\n\n        if (!isWarp) {\n            return false;\n        }\n        resolveTransformEvent(e, \"matrix3d\");\n        if (hasGuidelines(moveable, \"warpable\")) {\n            const selectedPoses: number[][] = posIndexes.map((index: number) => absolutePoses[index]);\n\n            if (selectedPoses.length > 1) {\n                selectedPoses.push([\n                    (selectedPoses[0][0] + selectedPoses[1][0]) / 2,\n                    (selectedPoses[0][1] + selectedPoses[1][1]) / 2,\n                ]);\n            }\n\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkMoveableSnapBounds(\n                moveable,\n                isRequest,\n                selectedPoses.map(pos => [pos[0] + distX, pos[1] + distY]),\n            );\n\n            distY -= horizontalSnapInfo.offset;\n            distX -= verticalSnapInfo.offset;\n        }\n\n        const dist = getDragDist({ datas, distX, distY }, true);\n        const nextPoses = datas.nextPoses.slice();\n\n        posIndexes.forEach((index: number) => {\n            nextPoses[index] = plus(nextPoses[index], dist);\n        });\n\n        if (!NEARBY_POS.every(\n            nearByPoses => isValidPos(nearByPoses.map(i => poses[i]), nearByPoses.map(i => nextPoses[i])),\n        )) {\n            return false;\n        }\n        const h = createWarpMatrix(\n            poses[0],\n            poses[2],\n            poses[1],\n            poses[3],\n            nextPoses[0],\n            nextPoses[2],\n            nextPoses[1],\n            nextPoses[3],\n        );\n\n        if (!h.length) {\n            return false;\n        }\n        // B * A * M\n        const afterMatrix = multiply(targetInverseMatrix, h, 4);\n\n        // B * M * A\n        const matrix = getTransfromMatrix(datas, afterMatrix, true);\n\n        const delta = multiply(invert(prevMatrix, 4), matrix, 4);\n\n        datas.prevMatrix = matrix;\n        const totalMatrix = multiply(startValue, matrix, 4);\n        const nextTransform = convertTransformFormat(\n            datas, `matrix3d(${totalMatrix.join(\", \")})`, `matrix3d(${matrix.join(\", \")})`);\n\n        fillOriginalTransform(e, nextTransform);\n        triggerEvent(moveable, \"onWarp\", fillParams<OnWarp>(moveable, e, {\n            delta,\n            matrix: totalMatrix,\n            dist: matrix,\n            multiply,\n            transform: nextTransform,\n        }));\n        return true;\n    },\n    dragControlEnd(\n        moveable: MoveableManagerInterface<WarpableProps>,\n        e: any,\n    ) {\n        const { datas, isDrag } = e;\n        if (!datas.isWarp) {\n            return false;\n        }\n        datas.isWarp = false;\n\n        triggerEvent(moveable, \"onWarpEnd\", fillEndParams<OnWarpEnd>(moveable, e, {}));\n        return isDrag;\n    },\n};\n\n/**\n * Whether or not target can be warped. (default: false)\n * @name Moveable.Warpable#warpable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.warpable = true;\n */\n\n /**\n * Set directions to show the control box. (default: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"])\n * @name Moveable.Warpable#renderDirections\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     warpable: true,\n *     renderDirections: [\"n\", \"nw\", \"ne\", \"s\", \"se\", \"sw\", \"e\", \"w\"],\n * });\n *\n * moveable.renderDirections = [\"nw\", \"ne\", \"sw\", \"se\"];\n */\n/**\n* When the warp starts, the warpStart event is called.\n* @memberof Moveable.Warpable\n* @event warpStart\n* @param {Moveable.Warpable.OnWarpStart} - Parameters for the warpStart event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, { warpable: true });\n* moveable.on(\"warpStart\", ({ target }) => {\n*     console.log(target);\n* });\n*/\n/**\n * When warping, the warp event is called.\n * @memberof Moveable.Warpable\n * @event warp\n * @param {Moveable.Warpable.OnWarp} - Parameters for the warp event\n * @example\n * import Moveable from \"moveable\";\n * let matrix = [\n *  1, 0, 0, 0,\n *  0, 1, 0, 0,\n *  0, 0, 1, 0,\n *  0, 0, 0, 1,\n * ];\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warp\", ({ target, transform, delta, multiply }) => {\n *    // target.style.transform = transform;\n *    matrix = multiply(matrix, delta);\n *    target.style.transform = `matrix3d(${matrix.join(\",\")})`;\n * });\n */\n/**\n * When the warp finishes, the warpEnd event is called.\n * @memberof Moveable.Warpable\n * @event warpEnd\n * @param {Moveable.Warpable.OnWarpEnd} - Parameters for the warpEnd event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, { warpable: true });\n * moveable.on(\"warpEnd\", ({ target, isDrag }) => {\n *     console.log(target, isDrag);\n * });\n */\n","import { prefix } from \"./utils\";\n\nexport const AREA_PIECES = prefix(\"area-pieces\");\nexport const AREA_PIECE = prefix(\"area-piece\");\nexport const AVOID = prefix(\"avoid\");\n","import {\n    createWarpMatrix,\n} from \"../matrix\";\nimport { ref } from \"framework-utils\";\nimport { getRect, caculateInversePosition, makeMatrixCSS, prefix } from \"../utils\";\nimport {\n    Renderer, GroupableProps, DragAreaProps, MoveableManagerInterface, MoveableGroupInterface\n} from \"../types\";\nimport { AREA_PIECE, AVOID, AREA_PIECES } from \"../classNames\";\nimport { addClass, removeClass } from \"@daybrush/utils\";\n\nfunction restoreStyle(moveable: MoveableManagerInterface) {\n    const el = moveable.areaElement;\n    const { width, height } = moveable.state;\n\n    removeClass(el, AVOID);\n\n    el.style.cssText += `left: 0px; top: 0px; width: ${width}px; height: ${height}px`;\n}\n\nfunction renderPieces(React: Renderer): any {\n    return (<div key=\"area_pieces\" className={AREA_PIECES}>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n        <div className={AREA_PIECE}></div>\n    </div>);\n}\nexport default {\n    name: \"dragArea\",\n    props: {\n        dragArea: Boolean,\n        passDragArea: Boolean,\n    } as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    render(moveable: MoveableManagerInterface<GroupableProps>, React: Renderer): any[] {\n        const { target, dragArea, groupable, passDragArea } = moveable.props;\n        const { width, height, renderPoses } = moveable.state;\n\n        const className = passDragArea ? prefix(\"area\", \"pass\") : prefix(\"area\");\n        if (groupable) {\n            return [\n                <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className}></div>,\n                renderPieces(React),\n            ];\n        }\n        if (!target || !dragArea) {\n            return [];\n        }\n        const h = createWarpMatrix(\n            [0, 0],\n            [width, 0],\n            [0, height],\n            [width, height],\n            renderPoses[0],\n            renderPoses[1],\n            renderPoses[2],\n            renderPoses[3],\n        );\n        const transform = h.length ? makeMatrixCSS(h, true) : \"none\";\n\n        return [\n            <div key=\"area\" ref={ref(moveable, \"areaElement\")} className={className} style={{\n                top: \"0px\",\n                left: \"0px\",\n                width: `${width}px`,\n                height: `${height}px`,\n                transformOrigin: \"0 0\",\n                transform,\n            }}></div>,\n            renderPieces(React),\n        ];\n    },\n    dragStart(moveable: MoveableManagerInterface, { datas, clientX, clientY, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        datas.isDragArea = false;\n        const areaElement = moveable.areaElement;\n        const {\n            moveableClientRect,\n            renderPoses,\n            rootMatrix,\n            is3d,\n        } = moveable.state;\n        const { left, top } = moveableClientRect;\n        const {\n            left: relativeLeft,\n            top: relativeTop,\n            width,\n            height,\n        } = getRect(renderPoses);\n        const n = is3d ? 4 : 3;\n        let [posX, posY] = caculateInversePosition(rootMatrix, [clientX - left, clientY - top], n);\n\n        posX -= relativeLeft;\n        posY -= relativeTop;\n        const rects = [\n            { left: relativeLeft, top: relativeTop, width, height: posY - 10 },\n            { left: relativeLeft, top: relativeTop, width: posX - 10, height },\n            { left: relativeLeft, top: relativeTop + posY + 10, width, height: height - posY - 10 },\n            { left: relativeLeft + posX + 10, top: relativeTop, width: width - posX - 10, height },\n        ];\n\n        const children = [].slice.call(areaElement.nextElementSibling!.children) as HTMLElement[];\n        rects.forEach((rect, i) => {\n            children[i].style.cssText\n                = `left: ${rect.left}px;top: ${rect.top}px; width: ${rect.width}px; height: ${rect.height}px;`;\n        });\n        addClass(areaElement, AVOID);\n        return;\n    },\n    drag(moveable: MoveableManagerInterface, { datas, inputEvent }: any) {\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            datas.isDragArea = true;\n            restoreStyle(moveable);\n        }\n    },\n    dragEnd(moveable: MoveableManagerInterface<DragAreaProps>, e: any) {\n        const { inputEvent, datas } = e;\n        if (!inputEvent) {\n            return false;\n        }\n        if (!datas.isDragArea) {\n            restoreStyle(moveable);\n        }\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragGroupEnd(\n        moveable: MoveableGroupInterface<DragAreaProps>,\n        e: any,\n    ) {\n       return this.dragEnd(moveable, e);\n    },\n    unset(moveable: MoveableManagerInterface<DragAreaProps>) {\n        restoreStyle(moveable);\n    },\n};\n\n/**\n * Add an event to the moveable area instead of the target for stopPropagation. (default: false, true in group)\n * @name Moveable#dragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n/**\n * Set `pointerEvents: none;` css to pass events in dragArea. (default: false)\n * @name Moveable#passDragArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  dragArea: false,\n * });\n */\n","import { prefix, getControlTransform } from \"../utils\";\nimport { Renderer, OriginOptions, MoveableManagerInterface } from \"../types\";\n\nexport default {\n    name: \"origin\",\n    props: {\n        origin: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableManagerInterface<OriginOptions>, React: Renderer): any[] {\n        const { beforeOrigin, rotation } = moveable.state;\n\n        return [\n            <div className={prefix(\"control\", \"origin\")}\n                style={getControlTransform(rotation, beforeOrigin)} key=\"beforeOrigin\"></div>,\n        ];\n    },\n};\n\n/**\n * Whether or not the origin controlbox will be visible or not (default: true)\n * @name Moveable#origin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n *\n * moveable.origin = true;\n */\n","\nimport { ScrollableProps, OnScroll, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport DragScroll from \"@scena/dragscroll\";\n\nfunction getDefaultScrollPosition(e: { scrollContainer: HTMLElement, direction: number[] }) {\n    const scrollContainer = e.scrollContainer;\n\n    return [\n        scrollContainer.scrollLeft,\n        scrollContainer.scrollTop,\n    ];\n}\n/**\n * @namespace Moveable.Scrollable\n * @description Whether or not target can be scrolled to the scroll container (default: false)\n */\nexport default {\n    name: \"scrollable\",\n    canPinch: true,\n    props: {\n        scrollable: Boolean,\n        scrollContainer: Object,\n        scrollThreshold: Number,\n        getScrollPosition: Function,\n    } as const,\n    events: {\n        onScroll: \"scroll\",\n        onScrollGroup: \"scrollGroup\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const props = moveable.props;\n        const {\n            scrollContainer = moveable.getContainer(),\n        } = props;\n\n        const dragScroll = new DragScroll();\n\n        e.datas.dragScroll = dragScroll;\n\n        const gestoName = e.isControl ? \"controlGesto\" : \"targetGesto\";\n        const targets = e.targets;\n\n        dragScroll.on(\"scroll\", ({ container, direction }) => {\n            const params = fillParams<OnScroll>(moveable, e, {\n                scrollContainer: container,\n                direction,\n            }) as any;\n\n            const eventName = targets ? \"onScrollGroup\" : \"onScroll\" as any;\n            if (targets) {\n                params.targets = targets;\n            }\n            triggerEvent(moveable, eventName, params);\n        }).on(\"move\", ({ offsetX, offsetY }) => {\n            moveable[gestoName].scrollBy(offsetX, offsetY, e.inputEvent, false);\n        });\n        dragScroll.dragStart(e, {\n            container: scrollContainer as HTMLElement,\n        });\n    },\n    checkScroll(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        const {\n            dragScroll,\n        } = e.datas;\n        if (!dragScroll) {\n            return;\n        }\n        const {\n            scrollContainer = moveable.getContainer(),\n            scrollThreshold = 0,\n            getScrollPosition = getDefaultScrollPosition,\n        } = moveable.props;\n\n        dragScroll.drag(e, {\n            container: scrollContainer,\n            threshold: scrollThreshold,\n            getScrollPosition: (ev: any) => {\n                return getScrollPosition({ scrollContainer: ev.container, direction: ev.direction });\n            },\n        });\n\n        return true;\n    },\n    drag(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.checkScroll(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        e.datas.dragScroll.dragEnd();\n        e.datas.dragScroll = null;\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragStart(moveable, { ...e, isControl: true });\n    },\n    dragControl(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ScrollableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroup(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface, e: any) {\n        return this.dragStart(moveable, { ...e, targets: moveable.props.targets, isControl: true });\n    },\n    dragGroupContro(moveable: MoveableGroupInterface, e: any) {\n        return this.drag(moveable, { ...e, targets: moveable.props.targets });\n    },\n    dragGroupControEnd(moveable: MoveableGroupInterface, e: any) {\n        return this.dragEnd(moveable, { ...e, targets: moveable.props.targets });\n    },\n};\n\n/**\n * Whether or not target can be scrolled to the scroll container (default: false)\n * @name Moveable.Scrollable#scrollable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n * moveable.scrollable = true;\n */\n\n/**\n * The container to which scroll is applied (default: container)\n * @name Moveable.Scrollable#scrollContainer\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n/**\n * Expand the range of the scroll check area. (default: 0)\n * @name Moveable.Scrollable#scrollThreshold\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n */\n\n/**\n * Sets a function to get the scroll position. (default: Function)\n * @name Moveable.Scrollable#getScrollPosition\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   scrollable: true,\n *   scrollContainer: document.body,\n *   scrollThreshold: 0,\n *   getScrollPosition: ({ scrollContainer }) => ([scrollContainer.scrollLeft, scrollContainer.scrollTop]),\n * });\n *\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scroll` event occur to scroll.\n * @memberof Moveable.Scrollable\n * @event scroll\n * @param {Moveable.Scrollable.OnScroll} - Parameters for the `scroll` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n\n/**\n * When the drag cursor leaves the scrollContainer, the `scrollGroup` event occur to scroll in group.\n * @memberof Moveable.Scrollable\n * @event scrollGroup\n * @param {Moveable.Scrollable.OnScrollGroup} - Parameters for the `scrollGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"scroll\", ({ scrollContainer, direction }) => {\n *   scrollContainer.scrollLeft += direction[0] * 10;\n *   scrollContainer.scrollTop += direction[1] * 10;\n * });\n */\n","export default {\n    name: \"\",\n    props: {\n        target: Object,\n        dragTarget: Object,\n        container: Object,\n        rootContainer: Object,\n        zoom: Number,\n        transformOrigin: Array,\n        edge: Boolean,\n        ables: Array,\n        className: String,\n        pinchThreshold: Number,\n        pinchOutside: Boolean,\n        triggerAblesSimultaneously: Boolean,\n        checkInput: Boolean,\n        cspNonce: String,\n        translateZ: Number,\n    } as const,\n    events: {} as const,\n};\n","import { prefix, makeMatrixCSS } from \"../utils\";\nimport { Renderer, MoveableManagerInterface } from \"../types\";\nimport { createWarpMatrix } from \"../matrix\";\n\nexport default {\n    name: \"padding\",\n    props: {\n        padding: Object,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableManagerInterface, React: Renderer): any[] {\n        const props = moveable.props;\n        if (props.dragArea) {\n            return [];\n        }\n        const padding = props.padding || {};\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = padding;\n        const {\n            renderPoses,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n        } = moveable.state;\n\n        const poses = [pos1, pos2, pos3, pos4];\n        const paddingDirections: number[][] = [];\n\n        if (left > 0) {\n            paddingDirections.push([0, 2]);\n        }\n        if (top > 0) {\n            paddingDirections.push([0, 1]);\n        }\n        if (right > 0) {\n            paddingDirections.push([1, 3]);\n        }\n        if (bottom > 0) {\n            paddingDirections.push([2, 3]);\n        }\n        return paddingDirections.map(([dir1, dir2], i) => {\n            const paddingPos1 = poses[dir1];\n            const paddingPos2 = poses[dir2];\n            const paddingPos3 = renderPoses[dir1];\n            const paddingPos4 = renderPoses[dir2];\n\n            const h = createWarpMatrix(\n                [0, 0],\n                [100, 0],\n                [0, 100],\n                [100, 100],\n                paddingPos1,\n                paddingPos2,\n                paddingPos3,\n                paddingPos4,\n            );\n            if (!h.length) {\n                return undefined;\n            }\n            return (<div key={`padding${i}`} className={prefix(\"padding\")} style={{\n                transform: makeMatrixCSS(h, true),\n            }}></div>);\n        });\n    },\n};\n\n/**\n * Add padding around the target to increase the drag area. (default: null)\n * @name Moveable#padding\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *  target: document.querySelector(\".target\"),\n *  padding: { left: 0, top: 0, right: 0, bottom: 0 },\n * });\n * moveable.padding = { left: 10, top: 10, right: 10, bottom: 10 },\n * moveable.updateRect();\n */\n","import { convertCSSSize } from \"../../utils\";\nimport { ControlPose } from \"../../types\";\nimport { convertUnitSize } from \"@daybrush/utils\";\n\nconst RADIUS_DIRECTIONS = [\"nw\", \"ne\", \"se\", \"sw\"] as const;\n\nfunction caculateRatio(values: number[], size: number) {\n    const sumSize = values[0] + values[1];\n    const sumRatio = sumSize > size ? size / sumSize : 1;\n\n    values[0] *= sumRatio;\n    values[1] = size - values[1] * sumRatio;\n\n    return values;\n}\nexport const HORIZONTAL_RADIUS_ORDER = [1, 2, 5, 6];\nexport const VERTICAL_RADIUS_ORDER = [0, 3, 4, 7];\nexport const HORIZONTAL_RADIUS_DIRECTIONS = [1, -1, -1, 1] as const;\nexport const VERTICAL_RADIUS_DIRECTIONS = [1, 1, -1, -1] as const;\n\nexport function getRadiusStyles(\n    poses: number[][], controlPoses: ControlPose[],\n    isRelative: boolean,\n    width: number,\n    height: number,\n    left: number = 0,\n    top: number = 0,\n    right: number = width,\n    bottom: number = height,\n) {\n    const clipStyles: string[] = [];\n    let isVertical = false;\n\n    const raws = poses.map((pos, i) => {\n        const { horizontal, vertical } = controlPoses[i];\n        if (vertical && !isVertical) {\n            isVertical = true;\n            clipStyles.push(\"/\");\n        }\n\n        if (isVertical) {\n            const rawPos = Math.max(0, vertical === 1 ? pos[1] - top : bottom - pos[1]);\n            clipStyles.push(convertCSSSize(rawPos, height, isRelative));\n\n            return rawPos;\n        } else {\n            const rawPos = Math.max(0, horizontal === 1 ? pos[0] - left : right - pos[0]);\n            clipStyles.push(convertCSSSize(rawPos, width, isRelative));\n\n            return rawPos;\n        }\n    });\n\n    return {\n        styles: clipStyles,\n        raws,\n    };\n}\nexport function getRadiusRange(controlPoses: ControlPose[]) {\n    // [start, length]\n    const horizontalRange = [0, 0];\n    const verticalRange = [0, 0];\n    const length =  controlPoses.length;\n\n    for (let i = 0; i < length; ++i) {\n        const clipPose = controlPoses[i];\n\n        if (!clipPose.sub) {\n            continue;\n        }\n        if (clipPose.horizontal) {\n            if (horizontalRange[1] === 0) {\n                horizontalRange[0] = i;\n            }\n            horizontalRange[1] = i - horizontalRange[0] + 1;\n            verticalRange[0] = i + 1;\n        }\n        if (clipPose.vertical) {\n            if (verticalRange[1] === 0) {\n                verticalRange[0] = i;\n            }\n            verticalRange[1] = i - verticalRange[0] + 1;\n        }\n    }\n\n    return {\n        horizontalRange,\n        verticalRange,\n    };\n}\nexport function getRadiusValues(\n    values: string[],\n    width: number,\n    height: number,\n    left: number,\n    top: number,\n): ControlPose[] {\n    const splitIndex = values.indexOf(\"/\");\n    const splitLength = (splitIndex > -1 ? values.slice(0, splitIndex) : values).length;\n    const horizontalValues = values.slice(0, splitLength);\n    const verticalValues = values.slice(splitLength + 1);\n    const [\n        nwValue = \"0\",\n        neValue = nwValue,\n        seValue = nwValue,\n        swValue = neValue,\n    ] = horizontalValues;\n    const [\n        wnValue = nwValue,\n        enValue = wnValue,\n        esValue = wnValue,\n        wsValue = enValue,\n    ] = verticalValues;\n\n    const horizontalRawPoses = [nwValue, neValue, seValue, swValue].map(pos => convertUnitSize(pos, width));\n    const verticalRawPoses = [wnValue, enValue, esValue, wsValue].map(pos => convertUnitSize(pos, height));\n    const horizontalPoses = horizontalRawPoses.slice();\n    const verticalPoses = verticalRawPoses.slice();\n\n    [horizontalPoses[0], horizontalPoses[1]] = caculateRatio([horizontalPoses[0], horizontalPoses[1]], width);\n    [horizontalPoses[3], horizontalPoses[2]] = caculateRatio([horizontalPoses[3], horizontalPoses[2]], width);\n    [verticalPoses[0], verticalPoses[3]] = caculateRatio([verticalPoses[0], verticalPoses[3]], height);\n    [verticalPoses[1], verticalPoses[2]] = caculateRatio([verticalPoses[1], verticalPoses[2]], height);\n\n    const nextHorizontalPoses = horizontalPoses.slice(0, horizontalValues.length);\n    const nextVerticalPoses = verticalPoses.slice(0, verticalValues.length);\n    return [\n        ...nextHorizontalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [left + pos, top + (VERTICAL_RADIUS_DIRECTIONS[i] === -1 ? height : 0)],\n                sub: true,\n                raw: horizontalRawPoses[i],\n                direction,\n            };\n        }),\n        ...nextVerticalPoses.map((pos, i) => {\n            const direction = RADIUS_DIRECTIONS[i];\n\n            return {\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [left + (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1 ? width : 0), top + pos],\n                sub: true,\n                raw: verticalRawPoses[i],\n                direction,\n            };\n        }),\n    ];\n}\nexport function removeRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    index: number,\n    startIndex: number,\n    length: number = poses.length,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    const radiuslIndex = index - startIndex;\n    let deleteCount = 0;\n\n    if (radiuslIndex === 0) {\n        deleteCount = length;\n    } else if (radiuslIndex > 0 && radiuslIndex < horizontalRange[1]) {\n        deleteCount = horizontalRange[1] - radiuslIndex;\n    } else if (radiuslIndex >= verticalRange[0]) {\n        deleteCount = verticalRange[0] + verticalRange[1] - radiuslIndex;\n    } else {\n        return;\n    }\n    controlPoses.splice(index, deleteCount);\n    poses.splice(index, deleteCount);\n}\nexport function addRadiusPos(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    startIndex: number,\n    horizontalIndex: number,\n    verticalIndex: number,\n    distX: number,\n    distY: number,\n    right: number,\n    bottom: number,\n    left: number = 0,\n    top: number = 0,\n) {\n    const {\n        horizontalRange,\n        verticalRange,\n    } = getRadiusRange(controlPoses.slice(startIndex));\n    if (horizontalIndex > -1) {\n        const radiusX = HORIZONTAL_RADIUS_DIRECTIONS[horizontalIndex] === 1\n            ? distX - left\n            : right - distX;\n        for (let i = horizontalRange[1]; i <= horizontalIndex; ++i) {\n            const y = VERTICAL_RADIUS_DIRECTIONS[i] === 1 ? top : bottom;\n            let x = 0;\n            if (horizontalIndex === i) {\n                x = distX;\n            } else if (i === 0) {\n                x = left + radiusX;\n            } else if (HORIZONTAL_RADIUS_DIRECTIONS[i] === -1) {\n                x = right - (poses[startIndex][0] - left);\n            }\n            controlPoses.splice(startIndex + i, 0, {\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[i],\n                vertical: 0,\n                pos: [x, y],\n            });\n            poses.splice(startIndex + i, 0, [x, y]);\n\n            if (i === 0) {\n                break;\n            }\n        }\n    } else if (verticalIndex > - 1) {\n        const radiusY = VERTICAL_RADIUS_DIRECTIONS[verticalIndex] === 1\n            ? distY - top\n            : bottom - distY;\n        if (horizontalRange[1] === 0 && verticalRange[1] === 0) {\n            const pos = [\n                left + radiusY,\n                top,\n            ];\n            controlPoses.push({\n                horizontal: HORIZONTAL_RADIUS_DIRECTIONS[0],\n                vertical: 0,\n                pos,\n            });\n            poses.push(pos);\n        }\n\n        const startVerticalIndex = verticalRange[0];\n        for (let i = verticalRange[1]; i <= verticalIndex; ++i) {\n            const x = HORIZONTAL_RADIUS_DIRECTIONS[i] === 1 ? left : right;\n            let y = 0;\n            if (verticalIndex === i) {\n                y = distY;\n            } else if (i === 0) {\n                y = top + radiusY;\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === 1) {\n                y = poses[startIndex + startVerticalIndex][1];\n            } else if (VERTICAL_RADIUS_DIRECTIONS[i] === -1) {\n                y = bottom - (poses[startIndex + startVerticalIndex][1] - top);\n            }\n            controlPoses.push({\n                horizontal: 0,\n                vertical: VERTICAL_RADIUS_DIRECTIONS[i],\n                pos: [x, y],\n            });\n            poses.push([x, y]);\n            if (i === 0) {\n                break;\n            }\n        }\n    }\n}\nexport function splitRadiusPoses(\n    controlPoses: ControlPose[],\n    raws: number[] = controlPoses.map(pos => pos.raw!),\n) {\n    const horizontals = controlPoses\n    .map((pos , i) => pos.horizontal ? raws[i] : null).filter(pos => pos != null) as number[];\n    const verticals = controlPoses\n        .map((pos , i) => pos.vertical ? raws[i] : null).filter(pos => pos != null) as number[];\n\n    return {\n        horizontals,\n        verticals,\n    };\n}\n","import {\n    Renderer, ClippableProps, OnClip,\n    ClippableState, OnClipEnd, OnClipStart,\n    ControlPose, MoveableManagerInterface\n} from \"../types\";\nimport { splitBracket, splitComma, splitUnit, splitSpace, convertUnitSize } from \"@daybrush/utils\";\nimport {\n    prefix, caculatePosition, getDiagonalSize,\n    fillParams, triggerEvent,\n    makeMatrixCSS, getRect, fillEndParams,\n    convertCSSSize, moveControlPos,\n} from \"../utils\";\nimport { getRad, plus, minus } from \"../matrix\";\nimport { setDragStart, getDragDist, caculatePointerDist } from \"../gesto/GestoUtils\";\nimport {\n    getRadiusValues,\n    HORIZONTAL_RADIUS_ORDER, VERTICAL_RADIUS_ORDER, getRadiusStyles, addRadiusPos, removeRadiusPos\n} from \"./roundable/borderRadius\";\nimport { renderLine } from \"../renderDirection\";\nimport { addGuidelines, checkSnapBoundPriority } from \"./snappable/snap\";\nimport { checkSnapBounds } from \"./Snappable\";\n\nconst CLIP_DIRECTIONS = [\n    [0, -1, \"n\"],\n    [1, 0, \"e\"],\n] as const;\nconst CLIP_RECT_DIRECTIONS = [\n    [-1, -1, \"nw\"],\n    [0, -1, \"n\"],\n    [1, -1, \"ne\"],\n    [1, 0, \"e\"],\n    [1, 1, \"se\"],\n    [0, 1, \"s\"],\n    [-1, 1, \"sw\"],\n    [-1, 0, \"w\"],\n] as const;\n\n// 1 2 5 6 0 3 4 7\n// 0 1 2 3 4 5 6 7\n\nfunction getClipStyles(\n    moveable: MoveableManagerInterface<ClippableProps>,\n    clipPath: ReturnType<typeof getClipPath>,\n    poses: number[][],\n) {\n    const {\n        clipRelative,\n    } = moveable.props;\n    const {\n        width,\n        height,\n    } = moveable.state;\n    const {\n        type: clipType,\n        poses: clipPoses,\n    } = clipPath!;\n\n    const isRect = clipType === \"rect\";\n    const isCircle = clipType === \"circle\";\n    if (clipType === \"polygon\") {\n        return poses.map(pos => `${\n            convertCSSSize(pos[0], width, clipRelative)\n            } ${\n            convertCSSSize(pos[1], height, clipRelative)\n            }`);\n    } else if (isRect || clipType === \"inset\") {\n        const top = poses[1][1];\n        const right = poses[3][0];\n        const left = poses[7][0];\n        const bottom = poses[5][1];\n\n        if (isRect) {\n            return [\n                top,\n                right,\n                bottom,\n                left,\n            ].map(pos => `${pos}px`);\n        }\n        const clipStyles\n            = [top, width - right, height - bottom, left]\n                .map((pos, i) => convertCSSSize(pos, i % 2 ? width : height, clipRelative));\n\n        if (poses.length > 8) {\n            const [subWidth, subHeight] = minus(poses[4], poses[0]);\n\n            clipStyles.push(\"round\", ...getRadiusStyles(\n                poses.slice(8),\n                clipPoses.slice(8),\n                clipRelative!,\n                subWidth,\n                subHeight,\n                left, top, right, bottom,\n            ).styles);\n        }\n        return clipStyles;\n    } else if (isCircle || clipType === \"ellipse\") {\n        const center = poses[0];\n        const ry = convertCSSSize(\n            Math.abs(poses[1][1] - center[1]),\n            isCircle ? Math.sqrt((width * width + height * height) / 2) : height,\n            clipRelative,\n        );\n\n        const clipStyles = isCircle ? [ry]\n            : [convertCSSSize(Math.abs(poses[2][0] - center[0]), width, clipRelative), ry];\n\n        clipStyles.push(\n            \"at\", convertCSSSize(center[0], width, clipRelative),\n            convertCSSSize(center[1], height, clipRelative));\n\n        return clipStyles;\n    }\n}\nfunction getRectPoses(top: number, right: number, bottom: number, left: number): ControlPose[] {\n    const xs = [left, (left + right) / 2, right];\n    const ys = [top, (top + bottom) / 2, bottom];\n\n    return CLIP_RECT_DIRECTIONS.map(([dirx, diry, dir]) => {\n        const x = xs[dirx + 1];\n        const y = ys[diry + 1];\n        return {\n            vertical: Math.abs(diry),\n            horizontal: Math.abs(dirx),\n            direction: dir,\n            pos: [x, y],\n        };\n    });\n}\nfunction getClipPath(\n    target: HTMLElement | SVGElement,\n    width: number,\n    height: number,\n    defaultClip?: string,\n    customClip?: string,\n) {\n    let clipText: string | undefined = customClip;\n\n    if (!clipText) {\n        const style = getComputedStyle(target!);\n        const clipPath = style.clipPath!;\n\n        clipText = clipPath !== \"none\" ? clipPath : style.clip!;\n    }\n    if (!clipText || clipText === \"none\" || clipText === \"auto\") {\n        clipText = defaultClip;\n\n        if (!clipText) {\n            return;\n        }\n    }\n    const {\n        prefix: clipPrefix = clipText,\n        value = \"\",\n    } = splitBracket(clipText);\n    const isCircle = clipPrefix === \"circle\";\n    let splitter = \" \";\n\n    if (clipPrefix === \"polygon\") {\n        const values = splitComma(value! || `0% 0%, 100% 0%, 100% 100%, 0% 100%`);\n        splitter = \",\";\n\n        const poses: ControlPose[] = values.map(pos => {\n            const [xPos, yPos] = pos.split(\" \");\n\n            return {\n                vertical: 1,\n                horizontal: 1,\n                pos: [\n                    convertUnitSize(xPos, width),\n                    convertUnitSize(yPos, height),\n                ],\n            };\n        });\n\n        return {\n            type: clipPrefix,\n            clipText,\n            poses,\n            splitter,\n        } as const;\n    } else if (isCircle || clipPrefix === \"ellipse\") {\n        let xPos: string = \"\";\n        let yPos: string = \"\";\n        let radiusX = 0;\n        let radiusY = 0;\n        const values = splitSpace(value!);\n\n        if (isCircle) {\n            let radius = \"\";\n            [radius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(radius, Math.sqrt((width * width + height * height) / 2));\n            radiusY = radiusX;\n        } else {\n            let xRadius = \"\";\n            let yRadius = \"\";\n            [xRadius = \"50%\", yRadius = \"50%\", , xPos = \"50%\", yPos = \"50%\"] = values;\n\n            radiusX = convertUnitSize(xRadius, width);\n            radiusY = convertUnitSize(yRadius, height);\n        }\n        const centerPos = [\n            convertUnitSize(xPos, width),\n            convertUnitSize(yPos, height),\n        ];\n        const poses: ControlPose[] = [\n            {\n                vertical: 1,\n                horizontal: 1,\n                pos: centerPos,\n                direction: \"nesw\",\n            },\n            ...CLIP_DIRECTIONS.slice(0, isCircle ? 1 : 2).map(dir => ({\n                vertical: Math.abs(dir[1]),\n                horizontal: dir[0],\n                direction: dir[2],\n                sub: true,\n                pos: [\n                    centerPos[0] + dir[0] * radiusX,\n                    centerPos[1] + dir[1] * radiusY,\n                ],\n            })),\n        ];\n        return {\n            type: clipPrefix as \"circle\" | \"ellipse\",\n            clipText,\n            radiusX,\n            radiusY,\n            left: centerPos[0] - radiusX,\n            top: centerPos[1] - radiusY,\n            poses,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"inset\") {\n        const values = splitSpace(value! || \"0 0 0 0\");\n        const roundIndex = values.indexOf(\"round\");\n\n        const rectLength = (roundIndex > -1 ? values.slice(0, roundIndex) : values).length;\n        const radiusValues = values.slice(rectLength + 1);\n        const [\n            topValue,\n            rightValue = topValue,\n            bottomValue = topValue,\n            leftValue = rightValue,\n        ] = values.slice(0, rectLength);\n        const [top, bottom] = [topValue, bottomValue].map(pos => convertUnitSize(pos, height));\n        const [left, right] = [leftValue, rightValue].map(pos => convertUnitSize(pos, width));\n        const nextRight = width - right;\n        const nextBottom = height - bottom;\n        const radiusPoses = getRadiusValues(\n            radiusValues,\n            nextRight - left,\n            nextBottom - top,\n            left,\n            top,\n        );\n        const poses: ControlPose[] = [\n            ...getRectPoses(top, nextRight, nextBottom, left),\n            ...radiusPoses,\n        ];\n\n        return {\n            type: \"inset\",\n            clipText,\n            poses,\n            top,\n            left,\n            right: nextRight,\n            bottom: nextBottom,\n            radius: radiusValues,\n            splitter,\n        } as const;\n    } else if (clipPrefix === \"rect\") {\n        // top right bottom left\n        const values = splitComma(value! || `0px, ${width}px, ${height}px, 0px`);\n\n        splitter = \",\";\n        const [top, right, bottom, left] = values.map(pos => {\n            const { value: posValue } = splitUnit(pos);\n\n            return posValue;\n        });\n        const poses = getRectPoses(top, right, bottom, left);\n\n        return {\n            type: \"rect\",\n            clipText,\n            poses,\n            top,\n            right,\n            bottom,\n            left,\n            values,\n            splitter,\n        } as const;\n    }\n    return;\n}\nfunction addClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const [distX, distY] = caculatePointerDist(moveable, e);\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    if (clipType === \"polygon\") {\n        poses.splice(index, 0, [distX, distY]);\n    } else if (clipType === \"inset\") {\n        const horizontalIndex = HORIZONTAL_RADIUS_ORDER.indexOf(index);\n        const verticalIndex = VERTICAL_RADIUS_ORDER.indexOf(index);\n        const length = clipPoses.length;\n\n        addRadiusPos(\n            clipPoses,\n            poses,\n            8,\n            horizontalIndex,\n            verticalIndex,\n            distX,\n            distY,\n            poses[4][0],\n            poses[4][1],\n            poses[0][0],\n            poses[0][1],\n        );\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"added\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\nfunction removeClipPath(moveable: MoveableManagerInterface<ClippableProps>, e: any) {\n    const { clipPath, index } = e.datas;\n    const {\n        type: clipType,\n        poses: clipPoses,\n        splitter,\n    } = (clipPath as ReturnType<typeof getClipPath>)!;\n    const poses = clipPoses.map(pos => pos.pos);\n    const length = poses.length;\n    if (clipType === \"polygon\") {\n        clipPoses.splice(index, 1);\n        poses.splice(index, 1);\n    } else if (clipType === \"inset\") {\n        if (index < 8) {\n            return;\n        }\n        removeRadiusPos(clipPoses, poses, index, 8, length);\n\n        if (length === clipPoses.length) {\n            return;\n        }\n    } else {\n        return;\n    }\n    const clipStyles = getClipStyles(moveable, clipPath, poses)!;\n    triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n        clipEventType: \"removed\",\n        clipType,\n        poses,\n        clipStyles,\n        clipStyle: `${clipType}(${clipStyles.join(splitter)})`,\n        distX: 0,\n        distY: 0,\n    }));\n}\n/**\n * @namespace Moveable.Clippable\n * @description Whether to clip the target.\n */\n\nexport default {\n    name: \"clippable\",\n    props: {\n        clippable: Boolean,\n        defaultClipPath: String,\n        customClipPath: String,\n        clipRelative: Boolean,\n        clipArea: Boolean,\n        dragWithClip: Boolean,\n        clipTargetBounds: Boolean,\n        clipVerticalGuidelines: Array,\n        clipHorizontalGuidelines: Array,\n        clipSnapThreshold: Boolean,\n    } as const,\n    events: {\n        onClipStart: \"clipStart\",\n        onClip: \"clip\",\n        onClipEnd: \"clipEnd\",\n    } as const,\n    css: [\n        `.control.clip-control {\n    background: #6d6;\n    cursor: pointer;\n}\n.control.clip-control.clip-radius {\n    background: #d66;\n}\n.line.clip-line {\n    background: #6e6;\n    cursor: move;\n    z-index: 1;\n}\n.clip-area {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n.clip-ellipse {\n    position: absolute;\n    cursor: move;\n    border: 1px solid #6d6;\n    border: var(--zoompx) solid #6d6;\n    border-radius: 50%;\n    transform-origin: 0px 0px;\n}`,\n        `:host {\n    --bounds-color: #d66;\n}`,\n        `.guideline {\n    pointer-events: none;\n    z-index: 2;\n}`,\n        `.line.guideline.bounds {\n    background: #d66;\n    background: var(--bounds-color);\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, React: Renderer): any[] {\n        const {\n            customClipPath, defaultClipPath,\n            clipArea, zoom,\n        } = moveable.props;\n        const {\n            target, width, height, allMatrix, is3d, left, top,\n            pos1, pos2, pos3, pos4,\n            clipPathState,\n            snapBoundInfos,\n        } = moveable.state;\n\n        if (!target) {\n            return [];\n        }\n\n        const clipPath = getClipPath(\n            target, width, height, defaultClipPath || \"inset\", clipPathState || customClipPath);\n\n        if (!clipPath) {\n            return [];\n        }\n        const n = is3d ? 4 : 3;\n        const type = clipPath.type;\n        const clipPoses = clipPath.poses;\n        const poses = clipPoses.map(pos => {\n            // return [x, y];\n            const caculatedPos = caculatePosition(allMatrix, pos.pos, n);\n\n            return [\n                caculatedPos[0] - left,\n                caculatedPos[1] - top,\n            ];\n        });\n\n        let controls: any[] = [];\n        let lines: any[] = [];\n\n        const isRect = type === \"rect\";\n        const isInset = type === \"inset\";\n        const isPolygon = type === \"polygon\";\n\n        if (isRect || isInset || isPolygon) {\n            const linePoses = isInset ? poses.slice(0, 8) : poses;\n\n            lines = linePoses.map((to, i) => {\n                const from = i === 0 ? linePoses[linePoses.length - 1] : linePoses[i - 1];\n\n                const rad = getRad(from, to);\n                const dist = getDiagonalSize(from, to);\n                return <div key={`clipLine${i}`} className={prefix(\"line\", \"clip-line\", \"snap-control\")}\n                    data-clip-index={i}\n                    style={{\n                        width: `${dist}px`,\n                        transform: `translate(${from[0]}px, ${from[1]}px) rotate(${rad}rad)`,\n                    }}></div>;\n            });\n        }\n        controls = poses.map((pos, i) => {\n            return <div key={`clipControl${i}`}\n                className={prefix(\"control\", \"clip-control\", \"snap-control\")}\n                data-clip-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px)`,\n                }}></div>;\n        });\n\n        if (isInset) {\n            controls.push(...poses.slice(8).map((pos, i) => {\n                return <div key={`clipRadiusControl${i}`}\n                    className={prefix(\"control\", \"clip-control\", \"clip-radius\", \"snap-control\")}\n                    data-clip-index={8 + i}\n                    style={{\n                        transform: `translate(${pos[0]}px, ${pos[1]}px)`,\n                    }}></div>;\n            }));\n        }\n        if (type === \"circle\" || type === \"ellipse\") {\n            const {\n                left: clipLeft,\n                top: clipTop,\n                radiusX,\n                radiusY,\n            } = clipPath;\n\n            const [distLeft, distTop] = minus(\n                caculatePosition(allMatrix, [clipLeft!, clipTop!], n),\n                caculatePosition(allMatrix, [0, 0], n),\n            );\n            let ellipseClipPath = \"none\";\n\n            if (!clipArea) {\n                const piece = Math.max(10, radiusX! / 5, radiusY! / 5);\n                const areaPoses: number[][] = [];\n\n                for (let i = 0; i <= piece; ++i) {\n                    const rad = Math.PI * 2 / piece * i;\n                    areaPoses.push([\n                        radiusX! + (radiusX! - zoom!) * Math.cos(rad),\n                        radiusY! + (radiusY! - zoom!) * Math.sin(rad),\n                    ]);\n                }\n                areaPoses.push([radiusX!, -2]);\n                areaPoses.push([-2, -2]);\n                areaPoses.push([-2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, radiusY! * 2 + 2]);\n                areaPoses.push([radiusX! * 2 + 2, -2]);\n                areaPoses.push([radiusX!, -2]);\n\n                ellipseClipPath = `polygon(${areaPoses.map(pos => `${pos[0]}px ${pos[1]}px`).join(\", \")})`;\n            }\n            controls.push(<div key=\"clipEllipse\" className={prefix(\"clip-ellipse\", \"snap-control\")} style={{\n                width: `${radiusX! * 2}px`,\n                height: `${radiusY! * 2}px`,\n                clipPath: ellipseClipPath,\n                transform: `translate(${-left + distLeft}px, ${-top + distTop}px) ${makeMatrixCSS(allMatrix)}`,\n            }}></div>);\n        }\n        if (clipArea) {\n            const {\n                width: allWidth,\n                height: allHeight,\n                left: allLeft,\n                top: allTop,\n            } = getRect([pos1, pos2, pos3, pos4, ...poses]);\n            if (isPolygon || isRect || isInset) {\n                const areaPoses = isInset ? poses.slice(0, 8) : poses;\n                controls.push(<div key=\"clipArea\" className={prefix(\"clip-area\", \"snap-control\")} style={{\n                    width: `${allWidth}px`,\n                    height: `${allHeight}px`,\n                    transform: `translate(${allLeft}px, ${allTop}px)`,\n                    clipPath: `polygon(${\n                        areaPoses.map(pos => `${pos[0] - allLeft}px ${pos[1] - allTop}px`).join(\", \")\n                        })`,\n                }}></div>);\n            }\n        }\n        if (snapBoundInfos) {\n            ([\"vertical\", \"horizontal\"] as const).forEach(directionType => {\n                const info = snapBoundInfos[directionType];\n                const isHorizontal = directionType === \"horizontal\";\n                if (info.isSnap) {\n                    lines.push(...info.snap.posInfos.map(({ pos }, i) => {\n                        const snapPos1 = minus(caculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(caculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2,\n                            `clip${directionType}snap${i}`, \"guideline\");\n                    }));\n                }\n                if (info.isBound) {\n                    lines.push(...info.bounds.map(({ pos }, i) => {\n                        const snapPos1 = minus(caculatePosition(\n                            allMatrix, isHorizontal ? [0, pos] : [pos, 0], n), [left, top]);\n                        const snapPos2 = minus(caculatePosition(\n                            allMatrix, isHorizontal ? [width, pos] : [pos, height], n), [left, top]);\n\n                        return renderLine(\n                            React, \"\", snapPos1, snapPos2,\n                            `clip${directionType}bounds${i}`, \"guideline\", \"bounds\", \"bold\");\n                    }));\n                }\n            });\n        }\n        return [\n            ...controls,\n            ...lines,\n        ];\n    },\n    dragControlCondition(e: any) {\n        return e.inputEvent && (e.inputEvent.target.className || \"\").indexOf(\"clip\") > -1;\n    },\n    dragStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const props = moveable.props;\n        const {\n            dragWithClip = true,\n        } = props;\n\n        if (dragWithClip) {\n            return false;\n        }\n\n        return this.dragControlStart(moveable, e);\n    },\n    drag(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControl(moveable, e);\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        return this.dragControlEnd(moveable, e);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const state = moveable.state;\n        const { defaultClipPath, customClipPath } = moveable.props;\n        const { target, width, height } = state;\n        const inputTarget = e.inputEvent ? e.inputEvent.target : null;\n        const className = inputTarget ? inputTarget.className : \"\";\n        const datas = e.datas;\n        const clipPath = getClipPath(target!, width, height, defaultClipPath || \"inset\", customClipPath);\n\n        if (!clipPath) {\n            return false;\n        }\n        const { clipText, type, poses } = clipPath;\n        const result = triggerEvent(moveable, \"onClipStart\", fillParams<OnClipStart>(moveable, e, {\n            clipType: type,\n            clipStyle: clipText,\n            poses: poses.map(pos => pos.pos),\n        }));\n\n        if (result === false) {\n            datas.isClipStart = false;\n            return false;\n        }\n        datas.isControl = className.indexOf(\"clip-control\") > -1;\n        datas.isLine = className.indexOf(\"clip-line\") > -1;\n        datas.isArea = className.indexOf(\"clip-area\") > -1 || className.indexOf(\"clip-ellipse\") > -1;\n        datas.index = inputTarget ? parseInt(inputTarget.getAttribute(\"data-clip-index\"), 10) : -1;\n        datas.clipPath = clipPath;\n        datas.isClipStart = true;\n        state.clipPathState = clipText;\n        setDragStart(moveable, e);\n\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        const { datas, originalDatas } = e;\n\n        if (!datas.isClipStart) {\n            return false;\n        }\n        const draggableData = (originalDatas && originalDatas.draggable) || {};\n        const { isControl, isLine, isArea, index, clipPath } = datas as {\n            clipPath: ReturnType<typeof getClipPath>,\n            [key: string]: any,\n        };\n        if (!clipPath) {\n            return false;\n        }\n        let [distX, distY] = draggableData.isDrag ? draggableData.prevDist : getDragDist(e);\n        const props = moveable.props;\n        const state = moveable.state;\n        const { width, height } = state;\n        const isDragWithTarget = !isArea && !isControl && !isLine;\n        const {\n            type: clipType,\n            poses: clipPoses,\n            splitter,\n        } = clipPath;\n        const poses = clipPoses.map(pos => pos.pos);\n\n        if (isDragWithTarget) {\n            distX = -distX;\n            distY = -distY;\n        }\n        const isAll = !isControl || clipPoses[index].direction === \"nesw\";\n        const isRect = clipType === \"inset\" || clipType === \"rect\";\n        let dists = clipPoses.map(() => [0, 0]);\n\n        if (isControl && !isAll) {\n            const { horizontal, vertical } = clipPoses[index];\n            const dist = [\n                distX * Math.abs(horizontal),\n                distY * Math.abs(vertical),\n            ];\n            dists = moveControlPos(clipPoses, index, dist, isRect);\n        } else if (isAll) {\n            dists = poses.map(() => [distX, distY]);\n        }\n        const nextPoses: number[][] = poses.map((pos, i) => plus(pos, dists[i]));\n        const guidePoses = [...nextPoses];\n\n        state.snapBoundInfos = null;\n        const isCircle = clipPath.type === \"circle\";\n        const isEllipse = clipPath.type === \"ellipse\";\n\n        if (isCircle || isEllipse) {\n            const guideRect = getRect(nextPoses);\n            const ry = Math.abs(guideRect.bottom - guideRect.top);\n            const rx = Math.abs(isEllipse ? guideRect.right - guideRect.left : ry);\n            const bottom = nextPoses[0][1] + ry;\n            const left = nextPoses[0][0] - rx;\n            const right = nextPoses[0][0] + rx;\n\n            // right\n            if (isCircle) {\n                guidePoses.push([right, guideRect.bottom]);\n                dists.push([1, 0]);\n            }\n            // bottom\n            guidePoses.push([guideRect.left, bottom]);\n            dists.push([0, 1]);\n            // left\n            guidePoses.push([left, guideRect.bottom]);\n            dists.push([1, 0]);\n        }\n\n        const guidelines = addGuidelines(\n            [],\n            width!, height!,\n            (props.clipHorizontalGuidelines || []).map(v => convertUnitSize(`${v}`, height)),\n            (props.clipVerticalGuidelines || []).map(v => convertUnitSize(`${v}`, width)),\n        );\n        let guideXPoses: number[] = [];\n        let guideYPoses: number[] = [];\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n            const rectDists = [dists[0], dists[2], dists[4], dists[6]];\n\n            guideXPoses = rectPoses.filter((_, i) => rectDists[i][0]).map(pos => pos[0]);\n            guideYPoses = rectPoses.filter((_, i) => rectDists[i][1]).map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.filter((_, i) => dists[i][0]).map(pos => pos[0]);\n            guideYPoses = guidePoses.filter((_, i) => dists[i][1]).map(pos => pos[1]);\n        }\n        for (let i = 0; i < 2; ++i) {\n            const {\n                horizontal: horizontalSnapInfo,\n                vertical: verticalSnapInfo,\n            } = checkSnapBounds(\n                guidelines,\n                props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n                guideXPoses,\n                guideYPoses,\n                {\n                    snapThreshold: 5,\n                },\n            );\n            const snapOffsetY = horizontalSnapInfo.offset;\n            const snapOffsetX = verticalSnapInfo.offset;\n\n            if ((isEllipse || isCircle) && dists[0][0] === 0 && dists[0][1] === 0) {\n                const guideRect = getRect(nextPoses);\n                let cy = guideRect.bottom - guideRect.top;\n                let cx = isEllipse ? guideRect.right - guideRect.left : cy;\n                const distSnapX = verticalSnapInfo.isBound\n                    ? Math.abs(snapOffsetX)\n                    : (verticalSnapInfo.snapIndex === 0 ? -snapOffsetX : snapOffsetX);\n                const distSnapY = horizontalSnapInfo.isBound\n                    ? Math.abs(snapOffsetY)\n                    : (horizontalSnapInfo.snapIndex === 0 ? -snapOffsetY : snapOffsetY);\n                cx -= distSnapX;\n                cy -= distSnapY;\n\n                if (isCircle) {\n                    cy = checkSnapBoundPriority(verticalSnapInfo, horizontalSnapInfo) > 0 ? cy : cx;\n                    cx = cy;\n                }\n                const center = guidePoses[0];\n\n                guidePoses[1][1] = center[1] - cy;\n                guidePoses[2][0] = center[0] + cx;\n                guidePoses[3][1] = center[1] + cy;\n                guidePoses[4][0] = center[0] - cx;\n            } else {\n                guidePoses.forEach((pos, j) => {\n                    const dist = dists[j];\n\n                    if (dist[0]) {\n                        pos[0] -= snapOffsetX;\n                    }\n                    if (dist[1]) {\n                        pos[1] -= snapOffsetY;\n                    }\n                });\n                break;\n            }\n        }\n        const nextClipStyles = getClipStyles(moveable, clipPath, nextPoses)!;\n        const clipStyle = `${clipType}(${nextClipStyles.join(splitter)})`;\n\n        state.clipPathState = clipStyle;\n\n        if (isCircle || isEllipse) {\n            guideXPoses = [guidePoses[4][0], guidePoses[2][0]];\n            guideYPoses = [guidePoses[1][1], guidePoses[3][1]];\n        } else if (isRect) {\n            const rectPoses = [guidePoses[0], guidePoses[2], guidePoses[4], guidePoses[6]];\n\n            guideXPoses = rectPoses.map(pos => pos[0]);\n            guideYPoses = rectPoses.map(pos => pos[1]);\n        } else {\n            guideXPoses = guidePoses.map(pos => pos[0]);\n            guideYPoses = guidePoses.map(pos => pos[1]);\n        }\n        state.snapBoundInfos = checkSnapBounds(\n            guidelines,\n            props.clipTargetBounds && { left: 0, top: 0, right: width, bottom: height },\n            guideXPoses,\n            guideYPoses,\n            {\n                snapThreshold: 1,\n            },\n        );\n\n        triggerEvent(moveable, \"onClip\", fillParams<OnClip>(moveable, e, {\n            clipEventType: \"changed\",\n            clipType,\n            poses: nextPoses,\n            clipStyle,\n            clipStyles: nextClipStyles,\n            distX,\n            distY,\n        }));\n\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<ClippableProps, ClippableState>, e: any) {\n        this.unset(moveable);\n        const { isDrag, datas, isDouble } = e;\n        const { isLine, isClipStart, isControl } = datas;\n\n        if (!isClipStart) {\n            return false;\n        }\n        triggerEvent(moveable, \"onClipEnd\", fillEndParams<OnClipEnd>(moveable, e, {}));\n        if (isDouble) {\n            if (isControl) {\n                removeClipPath(moveable, e);\n            } else if (isLine) {\n                // add\n                addClipPath(moveable, e);\n            }\n        }\n        return isDouble || isDrag;\n    },\n    unset(moveable: MoveableManagerInterface<ClippableProps, ClippableState>) {\n        moveable.state.clipPathState = \"\";\n        moveable.state.snapBoundInfos = null;\n    },\n};\n\n/**\n * Whether to clip the target. (default: false)\n * @name Moveable.Clippable#clippable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n *  If clippath is not set, the default value can be set. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#defaultClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (`rect` not possible) (default: false)\n * @name Moveable.Clippable#clipRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can force the custom clipPath. (defaultClipPath < style < customClipPath < dragging clipPath)\n * @name Moveable.Clippable#customClipPath\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When dragging the target, the clip also moves. (default: true)\n * @name Moveable.Clippable#dragWithClip\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * You can drag the clip by setting clipArea. (default: false)\n * @name Moveable.Clippable#clipArea\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n* Whether the clip is bound to the target. (default: false)\n* @name Moveable.Clippable#clipTargetBounds\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipTargetBounds: true,\n* });\n* moveable.on(\"clipStart\", e => {\n*     console.log(e);\n* }).on(\"clip\", e => {\n*     if (e.clipType === \"rect\") {\n*         e.target.style.clip = e.clipStyle;\n*     } else {\n*         e.target.style.clipPath = e.clipStyle;\n*     }\n* }).on(\"clipEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* Add clip guidelines in the vertical direction. (default: [])\n* @name Moveable.Clippable#clipVerticalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n\n/**\n* Add clip guidelines in the horizontal direction. (default: [])\n* @name Moveable.Clippable#clipHorizontalGuidelines\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n* istance value that can snap to clip guidelines. (default: 5)\n* @name Moveable.Clippable#clipSnapThreshold\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     clippable: true,\n*     defaultClipPath: \"inset\",\n*     customClipPath: \"\",\n*     clipRelative: false,\n*     clipArea: false,\n*     dragWithClip: true,\n*     clipVerticalGuidelines: [0, 100, 200],\n*     clipHorizontalGuidelines: [0, 100, 200],\n*     clipSnapThreshold: 5,\n* });\n*/\n/**\n * When drag start the clip area or controls, the `clipStart` event is called.\n * @memberof Moveable.Clippable\n * @event clipStart\n * @param {Moveable.Clippable.OnClipStart} - Parameters for the `clipStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag the clip area or controls, the `clip` event is called.\n * @memberof Moveable.Clippable\n * @event clip\n * @param {Moveable.Clippable.OnClip} - Parameters for the `clip` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the clip area or controls, the `clipEnd` event is called.\n * @memberof Moveable.Clippable\n * @event clipEnd\n * @param {Moveable.Clippable.OnClipEnd} - Parameters for the `clipEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     clippable: true,\n *     defaultClipPath: \"inset\",\n *     customClipPath: \"\",\n *     clipRelative: false,\n *     clipArea: false,\n *     dragWithClip: true,\n * });\n * moveable.on(\"clipStart\", e => {\n *     console.log(e);\n * }).on(\"clip\", e => {\n *     if (e.clipType === \"rect\") {\n *         e.target.style.clip = e.clipStyle;\n *     } else {\n *         e.target.style.clipPath = e.clipStyle;\n *     }\n * }).on(\"clipEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    prefix, triggerEvent,\n    fillParams, caculatePoses, getRect, fillEndParams, convertCSSSize\n} from \"../utils\";\nimport {\n    OnDragOriginStart, OnDragOrigin,\n    OnDragOriginEnd, MoveableManagerInterface, DraggableProps, OriginDraggableProps, MoveableGroupInterface\n} from \"../types\";\nimport { hasClass, IObject } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, getNextMatrix } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"../matrix\";\nimport Draggable from \"./Draggable\";\nimport CustomGesto, { setCustomDrag } from \"../gesto/CustomGesto\";\n\n/**\n * @namespace OriginDraggable\n * @memberof Moveable\n * @description Whether to drag origin (default: false)\n */\nexport default {\n    name: \"originDraggable\",\n    props: {\n        originDraggable: Boolean,\n        originRelative: Boolean,\n    } as const,\n    events: {\n        onDragOriginStart: \"dragOriginStart\",\n        onDragOrigin: \"dragOrigin\",\n        onDragOriginEnd: \"dragOriginEnd\",\n    } as const,\n    css: [\n        `:host[data-able-origindraggable] .control.origin {\n    pointer-events: auto;\n}`,\n    ],\n    dragControlCondition(e: any) {\n        if (e.isRequest) {\n            return e.requestAble === \"originDraggable\";\n        }\n        return hasClass(e.inputEvent.target, prefix(\"origin\"));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas } = e;\n\n        setDragStart(moveable, e);\n\n        const params = fillParams<OnDragOriginStart>(moveable, e, {\n            dragStart: Draggable.dragStart(\n                moveable,\n                new CustomGesto().dragStart([0, 0], e),\n            ),\n        });\n        const result = triggerEvent<OriginDraggableProps>(\n            moveable, \"onDragOriginStart\", params);\n\n        datas.startOrigin = moveable.state.transformOrigin;\n        datas.startTargetOrigin = moveable.state.targetOrigin;\n        datas.prevOrigin = [0, 0];\n        datas.isDragOrigin = true;\n\n        if (result === false) {\n            datas.isDragOrigin = false;\n            return false;\n        }\n\n        return params;\n    },\n    dragControl(moveable: MoveableManagerInterface<OriginDraggableProps & DraggableProps>, e: any) {\n        const { datas, isPinch, isRequest } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        const [distX, distY] = getDragDist(e);\n        const state = moveable.state;\n        const {\n            width,\n            height,\n            offsetMatrix,\n            targetMatrix,\n            is3d,\n        } = state;\n        const {\n            originRelative = true,\n        } = moveable.props;\n        const n = is3d ? 4 : 3;\n        let dist = [distX, distY];\n\n        if (isRequest) {\n            const distOrigin = e.distOrigin;\n            if (distOrigin[0] || distOrigin[1]) {\n                dist = distOrigin;\n            }\n        }\n        const origin = plus(datas.startOrigin, dist);\n        const targetOrigin = plus(datas.startTargetOrigin, dist);\n        const delta = minus(dist, datas.prevOrigin);\n\n        const nextMatrix = getNextMatrix(\n            offsetMatrix,\n            targetMatrix,\n            origin,\n            n,\n        );\n\n        const rect = moveable.getRect();\n        const nextRect = getRect(caculatePoses(nextMatrix, width, height, n));\n\n        const dragDelta = [\n            rect.left - nextRect.left,\n            rect.top - nextRect.top,\n        ];\n\n        datas.prevOrigin = dist;\n        const transformOrigin = [\n            convertCSSSize(targetOrigin[0], width, originRelative),\n            convertCSSSize(targetOrigin[1], height, originRelative),\n        ].join(\" \");\n        const params = fillParams<OnDragOrigin>(moveable, e, {\n            width,\n            height,\n            origin,\n            dist,\n            delta,\n            transformOrigin,\n            drag: Draggable.drag(\n                moveable,\n                setCustomDrag(e, moveable.state, dragDelta, !!isPinch, false),\n            )!,\n        });\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOrigin\", params);\n        return params;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<OriginDraggableProps>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isDragOrigin) {\n            return false;\n        }\n        triggerEvent<OriginDraggableProps>(moveable, \"onDragOriginEnd\",\n            fillEndParams<OnDragOriginEnd>(moveable, e, {}));\n        return true;\n    },\n    dragGroupControlCondition(e: any) {\n        return this.dragControlCondition(e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControlStart(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n\n        return true;\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<OriginDraggableProps>, e: any) {\n        const params = this.dragControl(moveable, e);\n\n        if (!params) {\n            return false;\n        }\n        moveable.transformOrigin = params.transformOrigin;\n\n        return true;\n    },\n    /**\n    * @method Moveable.OriginDraggable#request\n    * @param {object} e - the OriginDraggable's request parameter\n    * @param {number} [e.x] - x position\n    * @param {number} [e.y] - y position\n    * @param {number} [e.deltaX] - x number to move\n    * @param {number} [e.deltaY] - y number to move\n    * @param {array} [e.deltaOrigin] - left, top number to move transform-origin\n    * @param {array} [e.origin] - transform-origin position\n    * @param {number} [e.isInstant] - Whether to execute the request instantly\n    * @return {Moveable.Requester} Moveable Requester\n    * @example\n\n    * // Instantly Request (requestStart - request - requestEnd)\n    * // Use Relative Value\n    * moveable.request(\"originDraggable\", { deltaX: 10, deltaY: 10 }, true);\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 }, true);\n    * // Use Transform Value\n    * moveable.request(\"originDraggable\", { deltaOrigin: [10, 0] }, true);\n    * moveable.request(\"originDraggable\", { origin: [100, 0] }, true);\n    * // requestStart\n    * const requester = moveable.request(\"originDraggable\");\n    *\n    * // request\n    * // Use Relative Value\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * requester.request({ deltaX: 10, deltaY: 10 });\n    * // Use Absolute Value\n    * moveable.request(\"originDraggable\", { x: 200, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 220, y: 100 });\n    * moveable.request(\"originDraggable\", { x: 240, y: 100 });\n    *\n    * // requestEnd\n    * requester.requestEnd();\n    */\n    request(moveable: MoveableManagerInterface<any, any>) {\n        const datas = {};\n        const rect = moveable.getRect();\n        let distX = 0;\n        let distY = 0;\n\n        const transformOrigin = rect.transformOrigin;\n        const distOrigin = [0, 0];\n\n        return {\n            isControl: true,\n            requestStart() {\n                return { datas };\n            },\n            request(e: IObject<any>) {\n                if (\"deltaOrigin\" in e) {\n                    distOrigin[0] += e.deltaOrigin[0];\n                    distOrigin[1] += e.deltaOrigin[1];\n                } else if (\"origin\" in e) {\n                    distOrigin[0] = e.origin[0] - transformOrigin[0];\n                    distOrigin[1] = e.origin[1] - transformOrigin[1];\n                } else {\n                    if (\"x\" in e) {\n                        distX = e.x - rect.left;\n                    } else if (\"deltaX\" in e) {\n                        distX += e.deltaX;\n                    }\n                    if (\"y\" in e) {\n                        distY = e.y - rect.top;\n                    } else if (\"deltaY\" in e) {\n                        distY += e.deltaY;\n                    }\n                }\n\n                return { datas, distX, distY, distOrigin };\n            },\n            requestEnd() {\n                return { datas, isDrag: true };\n            },\n        };\n    },\n};\n/**\n * Whether to drag origin (default: false)\n * @name Moveable.OriginDraggable#originDraggable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n * });\n * let translate = [0, 0];\n * moveable.on(\"dragOriginStart\", e => {\n *     e.dragStart && e.dragStart.set(translate);\n * }).on(\"dragOrigin\", e => {\n *     translate = e.drag.beforeTranslate;\n *     e.target.style.cssText\n *         = `transform-origin: ${e.transformOrigin};`\n *         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n * }).on(\"dragOriginEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * % Can be used instead of the absolute px (default: true)\n * @name Moveable.OriginDraggable#originRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     originDraggable: true,\n *     originRelative: false,\n * });\n * moveable.originRelative = true;\n */\n\n/**\n* When drag start the origin, the `dragOriginStart` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginStart\n* @param {Moveable.OriginDraggable.OnDragOriginStart} - Parameters for the `dragOriginStart` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag the origin, the `dragOrigin` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOrigin\n* @param {Moveable.OriginDraggable.OnDragOrigin} - Parameters for the `dragOrigin` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n\n/**\n* When drag end the origin, the `dragOriginEnd` event is called.\n* @memberof Moveable.OriginDraggable\n* @event dragOriginEnd\n* @param {Moveable.OriginDraggable.OnDragOriginEnd} - Parameters for the `dragOriginEnd` event\n* @example\n* import Moveable from \"moveable\";\n*\n* const moveable = new Moveable(document.body, {\n*     originDraggable: true,\n* });\n* let translate = [0, 0];\n* moveable.on(\"dragOriginStart\", e => {\n*     e.dragStart && e.dragStart.set(translate);\n* }).on(\"dragOrigin\", e => {\n*     translate = e.drag.beforeTranslate;\n*     e.target.style.cssText\n*         = `transform-origin: ${e.transformOrigin};`\n*         + `transform: translate(${translate[0]}px, ${translate[1]}px)`;\n* }).on(\"dragOriginEnd\", e => {\n*     console.log(e);\n* });\n*/\n","import {\n    prefix, triggerEvent,\n    fillParams, fillEndParams, caculatePosition, moveControlPos\n} from \"../utils\";\nimport {\n    Renderer, RoundableProps, OnRoundStart, RoundableState, OnRound, ControlPose, OnRoundEnd, MoveableManagerInterface,\n} from \"../types\";\nimport { splitSpace } from \"@daybrush/utils\";\nimport { setDragStart, getDragDist, caculatePointerDist } from \"../gesto/GestoUtils\";\nimport { minus, plus } from \"../matrix\";\nimport {\n    getRadiusValues, getRadiusStyles, removeRadiusPos,\n    addRadiusPos, splitRadiusPoses,\n} from \"./roundable/borderRadius\";\n\nfunction addBorderRadius(\n    controlPoses: ControlPose[],\n    poses: number[][],\n    lineIndex: number,\n    distX: number,\n    distY: number,\n    width: number,\n    height: number,\n) {\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses);\n    const horizontalsLength = horizontals.length;\n    const verticalsLength = verticals.length;\n    // lineIndex\n    // 0 top\n    // 1 right\n    // 2 left\n    // 3 bottom\n\n    // 0 top - left\n    // 1 top - right\n    // 2 bottom - right\n    // 3 bottom - left\n    // 0 left - top\n    // 1 right - top\n    // 2 right - bottom\n    // 3 left - bottom\n    let horizontalIndex = -1;\n    let verticalIndex = -1;\n\n    if (lineIndex === 0) {\n        if (horizontalsLength === 0) {\n            horizontalIndex = 0;\n        } else if (horizontalsLength === 1) {\n            horizontalIndex = 1;\n        }\n    } else if (lineIndex === 3) {\n        if (horizontalsLength <= 2) {\n            horizontalIndex = 2;\n        } else if (horizontalsLength <= 3) {\n            horizontalIndex = 3;\n        }\n    }\n    if (lineIndex === 2) {\n        if (verticalsLength === 0) {\n            verticalIndex = 0;\n        } else if (verticalsLength < 4) {\n            verticalIndex = 3;\n        }\n    } else if (lineIndex === 1) {\n        if (verticalsLength <= 1) {\n            verticalIndex = 1;\n        } else if (verticalsLength <= 2) {\n            verticalIndex = 2;\n        }\n    }\n\n    addRadiusPos(\n        controlPoses, poses, 0,\n        horizontalIndex, verticalIndex,\n        distX, distY, width, height,\n    );\n}\nfunction getBorderRadius(\n    target: HTMLElement | SVGElement, width: number, height: number, state?: string,\n) {\n    let borderRadius: string;\n\n    if (!state) {\n        const style = window.getComputedStyle(target);\n\n        if (!style) {\n            return null;\n        }\n        borderRadius = style.borderRadius || \"\";\n    } else {\n        borderRadius = state;\n    }\n    if (!borderRadius || (!state && borderRadius === \"0px\")) {\n        return null;\n    }\n    const values = splitSpace(borderRadius);\n\n    return getRadiusValues(values, width, height, 0, 0);\n}\n\nfunction triggerRoundEvent(\n    moveable: MoveableManagerInterface<RoundableProps, RoundableState>,\n    e: any,\n    dist: number[],\n    delta: number[],\n    controlPoses: ControlPose[],\n    nextPoses: number[][],\n) {\n    const state = moveable.state;\n    const {\n        width,\n        height,\n    } = state;\n    const {\n        raws,\n        styles,\n    } = getRadiusStyles(\n        nextPoses,\n        controlPoses,\n        moveable.props.roundRelative!,\n        width,\n        height,\n    );\n    const {\n        horizontals,\n        verticals,\n    } = splitRadiusPoses(controlPoses, raws);\n    const borderRadius = styles.join(\" \");\n\n    state.borderRadiusState = borderRadius;\n    triggerEvent<RoundableProps>(moveable, \"onRound\", fillParams<OnRound>(moveable, e, {\n        horizontals,\n        verticals,\n        borderRadius,\n        width,\n        height,\n        delta,\n        dist,\n    }));\n}\n\n/**\n * @namespace Moveable.Roundable\n * @description Whether to show and drag or double click border-radius\n */\n\nexport default {\n    name: \"roundable\",\n    props: {\n        roundable: Boolean,\n        roundRelative: Boolean,\n    } as const,\n    events: {\n        onRoundStart: \"roundStart\",\n        onRound: \"round\",\n        onRoundEnd: \"roundEnd\",\n    } as const,\n    css: [\n        `.control.border-radius {\n    background: #d66;\n    cursor: pointer;\n}`,\n        `:host[data-able-roundable] .line.direction {\n    cursor: pointer;\n}`,\n    ],\n    render(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, React: Renderer): any {\n        const {\n            target,\n            width,\n            height,\n            allMatrix,\n            is3d,\n            left,\n            top,\n            borderRadiusState,\n        } = moveable.state;\n\n        if (!target) {\n            return null;\n        }\n\n        const n = is3d ? 4 : 3;\n        const radiusValues = getBorderRadius(target, width, height, borderRadiusState);\n\n        if (!radiusValues) {\n            return null;\n        }\n        return radiusValues.map((v, i) => {\n            const pos = minus(caculatePosition(allMatrix, v.pos, n), [left, top]);\n\n            return <div key={`borderRadiusControl${i}`}\n                className={prefix(\"control\", \"border-radius\")}\n                data-radius-index={i}\n                style={{\n                    transform: `translate(${pos[0]}px, ${pos[1]}px)`,\n                }}></div>;\n        });\n    },\n    dragControlCondition(e: any) {\n        if (!e.inputEvent || e.isRequest) {\n            return false;\n        }\n        const className = (e.inputEvent.target.className || \"\");\n\n        return className.indexOf(\"border-radius\") > -1\n            || (className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1);\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { inputEvent, datas, } = e;\n        const inputTarget = inputEvent.target;\n        const className = (inputTarget.className || \"\");\n        const isControl = className.indexOf(\"border-radius\") > -1;\n        const isLine = className.indexOf(\"moveable-line\") > -1 && className.indexOf(\"moveable-direction\") > -1;\n        const controlIndex = isControl ? parseInt(inputTarget.getAttribute(\"data-radius-index\"), 10) : -1;\n        const lineIndex = isLine ? parseInt(inputTarget.getAttribute(\"data-line-index\"), 10) : -1;\n\n        if (!isControl && !isLine) {\n            return false;\n        }\n\n        const result = triggerEvent<RoundableProps>(\n            moveable, \"onRoundStart\", fillParams<OnRoundStart>(moveable, e, {}));\n\n        if (result === false) {\n            return false;\n        }\n\n        datas.lineIndex = lineIndex;\n        datas.controlIndex = controlIndex;\n        datas.isControl = isControl;\n        datas.isLine = isLine;\n\n        setDragStart(moveable, e);\n\n        const {\n            roundRelative,\n        } = moveable.props;\n        const state = moveable.state;\n        const {\n            target,\n            width,\n            height,\n        } = state;\n\n        datas.isRound = true;\n        datas.prevDist = [0, 0];\n        const controlPoses = getBorderRadius(target!, width, height) || [];\n\n        datas.controlPoses = controlPoses;\n\n        state.borderRadiusState = getRadiusStyles(\n            controlPoses.map(pos => pos.pos), controlPoses, roundRelative!, width, height).styles.join(\" \");\n        return true;\n    },\n    dragControl(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const { datas } = e;\n\n        if (!datas.isRound || !datas.isControl || !datas.controlPoses.length) {\n            return false;\n        }\n        const index = datas.controlIndex as number;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const [distX, distY] = getDragDist(e);\n        const dist = [distX, distY];\n        const delta = minus(dist, datas.prevDist);\n\n        const dists = moveControlPos(controlPoses, index, dist);\n        const nextPoses = controlPoses.map((pos, i) => plus(pos.pos, dists[i]));\n\n        datas.prevDist = [distX, distY];\n\n        triggerRoundEvent(\n            moveable,\n            e,\n            dist,\n            delta,\n            controlPoses,\n            nextPoses,\n        );\n        return true;\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RoundableProps, RoundableState>, e: any) {\n        const state = moveable.state;\n\n        state.borderRadiusState = \"\";\n        const { datas, isDouble } = e;\n        if (!datas.isRound) {\n            return false;\n        }\n        const {\n            width,\n            height,\n        } = state;\n        const {\n            isControl,\n            controlIndex,\n            isLine,\n            lineIndex,\n        } = datas;\n        const controlPoses = datas.controlPoses as ControlPose[];\n        const poses = controlPoses.map(pos => pos.pos);\n        const length = poses.length;\n\n        if (isDouble) {\n            if (isControl) {\n                removeRadiusPos(controlPoses, poses, controlIndex, 0);\n            } else if (isLine) {\n                const [distX, distY] = caculatePointerDist(moveable, e);\n\n                addBorderRadius(controlPoses, poses, lineIndex, distX, distY, width, height);\n            }\n            if (length !== controlPoses.length) {\n                triggerRoundEvent(\n                    moveable,\n                    e,\n                    [0, 0],\n                    [0, 0],\n                    controlPoses,\n                    poses,\n                );\n            }\n            triggerEvent<RoundableProps>(moveable, \"onRoundEnd\",\n                fillEndParams<OnRoundEnd>(moveable, e, {}));\n        }\n        state.borderRadiusState = \"\";\n        return true;\n    },\n    unset(moveable: MoveableManagerInterface<RoundableProps, RoundableState>) {\n        moveable.state.borderRadiusState = \"\";\n    },\n};\n/**\n * Whether to show and drag or double click border-radius, (default: false)\n * @name Moveable.Roundable#roundable\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * % Can be used instead of the absolute px\n * @name Moveable.Roundable#roundRelative\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n\n/**\n * When drag start the clip area or controls, the `roundStart` event is called.\n * @memberof Moveable.Roundable\n * @event roundStart\n * @param {Moveable.Roundable.OnRoundStart} - Parameters for the `roundStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag or double click the border area or controls, the `round` event is called.\n * @memberof Moveable.Roundable\n * @event round\n * @param {Moveable.Roundable.OnRound} - Parameters for the `round` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n/**\n * When drag end the border area or controls, the `roundEnd` event is called.\n * @memberof Moveable.Roundable\n * @event roundEnd\n * @param {Moveable.Roundable.onRoundEnd} - Parameters for the `roundEnd` event\n * @example\n  * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     roundable: true,\n *     roundRelative: false,\n * });\n * moveable.on(\"roundStart\", e => {\n *     console.log(e);\n * }).on(\"round\", e => {\n *     e.target.style.borderRadius = e.borderRadius;\n * }).on(\"roundEnd\", e => {\n *     console.log(e);\n * });\n */\n","import {\n    MoveableManagerInterface, BeforeRenderableProps,\n    OnBeforeRenderStart, OnBeforeRender, OnBeforeRenderEnd,\n    MoveableGroupInterface, OnBeforeRenderGroupStart,\n    OnBeforeRenderGroup, OnBeforeRenderGroupEnd\n} from \"../types\";\nimport { fillParams, triggerEvent } from \"../utils\";\nimport { convertMatrixtoCSS } from \"../matrix\";\nimport { isArray, splitSpace } from \"@daybrush/utils\";\nimport { fillChildEvents } from \"../groupUtils\";\n\nexport default {\n    isPinch: true,\n    name: \"beforeRenderable\",\n    props: {\n    } as const,\n    events: {\n        onBeforeRenderStart: \"beforeRenderStart\",\n        onBeforeRender: \"beforeRender\",\n        onBeforeRenderEnd: \"beforeRenderEnd\",\n        onBeforeRenderGroupStart: \"beforeRenderGroupStart\",\n        onBeforeRenderGroup: \"beforeRenderGroup\",\n        onBeforeRenderGroupEnd: \"beforeRenderGroupEnd\",\n    } as const,\n    setTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        const {\n            is3d,\n            targetMatrix,\n        } = moveable.state;\n        const cssMatrix = is3d\n            ? `matrix3d(${targetMatrix.join(\",\")})`\n            : `matrix(${convertMatrixtoCSS(targetMatrix, true)})`;\n        e.datas.startTransforms = [cssMatrix];\n    },\n    resetTransform(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        e.datas.nextTransforms = e.datas.startTransforms;\n        e.datas.nextTransformAppendedIndexes = [];\n    },\n    fillDragStartParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRenderStart>(moveable, e, {\n            setTransform: (transform: string | string[]) => {\n                e.datas.startTransforms = isArray(transform) ? transform : splitSpace(transform);\n            },\n            isPinch: !!e.isPinch,\n        });\n    },\n    fillDragParams(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        });\n    },\n    dragStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.setTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderStart`, this.fillDragStartParams(moveable, e));\n    },\n    drag(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        this.resetTransform(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRender`, fillParams<OnBeforeRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        triggerEvent(moveable, `onBeforeRenderEnd`, fillParams<OnBeforeRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragStart(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.setTransform(childMoveable, childEvent);\n            return this.fillDragStartParams(childMoveable, childEvent);\n        });\n        triggerEvent(moveable, `onBeforeRenderGroupStart`, fillParams<OnBeforeRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            setTransform() { },\n            events: params,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.drag(moveable, e);\n\n        const events = fillChildEvents(moveable, \"beforeRenderable\", e);\n        const moveables = moveable.moveables;\n        const params = events.map((childEvent, i) => {\n            const childMoveable = moveables[i];\n\n            this.resetTransform(childMoveable, childEvent);\n            return this.fillDragParams(childMoveable, childEvent);\n        });\n\n        triggerEvent(moveable, `onBeforeRenderGroup`, fillParams<OnBeforeRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n            events: params,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        this.dragEnd(moveable, e);\n\n        triggerEvent(moveable, `onBeforeRenderGroupEnd`, fillParams<OnBeforeRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<BeforeRenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<BeforeRenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import {\n    MoveableManagerInterface, RenderableProps, OnRenderStart, OnRender,\n    OnRenderEnd, MoveableGroupInterface, OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\n\nexport default {\n    name: \"Renderable\",\n    props: {\n    } as const,\n    events: {\n        onRenderStart: \"renderStart\",\n        onRender: \"render\",\n        onRenderEnd: \"renderEnd\",\n        onRenderGroupStart: \"renderGroupStart\",\n        onRenderGroup: \"renderGroup\",\n        onRenderGroupEnd: \"renderGroupEnd\",\n    } as const,\n    dragStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderStart`, fillParams<OnRenderStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    drag(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRender`, fillParams<OnRender>(moveable, e, {\n            isPinch: !!e.isPinch,\n        }));\n    },\n    dragEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderEnd`, fillParams<OnRenderEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n        }));\n    },\n    dragGroupStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupStart`, fillParams<OnRenderGroupStart>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroup(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroup`, fillParams<OnRenderGroup>(moveable, e, {\n            isPinch: !!e.isPinch,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        triggerEvent(moveable, `onRenderGroupEnd`, fillParams<OnRenderGroupEnd>(moveable, e, {\n            isPinch: !!e.isPinch,\n            isDrag: e.isDrag,\n            targets: moveable.props.targets,\n        }));\n    },\n    dragControlStart(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragStart(moveable, e);\n    },\n    dragControl(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.drag(moveable, e);\n    },\n    dragControlEnd(moveable: MoveableManagerInterface<RenderableProps>, e: any) {\n        return this.dragEnd(moveable, e);\n    },\n    dragGroupControlStart(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupStart(moveable, e);\n    },\n    dragGroupControl(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroup(moveable, e);\n    },\n    dragGroupControlEnd(moveable: MoveableGroupInterface<RenderableProps>, e: any) {\n        return this.dragGroupEnd(moveable, e);\n    },\n} as const;\n","import { Able, MoveableManagerInterface, MoveableGroupInterface } from \"../types\";\nimport { IObject } from \"@daybrush/utils\";\nimport { convertDragDist } from \"../utils\";\nimport Gesto from \"gesto\";\nimport BeforeRenderable from \"../ables/BeforeRenderable\";\nimport Renderable from \"../ables/Renderable\";\n\nexport function triggerAble(\n    moveable: MoveableManagerInterface,\n    ableType: string,\n    eventOperation: string,\n    eventAffix: string,\n    eventType: any,\n    e: any,\n    requestInstant?: boolean,\n) {\n    const isStart = eventType === \"Start\";\n    const target = moveable.state.target;\n    const isRequest = e.isRequest;\n\n    if (\n        !target\n        || (isStart && eventAffix.indexOf(\"Control\") > -1\n            && !isRequest && moveable.areaElement === e.inputEvent.target)\n    ) {\n        return false;\n    }\n    const eventName = `${eventOperation}${eventAffix}${eventType}`;\n    const conditionName = `${eventOperation}${eventAffix}Condition`;\n    const isEnd = eventType === \"End\";\n    const isAfter = eventType.indexOf(\"After\") > -1;\n    const isFirstStart = isStart && (\n        !moveable.targetGesto || !moveable.controlGesto\n        || (!moveable.targetGesto.isFlag() || !moveable.controlGesto.isFlag())\n    );\n\n    if (isFirstStart) {\n        moveable.updateRect(eventType, true, false);\n    }\n    if (eventType === \"\" && !isAfter) {\n        convertDragDist(moveable.state, e);\n    }\n    const isGroup = eventAffix.indexOf(\"Group\") > -1;\n    const ables: Able[] = [BeforeRenderable, ...(moveable as any)[ableType].slice(), Renderable];\n\n    if (isRequest) {\n        const requestAble = e.requestAble;\n        if (!ables.some(able => able.name === requestAble)) {\n            ables.push(...moveable.props.ables!.filter(able => able.name === requestAble));\n        }\n    }\n\n    if (!ables.length) {\n        return false;\n    }\n    const events = ables.filter((able: any) => able[eventName]);\n    const datas = e.datas;\n\n    if (isFirstStart) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n\n    const inputEvent = e.inputEvent;\n    let inputTarget: Element;\n\n    if (isEnd && inputEvent) {\n        inputTarget = document.elementFromPoint(e.clientX, e.clientY) || inputEvent.target;\n    }\n    const results = events.filter((able: any) => {\n        const hasCondition = isStart && able[conditionName];\n        const ableName = able.name;\n        const nextDatas = datas[ableName] || (datas[ableName] = {});\n\n        if (!hasCondition || able[conditionName](e, moveable)) {\n            return able[eventName](moveable, { ...e, datas: nextDatas, originalDatas: datas, inputTarget });\n        }\n        return false;\n    });\n\n    const isUpdate = results.length;\n    const isForceEnd = isStart && events.length && !isUpdate;\n\n    if (isEnd || isForceEnd) {\n        moveable.state.gesto = null;\n\n        if ((moveable as MoveableGroupInterface).moveables) {\n            (moveable as MoveableGroupInterface).moveables.forEach(childMoveable => {\n                childMoveable.state.gesto = null;\n            });\n        }\n    }\n    if (isFirstStart && isForceEnd) {\n        events.forEach(able => {\n            able.unset && able.unset(moveable);\n        });\n    }\n    if (moveable.isUnmounted || isForceEnd) {\n        return false;\n    }\n    if ((!isStart && isUpdate && !requestInstant) || isEnd) {\n        if (results.some(able => able.updateRect) && !isGroup) {\n            moveable.updateRect(eventType, false, false);\n        } else {\n            moveable.updateRect(eventType, true, false);\n        }\n        moveable.forceUpdate();\n    }\n    if (!isStart && !isEnd && !isAfter && isUpdate && !requestInstant) {\n        triggerAble(moveable, ableType, eventOperation, eventAffix, eventType + \"After\", e);\n    }\n    return true;\n}\n\nexport function getTargetAbleGesto(\n    moveable: MoveableManagerInterface,\n    moveableTarget: HTMLElement | SVGElement,\n    eventAffix: string,\n) {\n    const controlBox = moveable.controlBox.getElement();\n    const targets: Array<HTMLElement | SVGElement> = [];\n\n    targets.push(controlBox);\n\n    if (!moveable.props.dragArea) {\n        targets.push(moveableTarget);\n    }\n\n    const startFunc = (e: any) => {\n        const eventTarget = e.inputEvent.target;\n        const areaElement = moveable.areaElement;\n\n        return eventTarget === areaElement\n            || !moveable.isMoveableElement(eventTarget)\n            || eventTarget.className.indexOf(\"moveable-area\") > -1\n            || eventTarget.className.indexOf(\"moveable-padding\") > -1;\n    };\n\n    return getAbleGesto(moveable, targets, \"targetAbles\", eventAffix, {\n        dragStart: startFunc,\n        pinchStart: startFunc,\n    });\n}\nexport function getAbleGesto(\n    moveable: MoveableManagerInterface,\n    target: HTMLElement | SVGElement | Array<HTMLElement | SVGElement>,\n    ableType: string,\n    eventAffix: string,\n    conditionFunctions: IObject<any> = {},\n) {\n    const {\n        pinchOutside,\n        pinchThreshold,\n    } = moveable.props;\n    const options: IObject<any> = {\n        container: window,\n        pinchThreshold,\n        pinchOutside,\n    };\n    const gesto = new Gesto(target!, options);\n\n    [\"drag\", \"pinch\"].forEach(eventOperation => {\n        [\"Start\", \"\", \"End\"].forEach(eventType => {\n            gesto.on(`${eventOperation}${eventType}`, e => {\n                const eventName = e.eventType;\n\n                if (conditionFunctions[eventName] && !conditionFunctions[eventName](e)) {\n                    e.stop();\n                    return;\n                }\n                const result = triggerAble(moveable, ableType, eventOperation, eventAffix, eventType, e);\n\n                if (!result) {\n                    e.stop();\n                }\n            });\n        });\n    });\n\n    return gesto;\n}\n","import * as React from \"react\";\nimport { PREFIX } from \"./consts\";\nimport {\n    prefix,\n    getTargetInfo,\n    unset,\n    isInside,\n    getAbsolutePosesByState,\n    getRect,\n    filterAbles,\n    equals,\n    flat,\n    groupByMap,\n    caculatePadding,\n} from \"./utils\";\nimport Gesto from \"gesto\";\nimport { ref } from \"framework-utils\";\nimport { MoveableManagerProps, MoveableManagerState, Able, RectInfo, Requester, PaddingBox, HitRect } from \"./types\";\nimport { triggerAble, getTargetAbleGesto, getAbleGesto } from \"./gesto/getAbleGesto\";\nimport { getRad, plus } from \"./matrix\";\nimport { IObject } from \"@daybrush/utils\";\nimport { renderLine } from \"./renderDirection\";\n\nexport default class MoveableManager<T = {}>\n    extends React.PureComponent<MoveableManagerProps<T>, MoveableManagerState> {\n    public static defaultProps: Required<MoveableManagerProps> = {\n        target: null,\n        dragTarget: null,\n        container: null,\n        rootContainer: null,\n        origin: true,\n        edge: false,\n        parentMoveable: null,\n        parentPosition: null,\n        ables: [],\n        pinchThreshold: 20,\n        dragArea: false,\n        passDragArea: false,\n        transformOrigin: \"\",\n        className: \"\",\n        zoom: 1,\n        triggerAblesSimultaneously: false,\n        padding: {},\n        pinchOutside: true,\n        checkInput: false,\n        groupable: false,\n        cspNonce: \"\",\n        translateZ: 50,\n        cssStyled: null,\n    };\n    public state: MoveableManagerState = {\n        container: null,\n        target: null,\n        gesto: null,\n        renderPoses: [[0, 0], [0, 0], [0, 0], [0, 0]],\n        ...getTargetInfo(null),\n    };\n    public targetAbles: Able[] = [];\n    public controlAbles: Able[] = [];\n    public controlBox!: { getElement(): HTMLElement };\n    public areaElement!: HTMLElement;\n    public targetGesto!: Gesto;\n    public controlGesto!: Gesto;\n    public rotation: number = 0;\n    public scale: number[] = [1, 1];\n    public isUnmounted = false;\n\n    public render() {\n        const props = this.props;\n        const state = this.state;\n        const {\n            edge, parentPosition, className,\n            target: propsTarget,\n            zoom, cspNonce,\n            translateZ,\n            cssStyled: ControlBoxElement,\n        } = props;\n\n        this.checkUpdate();\n        this.updateRenderPoses();\n\n        const { left: parentLeft, top: parentTop } = parentPosition! || { left: 0, top: 0 };\n        const { left, top, target: stateTarget, direction, renderPoses } = state;\n        const groupTargets = (props as any).targets;\n        const isDisplay = ((groupTargets && groupTargets.length) || propsTarget) && stateTarget;\n        const isDragging = this.isDragging();\n        const ableAttributes: IObject<boolean> = {};\n        const Renderer = { createElement: React.createElement };\n        this.getEnabledAbles().forEach(able => {\n            ableAttributes[`data-able-${able.name.toLowerCase()}`] = true;\n        });\n        return (\n            <ControlBoxElement\n                cspNonce={cspNonce}\n                ref={ref(this, \"controlBox\")}\n                className={`${prefix(\"control-box\", direction === -1\n                    ? \"reverse\" : \"\", isDragging ? \"dragging\" : \"\")} ${className}`}\n                {...ableAttributes}\n                style={{\n                    \"position\": \"absolute\",\n                    \"display\": isDisplay ? \"block\" : \"none\",\n                    \"transform\": `translate(${left - parentLeft}px, ${top - parentTop}px) translateZ(${translateZ}px)`,\n                    \"--zoom\": zoom,\n                    \"--zoompx\": `${zoom}px`,\n                }}>\n                {this.renderAbles()}\n                {renderLine(Renderer, edge ? \"n\" : \"\", renderPoses[0], renderPoses[1], 0)}\n                {renderLine(Renderer, edge ? \"e\" : \"\", renderPoses[1], renderPoses[3], 1)}\n                {renderLine(Renderer, edge ? \"w\" : \"\", renderPoses[0], renderPoses[2], 2)}\n                {renderLine(Renderer, edge ? \"s\" : \"\", renderPoses[2], renderPoses[3], 3)}\n            </ControlBoxElement>\n        );\n    }\n    public componentDidMount() {\n        this.controlBox.getElement();\n        const props = this.props;\n        const { parentMoveable, container } = props;\n\n        this.updateEvent(props);\n        if (!container && !parentMoveable) {\n            this.updateRect(\"End\", false, true);\n        }\n        this.updateCheckInput();\n    }\n    public componentDidUpdate(prevProps: MoveableManagerProps) {\n        this.updateEvent(prevProps);\n        this.updateCheckInput();\n    }\n    public componentWillUnmount() {\n        this.isUnmounted = true;\n        unset(this, \"targetGesto\");\n        unset(this, \"controlGesto\");\n    }\n    public getContainer(): HTMLElement | SVGElement {\n        const { parentMoveable, container } = this.props;\n\n        return container!\n            || (parentMoveable && parentMoveable.getContainer())\n            || this.controlBox.getElement().parentElement!;\n    }\n    /**\n     * Check if the target is an element included in the moveable.\n     * @method Moveable#isMoveableElement\n     * @param - the target\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"click\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *         moveable.target = e.target;\n     *     }\n     * });\n     */\n    public isMoveableElement(target: Element) {\n        return target && ((target.getAttribute(\"class\") || \"\").indexOf(PREFIX) > -1);\n    }\n    /**\n     * You can drag start the Moveable through the external `MouseEvent`or `TouchEvent`. (Angular: ngDragStart)\n     * @method Moveable#dragStart\n     * @param - external `MouseEvent`or `TouchEvent`\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (!moveable.isMoveableElement(e.target)) {\n     *          moveable.dragStart(e);\n     *     }\n     * });\n     */\n    public dragStart(e: MouseEvent | TouchEvent) {\n        if (this.targetGesto) {\n            this.targetGesto.triggerDragStart(e);\n        }\n        return this;\n    }\n    /**\n     * Hit test an element or rect on a moveable target.\n     * @method Moveable#hitTest\n     * @param - element or rect to test\n     * @return - Get hit test rate (rate > 0 is hitted)\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.hitTest(e.target) > 0) {\n     *          console.log(\"hiited\");\n     *     }\n     * });\n     */\n    public hitTest(el: Element | HitRect): number {\n        let rect: Required<HitRect>;\n\n        if (el instanceof Element) {\n            const clientRect = el.getBoundingClientRect();\n\n            rect = {\n                left: clientRect.left,\n                top: clientRect.top,\n                width: clientRect.width,\n                height: clientRect.height,\n            };\n        } else {\n            rect = { width: 0, height: 0, ...el };\n        }\n        const {\n            left: rectLeft,\n            top: rectTop,\n            width: rectWidth,\n            height: rectHeight,\n        } = this.state.targetClientRect;\n        const {\n            left,\n            top,\n            width,\n            height,\n        } = rect;\n        const right = left + width;\n        const bottom = top + height;\n        const rectRight = rectLeft + rectWidth;\n        const rectBottom = rectTop + rectHeight;\n        const testLeft = Math.max(rectLeft, left);\n        const testRight = Math.min(rectRight, right);\n        const testTop = Math.max(rectTop, top);\n        const testBottom = Math.min(rectBottom, bottom);\n\n        if (testRight < testLeft || testBottom < testTop) {\n            return 0;\n        }\n\n        const rectSize = (Math.min(rectRight, right) - Math.max(left, rectLeft))\n            * (Math.min(rectBottom, bottom) - Math.max(rectTop, top));\n\n        return Math.min(100, (testRight - testLeft) * (testBottom - testTop) / rectSize * 100);\n    }\n    /**\n     * Whether the coordinates are inside Moveable\n     * @method Moveable#isInside\n     * @param - x coordinate\n     * @param - y coordinate\n     * @return - True if the coordinate is in moveable or false\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * document.body.addEventListener(\"mousedown\", e => {\n     *     if (moveable.isInside(e.clientX, e.clientY)) {\n     *          console.log(\"inside\");\n     *     }\n     * });\n     */\n    public isInside(clientX: number, clientY: number) {\n        const { pos1, pos2, pos3, pos4, target, targetClientRect } = this.state;\n\n        if (!target) {\n            return false;\n        }\n        const { left, top } = targetClientRect;\n        const pos = [clientX - left, clientY - top];\n\n        return isInside(pos, pos1, pos2, pos3, pos4);\n    }\n    /**\n     * If the width, height, left, and top of all elements change, update the shape of the moveable.\n     * @method Moveable#updateRect\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * window.addEventListener(\"resize\", e => {\n     *     moveable.updateRect();\n     * });\n     */\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        const props = this.props;\n        const parentMoveable = props.parentMoveable;\n        const state = this.state;\n        const target = (state.target || this.props.target) as HTMLElement | SVGElement;\n        const container = this.getContainer();\n        const rootContainer = parentMoveable\n            ? parentMoveable.props.rootContainer\n            : props.rootContainer;\n        this.updateState(\n            getTargetInfo(this.controlBox && this.controlBox.getElement(),\n                target, container, container,\n                rootContainer || container, isTarget ? state : undefined),\n            parentMoveable ? false : isSetState,\n        );\n    }\n    public updateEvent(prevProps: MoveableManagerProps) {\n        const controlBoxElement = this.controlBox.getElement();\n        const hasTargetAble = this.targetAbles.length;\n        const hasControlAble = this.controlAbles.length;\n        const props = this.props;\n        const target = props.dragTarget || props.target;\n        const prevTarget = prevProps.dragTarget || prevProps.target;\n        const dragArea = props.dragArea;\n        const prevDragArea = prevProps.dragArea;\n        const isTargetChanged = !dragArea && prevTarget !== target;\n        const isUnset = (!hasTargetAble && this.targetGesto)\n            || isTargetChanged\n            || prevDragArea !== dragArea;\n\n        if (isUnset) {\n            unset(this, \"targetGesto\");\n            this.updateState({ gesto: null });\n        }\n        if (!hasControlAble) {\n            unset(this, \"controlGesto\");\n        }\n\n        if (target && hasTargetAble && !this.targetGesto) {\n            this.targetGesto = getTargetAbleGesto(this, target!, \"\");\n        }\n        if (!this.controlGesto && hasControlAble) {\n            this.controlGesto = getAbleGesto(this, controlBoxElement, \"controlAbles\", \"Control\");\n        }\n        if (isUnset) {\n            this.unsetAbles();\n        }\n    }\n    /**\n     * Check if the moveable state is being dragged.\n     * @method Moveable#isDragging\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // false\n     * console.log(moveable.isDragging());\n     *\n     * moveable.on(\"drag\", () => {\n     *   // true\n     *   console.log(moveable.isDragging());\n     * });\n     */\n    public isDragging() {\n        return (this.targetGesto ? this.targetGesto.isFlag() : false)\n            || (this.controlGesto ? this.controlGesto.isFlag() : false);\n    }\n    /**\n     * If the width, height, left, and top of the only target change, update the shape of the moveable.\n     * @method Moveable#updateTarget\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.updateTarget();\n     */\n    public updateTarget(type?: \"Start\" | \"\" | \"End\") {\n        this.updateRect(type, true);\n    }\n    /**\n     * You can get the vertex information, position and offset size information of the target based on the container.\n     * @method Moveable#getRect\n     * @return - The Rect Info\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * const rectInfo = moveable.getRect();\n     */\n    public getRect(): RectInfo {\n        const state = this.state;\n        const poses = getAbsolutePosesByState(this.state);\n        const [pos1, pos2, pos3, pos4] = poses;\n        const rect = getRect(poses);\n        const {\n            width: offsetWidth,\n            height: offsetHeight,\n        } = state;\n        const {\n            width,\n            height,\n            left,\n            top,\n        } = rect;\n        const statePos = [state.left, state.top];\n        const origin = plus(statePos, state.origin);\n        const beforeOrigin = plus(statePos, state.beforeOrigin);\n        const transformOrigin = state.transformOrigin;\n\n        return {\n            width,\n            height,\n            left,\n            top,\n            pos1,\n            pos2,\n            pos3,\n            pos4,\n            offsetWidth,\n            offsetHeight,\n            beforeOrigin,\n            origin,\n            transformOrigin,\n            rotation: this.getRotation(),\n        };\n    }\n    public getRotation() {\n        const {\n            pos1,\n            pos2,\n            direction,\n        } = this.state;\n\n        let deg = getRad(pos1, pos2) / Math.PI * 180;\n\n        deg = direction >= 0 ? deg : 180 - deg;\n        deg = deg >= 0 ? deg : 360 + deg;\n\n        return deg;\n    }\n    /**\n     * Request able through a method rather than an event.\n     * At the moment of execution, requestStart is executed,\n     * and then request and requestEnd can be executed through Requester.\n     * @method Moveable#request\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Draggable.html#request|Draggable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Resizable.html#request|Resizable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Scalable.html#request|Scalable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.Rotatable.html#request|Rotatable Requester}\n     * @see {@link https://daybrush.com/moveable/release/latest/doc/Moveable.OriginDraggable.html#request|OriginDraggable Requester}\n     * @param - ableName\n     * @param - request to be able params.\n     * @param - If isInstant is true, request and requestEnd are executed immediately.\n     * @return - Able Requester. If there is no request in able, nothing will work.\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * // Instantly Request (requestStart - request - requestEnd)\n     * moveable.request(\"draggable\", { deltaX: 10, deltaY: 10 }, true);\n     *\n     * // Start move\n     * const requester = moveable.request(\"draggable\");\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.request({ deltaX: 10, deltaY: 10 });\n     * requester.requestEnd();\n     */\n    public request(ableName: string, param: IObject<any> = {}, isInstant?: boolean): Requester {\n        const { ables, groupable } = this.props as any;\n        const requsetAble: Able = ables!.filter((able: Able) => able.name === ableName)[0];\n\n        if (this.isDragging() || !requsetAble || !requsetAble.request) {\n            return {\n                request() {\n                    return this;\n                },\n                requestEnd() {\n                    return this;\n                },\n            };\n        }\n        const self = this;\n        const ableRequester = requsetAble.request(this);\n\n        const requestInstant = isInstant || param.isInstant;\n        const ableType = ableRequester.isControl ? \"controlAbles\" : \"targetAbles\";\n        const eventAffix = `${(groupable ? \"Group\" : \"\")}${ableRequester.isControl ? \"Control\" : \"\"}`;\n\n        const requester = {\n            request(ableParam: IObject<any>) {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"\", {\n                    ...ableRequester.request(ableParam),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n            requestEnd() {\n                triggerAble(self, ableType, \"drag\", eventAffix, \"End\", {\n                    ...ableRequester.requestEnd(),\n                    requestAble: ableName,\n                    isRequest: true,\n                }, requestInstant);\n                return this;\n            },\n        };\n\n        triggerAble(self, ableType, \"drag\", eventAffix, \"Start\", {\n            ...ableRequester.requestStart(param),\n            requestAble: ableName,\n            isRequest: true,\n        }, requestInstant);\n\n        return requestInstant ? requester.request(param).requestEnd() : requester;\n    }\n    /**\n     * Remove the Moveable object and the events.\n     * @method Moveable#destroy\n     * @example\n     * import Moveable from \"moveable\";\n     *\n     * const moveable = new Moveable(document.body);\n     *\n     * moveable.destroy();\n     */\n    public destroy(): void {\n        this.componentWillUnmount();\n    }\n    public updateRenderPoses() {\n        const state = this.state;\n        const props = this.props;\n        const {\n            beforeOrigin, transformOrigin,\n            allMatrix, is3d, pos1, pos2, pos3, pos4,\n            left: stateLeft, top: stateTop,\n        } = state;\n        const {\n            left = 0,\n            top = 0,\n            bottom = 0,\n            right = 0,\n        } = (props.padding || {}) as PaddingBox;\n        const n = is3d ? 4 : 3;\n        const absoluteOrigin = (props as any).groupable ? beforeOrigin : plus(beforeOrigin, [stateLeft, stateTop]);\n\n        state.renderPoses = [\n            plus(pos1, caculatePadding(allMatrix, [-left, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos2, caculatePadding(allMatrix, [right, -top], transformOrigin, absoluteOrigin, n)),\n            plus(pos3, caculatePadding(allMatrix, [-left, bottom], transformOrigin, absoluteOrigin, n)),\n            plus(pos4, caculatePadding(allMatrix, [right, bottom], transformOrigin, absoluteOrigin, n)),\n        ];\n    }\n    public checkUpdate() {\n        const { target, container, parentMoveable } = this.props;\n        const {\n            target: stateTarget,\n            container: stateContainer,\n        } = this.state;\n\n        if (!stateTarget && !target) {\n            return;\n        }\n        this.updateAbles();\n\n        const isChanged = !equals(stateTarget, target) || !equals(stateContainer, container);\n\n        if (!isChanged) {\n            return;\n        }\n\n        this.updateState({ target, container });\n\n        if (!parentMoveable && (container || this.controlBox)) {\n            this.updateRect(\"End\", false, false);\n        }\n    }\n    public triggerEvent(name: string, e: any): any {\n        const callback = (this.props as any)[name];\n\n        return callback && callback(e);\n    }\n    protected unsetAbles() {\n        if (this.targetAbles.filter(able => {\n            if (able.unset) {\n                able.unset(this);\n                return true;\n            }\n            return false;\n        }).length) {\n            this.forceUpdate();\n        }\n    }\n    protected updateAbles(\n        ables: Able[] = this.props.ables!,\n        eventAffix: string = \"\",\n    ) {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const enabledAbles = ables!.filter(able => able && (able.always || props[able.name]));\n\n        const dragStart = `drag${eventAffix}Start` as \"dragStart\";\n        const pinchStart = `pinch${eventAffix}Start` as \"pinchStart\";\n        const dragControlStart = `drag${eventAffix}ControlStart` as \"dragControlStart\";\n\n        const targetAbles = filterAbles(enabledAbles, [dragStart, pinchStart], triggerAblesSimultaneously);\n        const controlAbles = filterAbles(enabledAbles, [dragControlStart], triggerAblesSimultaneously);\n\n        this.targetAbles = targetAbles;\n        this.controlAbles = controlAbles;\n    }\n    protected updateState(nextState: any, isSetState?: boolean) {\n        if (isSetState) {\n            this.setState(nextState);\n        } else {\n            const state = this.state;\n\n            for (const name in nextState) {\n                (state as any)[name] = nextState[name];\n            }\n        }\n    }\n    protected getEnabledAbles() {\n        const props = this.props as any;\n        const ables: Able[] = props.ables!;\n        return ables.filter(able => able && props[able.name]);\n    }\n    protected renderAbles() {\n        const props = this.props as any;\n        const triggerAblesSimultaneously = props.triggerAblesSimultaneously;\n        const Renderer = { createElement: React.createElement };\n\n        return groupByMap(flat<any>(\n            filterAbles(this.getEnabledAbles(), [\"render\"], triggerAblesSimultaneously).map(({ render }) => {\n                return render!(this, Renderer) || [];\n            })).filter(el => el), ({ key }) => key).map(group => group[0]);\n    }\n    protected updateCheckInput() {\n        this.targetGesto && (this.targetGesto.options.checkInput = this.props.checkInput);\n    }\n}\n\n/**\n * The target to indicate Moveable Control Box.\n * @name Moveable#target\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n */\n/**\n * Zooms in the elements of a moveable. (default: 1)\n * @name Moveable#zoom\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.zoom = 2;\n */\n\n/**\n * Resize, Scale Events at edges\n * @name Moveable#edge\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.edge = true;\n */\n\n/**\n * You can specify the className of the moveable controlbox. (default: \"\")\n * @name Moveable#className\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   className: \"\",\n * });\n *\n * moveable.className = \"moveable1\";\n */\n\n/**\n * The target(s) to drag Moveable target(s) (default: target)\n * @name Moveable#dragTarget\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body);\n * moveable.target = document.querySelector(\".target\");\n * moveable.dragTarget = document.querySelector(\".dragTarget\");\n */\n\n/**\n * `renderStart` event occurs at the first start of all events.\n * @memberof Moveable\n * @event renderStart\n * @param {Moveable.OnRenderStart} - Parameters for the `renderStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderStart\", ({ target }) => {\n *     console.log(\"onRenderStart\", target);\n * });\n */\n\n/**\n * `render` event occurs before the target is drawn on the screen.\n * @memberof Moveable\n * @event render\n * @param {Moveable.OnRender} - Parameters for the `render` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"render\", ({ target }) => {\n *     console.log(\"onRender\", target);\n * });\n */\n\n/**\n * `renderEnd` event occurs at the end of all events.\n * @memberof Moveable\n * @event renderEnd\n * @param {Moveable.OnRenderEnd} - Parameters for the `renderEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"renderEnd\", ({ target }) => {\n *     console.log(\"onRenderEnd\", target);\n * });\n */\n\n/**\n * `renderGroupStart` event occurs at the first start of all events in group.\n * @memberof Moveable\n * @event renderGroupStart\n * @param {Moveable.OnRenderGroupStart} - Parameters for the `renderGroupStart` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupStart\", ({ targets }) => {\n *     console.log(\"onRenderGroupStart\", targets);\n * });\n */\n\n/**\n * `renderGroup` event occurs before the target is drawn on the screen in group.\n * @memberof Moveable\n * @event renderGroup\n * @param {Moveable.OnRenderGroup} - Parameters for the `renderGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroup\", ({ targets }) => {\n *     console.log(\"onRenderGroup\", targets);\n * });\n */\n\n/**\n * `renderGroupEnd` event occurs at the end of all events in group.\n * @memberof Moveable\n * @event renderGroupEnd\n * @param {Moveable.OnRenderGroupEnd} - Parameters for the `renderGroupEnd` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"renderGroupEnd\", ({ targets }) => {\n *     console.log(\"onRenderGroupEnd\", targets);\n * });\n */\n","import { refs } from \"framework-utils\";\nimport MoveableManager from \"../MoveableManager\";\nimport { Renderer, MoveableGroupInterface } from \"../types\";\n\nexport default {\n    name: \"groupable\",\n    props: {\n        defaultGroupRotate: Number,\n        defaultGroupOrigin: String,\n        groupable: Boolean,\n    } as const,\n    events: {} as const,\n    render(moveable: MoveableGroupInterface, React: Renderer): any[] {\n        const targets = moveable.props.targets || [];\n\n        moveable.moveables = [];\n        const { left, top } = moveable.state;\n        const position = { left, top };\n\n        return targets.map((target, i) => {\n            return <MoveableManager\n                key={\"moveable\" + i}\n                ref={refs(moveable, \"moveables\", i)}\n                target={target}\n                origin={false}\n                cssStyled={moveable.props.cssStyled}\n                parentMoveable={moveable}\n                parentPosition={position}\n            />;\n        });\n    },\n};\n","import {\n    MoveableManagerInterface, MoveableGroupInterface,\n    ClickableProps, OnClick, OnClickGroup\n} from \"../types\";\nimport { triggerEvent, fillParams } from \"../utils\";\nimport { findIndex } from \"@daybrush/utils\";\n\nexport default {\n    name: \"clickable\",\n    props: {} as const,\n    events: {\n        onClick: \"click\",\n        onClickGroup: \"clickGroup\",\n    } as const,\n    always: true,\n    dragStart() {},\n    dragGroupStart(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        e.datas.inputTarget = e.inputEvent && e.inputEvent.target;\n    },\n    dragEnd(moveable: MoveableManagerInterface<ClickableProps>, e: any) {\n        const target = moveable.state.target!;\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n        ) {\n            return;\n        }\n        const containsTarget = target.contains(inputTarget);\n\n        triggerEvent<ClickableProps>(moveable, \"onClick\", fillParams<OnClick>(moveable, e, {\n            isDouble: e.isDouble,\n            inputTarget,\n            isTarget: target === inputTarget,\n            containsTarget,\n        }));\n    },\n    dragGroupEnd(moveable: MoveableGroupInterface<ClickableProps>, e: any) {\n        const inputEvent = e.inputEvent;\n        const inputTarget = e.inputTarget;\n\n        if (\n            !inputEvent || !inputTarget || e.isDrag\n            || moveable.isMoveableElement(inputTarget)\n            // External event duplicate target or dragAreaElement\n            || e.datas.inputTarget === inputTarget\n        ) {\n            return;\n        }\n        const targets = moveable.props.targets!;\n        let targetIndex = targets.indexOf(inputTarget);\n        const isTarget = targetIndex > -1;\n        let containsTarget = false;\n\n        if (targetIndex === -1) {\n            targetIndex = findIndex(targets, parentTarget => parentTarget.contains(inputTarget));\n            containsTarget = targetIndex > -1;\n        }\n\n        triggerEvent<ClickableProps>(moveable, \"onClickGroup\", fillParams<OnClickGroup>(moveable, e, {\n            isDouble: e.isDouble,\n            targets,\n            inputTarget,\n            targetIndex,\n            isTarget,\n            containsTarget,\n        }));\n    },\n} as const;\n\n/**\n * When you click on the element, the `click` event is called.\n * @memberof Moveable\n * @event click\n * @param {Moveable.OnClick} - Parameters for the `click` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: document.querySelector(\".target\"),\n * });\n * moveable.on(\"click\", ({ hasTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", target, hasTarget, containsTarget, targetIndex);\n * });\n */\n\n/**\n * When you click on the element inside the group, the `clickGroup` event is called.\n * @memberof Moveable\n * @event clickGroup\n * @param {Moveable.OnClickGroup} - Parameters for the `clickGroup` event\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *     target: [].slice.call(document.querySelectorAll(\".target\")),\n * });\n * moveable.on(\"clickGroup\", ({ inputTarget, isTarget, containsTarget, targetIndex }) => {\n *     // If you click on an element other than the target and not included in the target, index is -1.\n *     console.log(\"onClickGroup\", inputTarget, isTarget, containsTarget, targetIndex);\n * });\n */\n","import Pinchable from \"./Pinchable\";\nimport Rotatable from \"./Rotatable\";\nimport Draggable from \"./Draggable\";\nimport Resizable from \"./Resizable\";\nimport Scalable from \"./Scalable\";\nimport Warpable from \"./Warpable\";\nimport Snappable from \"./Snappable\";\nimport DragArea from \"./DragArea\";\nimport Origin from \"./Origin\";\nimport Scrollable from \"./Scrollable\";\nimport Default from \"./Default\";\nimport Padding from \"./Padding\";\nimport Clippable from \"./Clippable\";\nimport OriginDraggable from \"./OriginDraggable\";\nimport Roundable from \"./Roundable\";\nimport { UnionToIntersection } from \"../types\";\nimport { invertObject } from \"../utils\";\nimport Groupable from \"./Groupable\";\nimport BeforeRenderable from \"./BeforeRenderable\";\nimport Renderable from \"./Renderable\";\nimport Clickable from \"./Clickable\";\n\nexport const MOVEABLE_ABLES = /*#__PURE__*/[\n    BeforeRenderable,\n    Default, Snappable, Pinchable, Draggable, Rotatable,\n    Resizable, Scalable, Warpable, Scrollable, Padding, Origin, OriginDraggable,\n    Clippable, Roundable, Groupable,\n    Clickable,\n    DragArea,\n    Renderable,\n] as const;\n\nexport const MOVEABLE_EVENTS_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.events};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"events\"]>;\nexport const MOVEABLE_PROPS_MAP = /*#__PURE__*/MOVEABLE_ABLES.reduce((current, able) => {\n    return {...current, ...able.props};\n}, {}) as UnionToIntersection<typeof MOVEABLE_ABLES[number][\"props\"]>;\n\nexport const MOVEABLE_EVENTS_MAP = /*#__PURE__*/invertObject(MOVEABLE_EVENTS_PROPS_MAP);\nexport const MOVEABLE_EVENTS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_EVENTS_MAP);\nexport const MOVEABLE_PROPS: string[] = /*#__PURE__*/Object.keys(MOVEABLE_PROPS_MAP);\n","import MoveableManager from \"./MoveableManager\";\nimport { GroupableProps, MoveableManagerProps, RectInfo } from \"./types\";\nimport ChildrenDiffer from \"@egjs/children-differ\";\nimport { getAbleGesto, getTargetAbleGesto } from \"./gesto/getAbleGesto\";\nimport Groupable from \"./ables/Groupable\";\nimport { MIN_NUM, MAX_NUM, TINY_NUM } from \"./consts\";\nimport { getTargetInfo, throttle, getAbsolutePosesByState, equals } from \"./utils\";\nimport { plus, rotate } from \"./matrix\";\n\nfunction getMaxPos(poses: number[][][], index: number) {\n    return Math.max(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.max(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getMinPos(poses: number[][][], index: number) {\n    return Math.min(...poses.map(([pos1, pos2, pos3, pos4]) => {\n        return Math.min(pos1[index], pos2[index], pos3[index], pos4[index]);\n    }));\n}\nfunction getGroupRect(moveables: MoveableManager[], rotation: number) {\n    if (!moveables.length) {\n        return [0, 0, 0, 0];\n    }\n\n    const moveablePoses = moveables.map(({ state }) => getAbsolutePosesByState(state));\n    let minX = MAX_NUM;\n    let minY = MAX_NUM;\n    let groupWidth = 0;\n    let groupHeight = 0;\n    const fixedRotation = throttle(rotation, TINY_NUM);\n\n    if (fixedRotation % 90) {\n        const rad = rotation / 180 * Math.PI;\n        const a1 = Math.tan(rad);\n        const a2 = -1 / a1;\n        const b1s = [MIN_NUM, MAX_NUM];\n        const b2s = [MIN_NUM, MAX_NUM];\n\n        moveablePoses.forEach(poses => {\n            poses.forEach(pos => {\n                // ax + b = y\n                // ㅠ = y - ax\n                const b1 = pos[1] - a1 * pos[0];\n                const b2 = pos[1] - a2 * pos[0];\n\n                b1s[0] = Math.max(b1s[0], b1);\n                b1s[1] = Math.min(b1s[1], b1);\n                b2s[0] = Math.max(b2s[0], b2);\n                b2s[1] = Math.min(b2s[1], b2);\n            });\n        });\n\n        b1s.forEach(b1 => {\n            // a1x + b1 = a2x + b2\n            b2s.forEach(b2 => {\n                // (a1 - a2)x = b2 - b1\n                const x = (b2 - b1) / (a1 - a2);\n                const y = a1 * x + b1;\n\n                minX = Math.min(minX, x);\n                minY = Math.min(minY, y);\n            });\n        });\n        const rotatePoses = moveablePoses.map(([pos1, pos2, pos3, pos4]) => {\n\n            return [\n                rotate(pos1, -rad),\n                rotate(pos2, -rad),\n                rotate(pos3, -rad),\n                rotate(pos4, -rad),\n            ];\n        });\n        groupWidth = getMaxPos(rotatePoses, 0) - getMinPos(rotatePoses, 0);\n        groupHeight = getMaxPos(rotatePoses, 1) - getMinPos(rotatePoses, 1);\n\n    } else {\n        minX = getMinPos(moveablePoses, 0);\n        minY = getMinPos(moveablePoses, 1);\n        groupWidth = getMaxPos(moveablePoses, 0) - minX;\n        groupHeight = getMaxPos(moveablePoses, 1) - minY;\n\n        if (fixedRotation % 180) {\n            const changedWidth = groupWidth;\n\n            groupWidth = groupHeight;\n            groupHeight = changedWidth;\n        }\n    }\n    return [minX, minY, groupWidth, groupHeight];\n}\n/**\n * @namespace Moveable.Group\n * @description You can make targets moveable.\n */\nclass MoveableGroup extends MoveableManager<GroupableProps> {\n    public static defaultProps = {\n        ...MoveableManager.defaultProps,\n        transformOrigin: [\"50%\", \"50%\"],\n        groupable: true,\n        dragArea: true,\n        keepRatio: true,\n        targets: [],\n        defaultGroupRotate: 0,\n        defaultGroupOrigin: \"50% 50%\",\n    };\n    public differ: ChildrenDiffer<HTMLElement | SVGElement> = new ChildrenDiffer();\n    public moveables: MoveableManager[] = [];\n    public transformOrigin = \"50% 50%\";\n\n    public updateEvent(prevProps: MoveableManagerProps<GroupableProps>) {\n        const state = this.state;\n        const props = this.props;\n\n        if (!state.target) {\n            state.target = this.areaElement;\n\n            this.controlBox.getElement().style.display = \"block\";\n            this.targetGesto = getTargetAbleGesto(this, state.target, \"Group\");\n            this.controlGesto = getAbleGesto(this, this.controlBox.getElement(), \"controlAbles\", \"GroupControl\");\n        }\n        const isContainerChanged = !equals(prevProps.container, props.container);\n\n        if (isContainerChanged) {\n            state.container = props.container;\n        }\n        const { added, changed, removed } = this.differ.update(props.targets!);\n\n        if (isContainerChanged || added.length || changed.length || removed.length) {\n            this.updateRect();\n        }\n    }\n    public checkUpdate() {\n        this.updateAbles();\n    }\n\n    public updateRect(type?: \"Start\" | \"\" | \"End\", isTarget?: boolean, isSetState: boolean = true) {\n        if (!this.controlBox) {\n            return;\n        }\n        this.moveables.forEach(moveable => {\n            moveable.updateRect(type, false, false);\n        });\n\n        const state = this.state;\n        const props = this.props;\n        const target = state.target! || props.target!;\n\n        if (!isTarget || (type !== \"\" && props.updateGroup)) {\n            // reset rotataion\n            this.rotation = props.defaultGroupRotate!;\n            this.transformOrigin = props.defaultGroupOrigin || \"50% 50%\";\n            this.scale = [1, 1];\n\n        }\n        const rotation = this.rotation;\n        const scale = this.scale;\n        const [left, top, width, height] = getGroupRect(this.moveables, rotation);\n\n        // tslint:disable-next-line: max-line-length\n        target.style.cssText += `left:0px;top:0px; transform-origin: ${this.transformOrigin}; width:${width}px; height:${height}px;transform:rotate(${rotation}deg)`\n            + ` scale(${scale[0] >= 0 ? 1 : -1}, ${scale[1] >= 0 ? 1 : -1})`;\n        state.width = width;\n        state.height = height;\n\n        const container = this.getContainer();\n        const info = getTargetInfo(\n            this.controlBox.getElement(),\n            target,\n            this.controlBox.getElement(),\n            this.getContainer(),\n            this.props.rootContainer || container,\n            state,\n        );\n        const pos = [info.left!, info.top!];\n        [\n            info.pos1,\n            info.pos2,\n            info.pos3,\n            info.pos4,\n        ] = getAbsolutePosesByState(info as Required<typeof info>);\n        info.origin = plus(pos, info.origin!);\n        info.beforeOrigin = plus(pos, info.beforeOrigin!);\n\n        const clientRect = info.targetClientRect!;\n\n        clientRect.top += (top - info.top!) - state.top;\n        clientRect.left += (left - info.left!) - state.left;\n\n        const direction = scale[0] * scale[1] > 0 ? 1 : -1;\n        this.updateState(\n            {\n                ...info,\n                direction,\n                beforeDirection: direction,\n                left: left - info.left!,\n                top: top - info.top!,\n            },\n            isSetState,\n        );\n    }\n    public getRect(): RectInfo {\n        return {\n            ...super.getRect(),\n            children: this.moveables.map(child => child.getRect()),\n        };\n    }\n    public triggerEvent(name: string, e: any, isManager?: boolean): any {\n        if (isManager || name.indexOf(\"Group\") > -1) {\n            return super.triggerEvent(name as any, e);\n        }\n    }\n    protected updateAbles() {\n        super.updateAbles([...this.props.ables!, Groupable], \"Group\");\n    }\n}\n\n/**\n * Sets the initial rotation of the group. (default 0)\n * @name Moveable.Group#defaultGroupRotate\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupRotate: 0,\n * });\n *\n * moveable.defaultGroupRotate = 40;\n */\n\n/**\n * Sets the initial origin of the group. (default 0)\n * @name Moveable.Group#defaultGroupOrigin\n * @example\n * import Moveable from \"moveable\";\n *\n * const moveable = new Moveable(document.body, {\n *   target: [].slice.call(document.querySelectorAll(\".target\")),\n *   defaultGroupOrigin: \"50% 50%\",\n * });\n *\n * moveable.defaultGroupOrigin = \"20% 40%\";\n */\nexport default MoveableGroup;\n","import * as React from \"react\";\nimport { Able, MoveableInterface, GroupableProps, MoveableDefaultProps } from \"./types\";\nimport MoveableManager from \"./MoveableManager\";\nimport MoveableGroup from \"./MoveableGroup\";\nimport { ref, withMethods, prefixCSS } from \"framework-utils\";\nimport { getKeys, IObject, isString } from \"@daybrush/utils\";\nimport { MOVEABLE_METHODS, PREFIX, MOVEABLE_CSS } from \"./consts\";\nimport Default from \"./ables/Default\";\nimport Groupable from \"./ables/Groupable\";\nimport DragArea from \"./ables/DragArea\";\nimport styled from \"react-css-styled\";\nimport { getRefTargets, getElementTargets } from \"./utils\";\n\nexport class InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & T> {\n    public static defaultAbles: Able[] = [];\n    public static defaultStyled: any = null;\n    public static makeStyled() {\n        const cssMap: IObject<boolean> = {};\n\n        const ables = this.getTotalAbles();\n        ables.forEach(({ css }: Able) => {\n            if (!css) {\n                return;\n            }\n            css.forEach(text => {\n                cssMap[text] = true;\n            });\n        });\n        const style = getKeys(cssMap).join(\"\\n\");\n\n        this.defaultStyled = styled(\"div\", prefixCSS(PREFIX, MOVEABLE_CSS + style));\n    }\n    public static getTotalAbles(): Able[] {\n\n        return [Default, Groupable, DragArea, ...this.defaultAbles];\n    }\n    @withMethods(MOVEABLE_METHODS)\n    public moveable!: MoveableManager | MoveableGroup;\n    public refTargets: Array<HTMLElement | SVGElement | string | undefined | null> = [];\n    public selectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n    public render() {\n        const moveableContructor = (this.constructor as typeof InitialMoveable);\n\n        if (!moveableContructor.defaultStyled) {\n            moveableContructor.makeStyled();\n        }\n        const refTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        const elementTargets = getElementTargets(refTargets, this.selectorMap);\n\n        this.refTargets = refTargets;\n\n        const isGroup = elementTargets.length > 1;\n        const totalAbles = moveableContructor.getTotalAbles();\n        const userAbles = this.props.ables! || [];\n        const ables = [\n            ...totalAbles,\n            ...userAbles,\n        ];\n\n        if (isGroup) {\n            return <MoveableGroup key=\"group\" ref={ref(this, \"moveable\")}\n                cssStyled={moveableContructor.defaultStyled}\n                {...this.props}\n                target={null}\n                targets={elementTargets}\n                ables={ables} />;\n        } else {\n            return <MoveableManager<any> key=\"single\" ref={ref(this, \"moveable\")}\n                cssStyled={moveableContructor.defaultStyled}\n                {...this.props}\n                target={elementTargets[0]}\n                ables={ables} />;\n        }\n    }\n    public componentDidMount() {\n        this.updateRefs();\n    }\n    public componentDidUpdate() {\n        this.updateRefs();\n    }\n    public updateRefs(isReset?: boolean) {\n        const refTargets = getRefTargets((this.props.target || this.props.targets) as any);\n        let isUpdate = this.refTargets.some((target, i) => {\n            const nextTarget = refTargets[i];\n\n            if (!target && !nextTarget) {\n                return false;\n            } else if (target !== nextTarget) {\n                return true;\n            }\n            return false;\n        });\n        const selectorMap = isReset ? {} : this.selectorMap;\n        const nextSelectorMap: IObject<Array<HTMLElement | SVGElement>> = {};\n        this.refTargets.forEach(target => {\n            if (isString(target)) {\n                if (!selectorMap[target]) {\n                    isUpdate = true;\n                    nextSelectorMap[target] = [].slice.call(document.querySelectorAll(target));\n                } else {\n                    nextSelectorMap[target] = selectorMap[target];\n                }\n            }\n        });\n\n        this.selectorMap = nextSelectorMap;\n\n        if (isUpdate) {\n            this.forceUpdate();\n        }\n    }\n}\nexport interface InitialMoveable<T = {}>\n    extends React.PureComponent<MoveableDefaultProps & GroupableProps & T>, MoveableInterface {\n    setState(state: any, callback?: () => any): any;\n}\n","import { MoveableProps, Able } from \"./types\";\nimport { MOVEABLE_ABLES } from \"./ables/consts\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport default class Moveable<T = {}> extends InitialMoveable<MoveableProps & T> {\n    public static defaultAbles: Able[] = MOVEABLE_ABLES as any;\n}\n","import { Able } from \"./types\";\nimport { InitialMoveable } from \"./InitialMoveable\";\n\nexport function makeMoveable<T = {}>(\n    ables: Array<Able<T>>): typeof InitialMoveable & (new (...args: any[]) => InitialMoveable<T>) {\n    return class Moveable extends InitialMoveable<T> {\n        public static defaultAbles = ables;\n    };\n}\n"],"names":["getSVGCursor","scale","degree","getCursorCSS","x1","x2","degree45","Math","round","defaultCursor","agent","getAgent","IS_WEBKIT","browser","webkit","PREFIX","MOVEABLE_CSS","map","join","NEARBY_POS","TINY_NUM","MIN_SCALE","MAX_NUM","pow","MIN_NUM","DIRECTIONS","DIRECTION_INDEXES","n","s","w","e","nw","ne","sw","se","DIRECTION_ROTATIONS","MOVEABLE_METHODS","add","matrix","inverseMatrix","startIndex","fromIndex","k","i","x","fromX","swap","v","iv","divide","ignoreDimension","m","sqrt","length","newMatrix","slice","invert","createIdentityMatrix","identityIndex","j","targetStartIndex","targetIndex","target","transpose","getRad","pos1","pos2","distX","distY","rad","atan2","PI","getOrigin","originMatrix","fromTranslation","pos","convertPositionMatrix","convertDimension","min","multiplies","_i","matrixes","forEach","multiply","matrix2","l","average","nums","total","plus","nextPos","minus","convertCSStoMatrix","a","is2d","convertMatrixtoCSS","caculate","result","rotate","createRotateMatrix","cos","sin","createScaleMatrix","createOriginMatrix","origin","createWarpMatrix","pos0","pos3","nextPos0","nextPos1","nextPos2","nextPos3","x0","y0","y1","y2","x3","y3","u0","v0","u1","v1","u2","v2","u3","v3","h","multiply2","prefix","classNames","prefixNames","getTransformMatrix","transform","isObject","value","splitBracket","split","parseFloat","getAbsoluteMatrix","measureSVGSize","el","unit","isHorizontal","viewBox","getSVGViewBox","ownerSVGElement","getBeforeTransformOrigin","relativeOrigin","getTransformOrigin","getComputedStyle","o","_a","splitUnit","style","transformOrigin","getOffsetInfo","lastParent","isParent","body","document","parentElement","isEnd","position","isStatic","offsetParent","getOffsetPosInfo","container","isFixed","tagName","toLowerCase","offsetLeft","offsetTop","containerClientRect","documentElement","getBoundingClientRect","left","top","isSVG","isUndefined","hasOffset","targetOrigin","getSVGGraphicsOffset","offset","getMatrixStackInfo","is3d","targetTransformOrigin","targetMatrix","offsetContainer","matrixesLength","offsetPos","push","getSVGMatrix","_b","isOffsetEnd","parentClientLeft","parentClientTop","clientLeft","clientTop","scrollLeft","scrollTop","cacaulateElementInfo","rootContainer","isAbsolute3d","state","width","height","rotation","allResult","offsetWidth","offsetHeight","getSize","caculateMatrixStack","caculateMoveablePosition","allMatrix","getRotationRad","direction","rootMatrix","beforeMatrix","offsetMatrix","targetTransform","right","bottom","pos4","getElementInfo","prevTargetMatrix","rootMatrixes","isRoot3d","isNext3d","isSVGGraphicElement","originalContainer","endContainer","reverse","getSVGOffset","isMatrix3d","makeMatrixCSS","clientWidth","clientHeight","baseVal","y","viewBoxWidth","viewBoxHeight","scaleX","scaleY","preserveAspectRatio","align","meetOrSlice","svgOrigin","translate","xAlign","yAlign","floor","scaleDimension","max","scaleMatrix","getBBox","bbox","caculatePosition","caculatePoses","getRect","poses","posesX","posesY","rectWidth","rectHeight","caculateRect","absoluteMatrix","undefined","rect","rectLeft","rectTop","mat","_c","prevLeft","prevTop","prevWidth","prevHeight","posOrigin","prevOrigin","rectOrigin","count","inverseBeforeMatrix","mat2","_d","nextLeft","nextTop","distLeft","distTop","abs","p","_e","x4","y4","_f","originX","originY","center","pos1Rad","pos2Rad","getDistSize","vec","getDiagonalSize","getLineStyle","getControlTransform","reduce","prev","getCSSSize","window","isOffset","isBoxSizing","boxSizing","borderLeft","borderLeftWidth","borderRight","borderRightWidth","borderTop","borderTopWidth","borderBottom","borderBottomWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","getTargetInfo","moveableElement","parentContainer","beforeDirection","beforeOrigin","targetClientRect","resetClientRect","moveableClientRect","beforePosition","getClientRect","scrollWidth","scrollHeight","isExtends","getDirection","direciton","getAttribute","dir","indexOf","getAbsolutePoses","dist","getAbsolutePosesByState","roundSign","num","throttle","throttleArray","_","unset","self","name","getOrientationDirection","isInside","k1","k2","k3","k4","k5","k6","signs1","signs2","every","sign","fillParams","moveable","params","datas","nextParams","__assign","clientX","clientY","inputEvent","currentTarget","isStartEvent","lastEvent","fillEndParams","isDrag","isDouble","triggerEvent","isManager","pseudoElt","filterAbles","ables","methods","triggerAblesSimultaneously","enabledAbles","ableGroups","filter","able","some","method","ableGroup","getKeepRatioHeight","isWidth","ratio","getKeepRatioWidth","equals","a1","a2","selectValue","values","groupBy","arr","func","groups","groupKeys","index","groupKey","keyIndex","group","groupByMap","flat","cur","concat","maxOffset","args","sort","b","minOffset","caculateInversePosition","convertDragDist","caculatePadding","checkSize","targetSize","compareSize","isMax","size","caculateBoundSize","minSize","maxSize","keepRatio","between","minWidth","minHeight","maxWidth","maxHeight","convertCSSSize","isRelative","moveControlPos","controlPoses","isRect","sub","dists","directions","verticalDirection_1","horizontalDirection_1","controlPose","controlDir","isVertical","dirDir","dirHorizontal","dirVertical","getTinyDist","directionCondition","isRequest","requestAble","parentDirection","hasClass","invertObject","obj","nextObj","getTransform","transforms","beforeFunctionTexts","targetFunctionText","afterFunctionTexts","beforeFunctions","parse","targetFunctions","afterFunctions","beforeFunctionMatrix","toMat","targetFunctionMatrix","afterFunctionMatrix","targetFunction","isArrayFormat","isArray","getRefTargets","targets","userTargets","call","isString","current","getElementTargets","selectorMap","elementTargets","updateRect","props","pinchable","Boolean","events","onPinchStart","onPinch","onPinchEnd","onPinchGroupStart","onPinchGroup","onPinchGroupEnd","dragStart","pinchStart","angle","originalDatas","eventName","controlEventName","pinchAbles","controlAbles","canPinch","isPinch","ableEvent","parentRotate","snapRenderInfo","request","pinch","pinchScale","distance","parentDistance","pinchEnd","pinchGroupStart","pinchGroup","pinchGroupEnd","setCustomDrag","delta","isConvert","gesto","move","draggableDatas","draggable","parentEvent","client","isFlag","type","prevX","prevY","startX","startY","deltaX","deltaY","parentGesto","fillChildEvents","groupable","groupableDatas","childDatas","moveables","child","triggerChildGesto","isStart","match","childs","ev","childMoveable","childEvent","CustomGesto","childGestos","parentFlag","triggerChildAble","eachEvent","callback","caculatePointerDist","posX","posY","getDragDist","setDragStart","absoluteOrigin","startDragBeforeDist","startDragDist","resolveTransformEvent","event","functionName","transformIndex","nextTransforms","nextTransformAppendedIndexes","nextIndex","matFunctionName","targetAllTransform","beforeTransform","targetTansform","afterTransform","splice","isAppendTransform","convertTransformFormat","getTransformDist","getBeforeDragDist","bx","by","res","getTransfromMatrix","isAfter","nextTargetMatrix","res1","afterTargetMatrix","isBefore","getInverseDragDist","caculateTransformOrigin","prevSize","isNaN","measureRatio","getPosIndexesByDirection","indexes","getPosesByDirection","getPosByDirection","nextPoses","getPosByReverseDirection","getDist","startPos","getNextMatrix","getNextTransformMatrix","parseMat","fillTransformStartEvent","beforeRenderable","setTransform","startTransforms","splitSpace","setTransformIndex","setDefaultTransformIndex","info","startValue","functionValue","fillOriginalTransform","fillTransformEvent","nextTransform","drag","Draggable","getTranslateDist","fixedPosition","fixedDirection","nextMatrix","groupLeft","groupTop","nextFixedPosition","getDirectionOffset","getScaleDist","scaleDist","getOriginDirection","nextFixedOffset","getRotateDist","rotateDist","getResizeDist","nextOrigin","getStartDirection","baseDirection","getAbsoluteFixedPosition","getGapGuidelines","guidelines","snapThreshold","start","end","otherStart","otherEnd","totalGuidelines","otherIndex","otherType","elementGuidelines","guidelineType","element","sizes","guideline1","elementStart","elementEnd","guideline2Pos","guideline2Sizes","guideline2Element","targetStart","targetEnd","gap","canSnap","gapGuidelines","centerPos","addGuidelines","horizontalGuidelines","verticalGuidelines","getTotalGuidelines","containerHeight","containerWidth","snapHorizontal","snapVertical","snapGap","_g","checkMoveableSnapPoses","snapCenter","customSnapThreshold","snapElement","checkSnapPoses","options","vertical","checkSnap","horizontal","checkSnapKeepRatio","endPos","endX","endY","dx","dy","isBottom","isRight","verticalInfo","isSnap","horizontalInfo","verticalSnapInfo","horizontalSnapInfo","posInfos","getNearestSnapGuidelineInfo","isVerticalSnap","verticalGuideline","isHorizontalSnap","horizontalGuideline","horizontalPos","verticalPos","checkSnaps","isCenter","isSnapCenter","verticalNames","horizontalNames","snapInfo","guideline","posInfo","guidelineInfo","guidelineInfos","targetType","targetPoses","posType","snapPosInfos","targetPos","snapPosInfo","getSnapInfosByDirection","snapDirection","alignPoses","checkSnapBoundPriority","aDist","bDist","isBound","getNearOffsetInfo","offsets","aSign","bSign","aOffset","bOffset","isStartLine","dot","line","cx","cy","hitTestLine","test1","test2","isSameStartLine","dots","error","centerSign","checkInnerBoundDot","threshold","checkInnerBound","bounds","innerBounds","isAllBound","isVerticalBound","isHorizontalBound","leftLine","topLine","rightLine","bottomLine","isHorizontalStart","isVerticalStart","topBoundInfo","checkLineBoundCollision","bottomBoundInfo","leftBoundInfo","rightBoundInfo","isAllVerticalBound","isAllHorizontalBound","verticalOffset","horizontalOffset","boundLine","isRender","dot1","dot2","boundDot1","boundDot2","dy1","dx1","dy2","dx2","getInnerBoundInfo","lines","multiple","sizeOffset","getInnerBoundDragInfo","getCheckSnapLines","innerBoundInfo","widthOffsetInfo","heightOffsetInfo","getCheckSnapLineDirections","lineDirections","dir1","dir2","isBoundRotate","relativePoses","boundDots","getDistPointLine","solveReverseLine","checkRotateInnerBounds","prevPoses","relativeLeft","relativeRight","relativeTop","relativeBottom","dotInfos","lineRad","lineDist","dotDist","dotRad","distRad","acos","nextRad1","nextRad2","nextRad","checkInnerBoundPoses","horizontalPoses","verticalPoses","boundMap","checkBoundPoses","Infinity","nextBounds","checkBounds","checkBoundKeepRatio","startBoundPos","endBoundPos","minPos","maxPos","boundInfos","boundRect","boundRotate","boundPos","r","checkRotateBounds","relativeRad1","relativeRad2","caculateContainerPos","containerRect","clientPos","snapStart","containerLeft","containerTop","targetLeft","targetTop","elementLeft","elementTop","elementRight","elementBottom","enableSnap","hasGuidelines","ableName","snappable","solveNextOffset","solveEquation","widthOffset","heightOffset","getNextFixedPoses","fixedPos","getSnapBoundOffset","boundInfo","getSnapBound","checkSnapBoundsKeepRatio","horizontalBoundInfo","verticalBoundInfo","horizontalDist","verticalDist","checkMoveableSnapBounds","boundPoses","horizontalBoundInfos","verticalBoundInfos","snapIndex","snap","checkSnapBounds","guideines","normalized","checkMaxBounds","left_1","top_1","right_1","bottom_1","otherDirection","isCheckVertical","isCheckHorizontal","otherPos","verticalDirection","horizontalDirection","deg","nextOtherPos","getSnapBoundInfo","startDirection","endDirection","otherStartPos","otherEndPos","snapBoundInfo","otherHorizontalDist","otherHorizontalOffset","isOtherHorizontalBound","isOtherHorizontalSnap","otherVerticalDist","otherVerticalOffset","isOtherVerticalBound","isOtherVerticalSnap","getCheckSnapDirections","getSizeOffsetInfo","recheckSizeByTwoDirection","snapPos","nextWidthOffset","nextHeightOffset","nextWidth","nextHeight","checkSizeDist","getNextPoses","isWidthBound","isHeightBound","widthDist","heightDist","isGetWidthOffset","checkSnapRotate","checkSnapSize","checkSnapScale","sizeDist","snapOffset","startCheckSnapDrag","absolutePoses","checkThrottleDragRotate","throttleDragRotate","offsetX","offsetY","adjustPoses","adjustPos","prevDistY","checkSnapDrag","snapPoses","verticalSnapBoundInfo","horizontalSnapBoundInfo","verticalInnerBoundInfo","horizontalInnerBoundInfo","getSnapGuidelines","getElementGuidelineDist","elementPos","elementSize","relativePos","groupByElementGuidelines","groupInfos","groupInfo","find","groupElement","groupPos","renderElementGroup","clientSize","isDisplaySnapDigit","snapDigit","snapDistFormat","React","directionName","posName1","posName2","sizeName","isFirstRenderSize","linePos","lineSize","isRenderSize","snapSize","toFixed","className","key","renderSnapPoses","renderGuidelines","targetPos1","targetPos2","getGapGuidelinesToStart","targetSizes","guidelinePos","absGap","gapPos","aPos","bPos","gapSizes","gapGuideline","renderPos","getGapGuidelinesToEnd","renderGapGuidelines","addBoundGuidelines","verticalSnapPoses","horizontalSnapPoses","externalBounds","verticalInnerBoundPoses","horizontalInnerBoundPoses","innerPos","findIndex","Array","Number","Object","Function","onSnap","css","render","minLeft","minTop","containerPos","externalPoses","snapInfos","_h","hasExternalPoses","externalRect","middle","verticalPosInfos","horizontalPosInfos","elementHorizontalGroup","elementVerticalGroup","gapVerticalGuidelines","gapHorizontalGuidelines","allGuidelines","elements","gaps","dragEnd","dragControlCondition","rotatableDragControlCondtion","dragControlStart","dragControlEnd","dragGroupStart","dragGroupEnd","dragGroupControlStart","dragGroupControlEnd","throttleDrag","startDragRotate","onDragStart","onDrag","onDragEnd","onDragGroupStart","onDragGroup","onDragGroupEnd","dragInfo","targetGesto","prevDist","prevBeforeDist","set","startRect","parentMoveable","dragRotateRad","ry","rx","passDeltaX","passDistX","passDeltaY","passDistY","beforeTranslate","beforeDist","beforeDelta","dragGroup","isControl","requestStart","requestEnd","setRotateStartInfo","startAbsoluteOrigin","prevDeg","prevSnapDeg","startDeg","loop","getParentDeg","moveableRect","parentDist","getDeg","throttleRotate","prevLoop","absolutePrevSnapDeg","absoluteDeg","getRotateInfo","getPositions","rotationPosition","radPoses","isReverse","rotatable","String","onRotateStart","onRotate","onRotateEnd","onRotateGroupStart","onRotateGroup","onRotateGroupEnd","renderPoses","rotationRad","externalRotate","beforeInfo","afterInfo","controlRect","controlBox","getElement","rotatation","isRotate","dragControl","groupDelta","beforeRotate","inverseDist","inverseDelta","prevInverseDist","dragGroupControlCondition","parentLeft","parentTop","parentBeforeOrigin","childClient","groupClient","dragGroupControl","rotateMatrix","distRotate","startRotation","getRotation","deltaRotate","renderControls","defaultDirections","directionMap","directionRotation","renderLine","renderAllDirections","renderDiagonalDirections","resizable","throttleResize","renderDirections","onResizeStart","onResize","onResizeEnd","onResizeGroupStart","onResizeGroup","onResizeGroupEnd","edge","startOffsetWidth","startOffsetHeight","startWidth","startHeight","padding","fixedOriginalPosition","setMin","setMax","setOrigin","isResize","parentScale","parentKeepRatio","dragClient","sizeDirection","distWidth","distHeight","standardRad","ratioRad","signSize","snapDist","isNoSnap","dragControlAfter","errorWidth","errorHeight","isErrorWidth","isErrorHeight","originalX","originalY","deltaWidth","deltaHeight","scalable","throttleScale","onScaleStart","onScale","onScaleEnd","onScaleGroupStart","onScaleGroup","onScaleGroupEnd","isScale","dragDist","stateDirection","snapHeight","snapWidth","moveableScale","getMiddleLinePos","getTriangleRad","rad1","rad2","isValidPos","poses1","poses2","pi","warpable","onWarpStart","onWarp","onWarpEnd","linePosFrom1","linePosFrom2","linePosFrom3","linePosFrom4","linePosTo1","linePosTo2","linePosTo3","linePosTo4","inputTarget","warpTargetMatrix","targetInverseMatrix","prevMatrix","posIndexes","isWarp","selectedPoses","nearByPoses","afterMatrix","totalMatrix","AREA_PIECES","AREA_PIECE","AVOID","restoreStyle","areaElement","removeClass","cssText","renderPieces","dragArea","passDragArea","onClick","onClickGroup","ref","isDragArea","rects","children","nextElementSibling","addClass","getDefaultScrollPosition","scrollContainer","scrollable","scrollThreshold","getScrollPosition","onScroll","onScrollGroup","getContainer","dragScroll","DragScroll","gestoName","on","scrollBy","checkScroll","dragGroupContro","dragGroupControEnd","dragTarget","zoom","pinchThreshold","pinchOutside","checkInput","cspNonce","translateZ","paddingDirections","paddingPos1","paddingPos2","paddingPos3","paddingPos4","RADIUS_DIRECTIONS","caculateRatio","sumSize","sumRatio","HORIZONTAL_RADIUS_ORDER","VERTICAL_RADIUS_ORDER","HORIZONTAL_RADIUS_DIRECTIONS","VERTICAL_RADIUS_DIRECTIONS","getRadiusStyles","clipStyles","raws","rawPos","styles","getRadiusRange","horizontalRange","verticalRange","clipPose","getRadiusValues","splitIndex","splitLength","horizontalValues","verticalValues","nwValue","neValue","seValue","swValue","_j","wnValue","_k","enValue","_l","esValue","_m","wsValue","horizontalRawPoses","convertUnitSize","verticalRawPoses","nextHorizontalPoses","nextVerticalPoses","raw","removeRadiusPos","radiuslIndex","deleteCount","addRadiusPos","horizontalIndex","verticalIndex","radiusX","radiusY","startVerticalIndex","splitRadiusPoses","horizontals","verticals","CLIP_DIRECTIONS","CLIP_RECT_DIRECTIONS","getClipStyles","clipPath","clipRelative","clipType","clipPoses","isCircle","subWidth","subHeight","getRectPoses","xs","ys","dirx","diry","getClipPath","defaultClip","customClip","clipText","clip","clipPrefix","splitter","splitComma","xPos","yPos","radiusX_1","radiusY_1","radius","xRadius","yRadius","centerPos_1","roundIndex","rectLength","radiusValues","topValue","rightValue","_o","bottomValue","_p","leftValue","_q","_r","nextRight","nextBottom","radiusPoses","_s","posValue","addClipPath","clipEventType","clipStyle","removeClipPath","clippable","defaultClipPath","customClipPath","clipArea","dragWithClip","clipTargetBounds","clipVerticalGuidelines","clipHorizontalGuidelines","clipSnapThreshold","onClipStart","onClip","onClipEnd","clipPathState","snapBoundInfos","caculatedPos","controls","isInset","isPolygon","linePoses_1","to","from","clipLeft","clipTop","ellipseClipPath","piece","areaPoses","allWidth","allHeight","allLeft_1","allTop_1","directionType","snapPos1","snapPos2","isClipStart","isLine","isArea","parseInt","draggableData","isDragWithTarget","isAll","guidePoses","isEllipse","guideRect","guideXPoses","guideYPoses","rectPoses","rectDists_1","snapOffsetY","snapOffsetX","distSnapX","distSnapY","nextClipStyles","originDraggable","originRelative","onDragOriginStart","onDragOrigin","onDragOriginEnd","startOrigin","startTargetOrigin","isDragOrigin","distOrigin","nextRect","dragDelta","deltaOrigin","addBorderRadius","lineIndex","horizontalsLength","verticalsLength","getBorderRadius","borderRadius","triggerRoundEvent","roundRelative","borderRadiusState","roundable","onRoundStart","onRound","onRoundEnd","controlIndex","isRound","onBeforeRenderStart","onBeforeRender","onBeforeRenderEnd","onBeforeRenderGroupStart","onBeforeRenderGroup","onBeforeRenderGroupEnd","cssMatrix","resetTransform","fillDragStartParams","fillDragParams","_this","onRenderStart","onRender","onRenderEnd","onRenderGroupStart","onRenderGroup","onRenderGroupEnd","triggerAble","ableType","eventOperation","eventAffix","eventType","requestInstant","conditionName","isFirstStart","controlGesto","isGroup","BeforeRenderable","Renderable","requestAble_1","elementFromPoint","results","hasCondition","nextDatas","isUpdate","isForceEnd","isUnmounted","forceUpdate","getTargetAbleGesto","moveableTarget","startFunc","eventTarget","isMoveableElement","getAbleGesto","conditionFunctions","Gesto","stop","__extends","parentPosition","propsTarget","ControlBoxElement","checkUpdate","updateRenderPoses","stateTarget","groupTargets","isDisplay","isDragging","ableAttributes","Renderer","createElement","getEnabledAbles","renderAbles","updateEvent","updateCheckInput","prevProps","triggerDragStart","Element","clientRect","rectRight","rectBottom","testLeft","testRight","testTop","testBottom","rectSize","isTarget","isSetState","updateState","controlBoxElement","hasTargetAble","targetAbles","hasControlAble","prevTarget","prevDragArea","isTargetChanged","isUnset","unsetAbles","statePos","param","isInstant","requsetAble","ableRequester","requester","ableParam","componentWillUnmount","stateLeft","stateTop","stateContainer","updateAbles","isChanged","always","nextState","setState","MoveableManager","cssStyled","defaultGroupRotate","defaultGroupOrigin","refs","containsTarget","contains","parentTarget","MOVEABLE_ABLES","Default","Snappable","Pinchable","Rotatable","Resizable","Scalable","Warpable","Scrollable","Padding","Origin","OriginDraggable","Clippable","Roundable","Groupable","Clickable","DragArea","MOVEABLE_EVENTS_PROPS_MAP","MOVEABLE_PROPS_MAP","MOVEABLE_EVENTS_MAP","MOVEABLE_EVENTS","keys","MOVEABLE_PROPS","getMaxPos","getMinPos","getGroupRect","moveablePoses","minX","minY","groupWidth","groupHeight","fixedRotation","rad_1","a1_1","tan","a2_1","b1s_1","b2s_1","b1","b2","rotatePoses","changedWidth","ChildrenDiffer","display","isContainerChanged","differ","update","added","changed","removed","updateGroup","_super","MoveableGroup","defaultProps","InitialMoveable","cssMap","getTotalAbles","text","getKeys","defaultStyled","styled","prefixCSS","defaultAbles","moveableContructor","constructor","makeStyled","refTargets","totalAbles","userAbles","updateRefs","isReset","nextTarget","nextSelectorMap","querySelectorAll","__decorate","withMethods","Moveable","makeMoveable"],"mappings":"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"}