import * as React from "react";
import { Able, MoveableInterface, GroupableProps, MoveableDefaultProps } from "./types";
import MoveableManager from "./MoveableManager";
import MoveableGroup from "./MoveableGroup";
import { IObject } from "@daybrush/utils";
export declare class InitialMoveable<T = {}> extends React.PureComponent<MoveableDefaultProps & GroupableProps & T> {
    static defaultAbles: Able[];
    static defaultStyled: any;
    static makeStyled(): void;
    static getTotalAbles(): Able[];
    moveable: MoveableManager | MoveableGroup;
    refTargets: Array<HTMLElement | SVGElement | string | undefined | null>;
    selectorMap: IObject<Array<HTMLElement | SVGElement>>;
    render(): JSX.Element;
    componentDidMount(): void;
    componentDidUpdate(): void;
    updateRefs(isReset?: boolean): void;
}
export interface InitialMoveable<T = {}> extends React.PureComponent<MoveableDefaultProps & GroupableProps & T>, MoveableInterface {
    setState(state: any, callback?: () => any): any;
}
