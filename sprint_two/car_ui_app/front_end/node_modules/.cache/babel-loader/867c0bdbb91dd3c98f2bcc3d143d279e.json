{"ast":null,"code":"var _jsxFileName = \"/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/components/Profile.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { initiateUpdateProfile } from '../actions/profile';\nimport { validateFields } from '../utils/common';\nimport { resetErrors } from '../actions/errors';\nimport { initiateGetProfile } from '../actions/profile';\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile_name: '',\n      error_msg: '',\n      is_submitted: false\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        profile_name\n      } = this.state;\n      const profileData = {\n        profile_name\n      };\n      const fieldsToValidate = [{\n        profile_name\n      }];\n      const allFieldsEntered = validateFields(fieldsToValidate);\n\n      if (!allFieldsEntered) {\n        this.setState({\n          error_msg: {\n            update_error: 'Please enter all the fields.'\n          }\n        });\n      } else {\n        this.setState({\n          is_submitted: true,\n          error_msg: ''\n        });\n        this.props.dispatch(initiateUpdateProfile(profileData));\n      }\n    };\n\n    this.handleOnChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      profile\n    } = this.props;\n\n    if (_.isEmpty(profile)) {\n      this.props.dispatch(initiateGetProfile());\n    }\n\n    if (!_.isEmpty(profile)) {\n      const {\n        profile_name\n      } = profile;\n      this.setState({\n        profile_name\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\n      this.setState({\n        error_msg: this.props.errors\n      });\n    }\n\n    if (!_.isEqual(prevProps.profile, this.props.profile)) {\n      const {\n        profile_name\n      } = this.props.profile;\n      this.setState({\n        profile_name\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(resetErrors());\n  }\n\n  render() {\n    const {\n      error_msg,\n      profile_name,\n      is_submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"profile-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, error_msg && error_msg.update_error ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error_msg centered-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, error_msg.update_error) : is_submitted && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"successMsg centered-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Profile updated successfully.\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"profile_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Profile Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"profile_name\",\n      placeholder: \"Enter your profile name\",\n      value: profile_name,\n      onChange: this.handleOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"You are currently logged in! Click \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 48\n      }\n    }, \"here\"), \" to log out and \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/car_ui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 92\n      }\n    }, \"here\"), \" to go to the car_ui page\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/components/Profile.js"],"names":["React","_","connect","Form","Button","initiateUpdateProfile","validateFields","resetErrors","initiateGetProfile","Profile","Component","state","profile_name","error_msg","is_submitted","handleSubmit","event","preventDefault","profileData","fieldsToValidate","allFieldsEntered","setState","update_error","props","dispatch","handleOnChange","name","value","target","componentDidMount","profile","isEmpty","componentDidUpdate","prevProps","isEqual","errors","componentWillUnmount","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { initiateUpdateProfile } from '../actions/profile';\nimport { validateFields } from '../utils/common';\nimport { resetErrors } from '../actions/errors';\nimport { initiateGetProfile } from '../actions/profile';\n\n\nclass Profile extends React.Component {\n  state = {\n    profile_name: '',\n    error_msg: '',\n    is_submitted: false\n  };\n\n  componentDidMount()\n  {\n    const { profile } = this.props;\n\n    if (_.isEmpty(profile)) {\n      this.props.dispatch(initiateGetProfile());\n    }\n\n    if (!_.isEmpty(profile))\n    {\n      const {profile_name} = profile;\n      this.setState({profile_name});\n    }\n  }\n\n  componentDidUpdate(prevProps)\n  {\n    if (!_.isEqual(prevProps.errors, this.props.errors))\n    {\n      this.setState({error_msg: this.props.errors});\n    }\n    if (!_.isEqual(prevProps.profile, this.props.profile))\n    {\n      const { profile_name} = this.props.profile;\n      this.setState({ profile_name});\n    }\n  }\n\n  componentWillUnmount()\n  {\n    this.props.dispatch(resetErrors());\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { profile_name} = this.state;\n    const profileData = {profile_name};\n\n    const fieldsToValidate = [{ profile_name }];\n\n    const allFieldsEntered = validateFields(fieldsToValidate);\n    if (!allFieldsEntered)\n    {\n      this.setState({error_msg: { update_error: 'Please enter all the fields.'}});\n    }\n    else\n    {\n      this.setState({ is_submitted: true, error_msg: '' });\n      this.props.dispatch(initiateUpdateProfile(profileData));\n    }\n  };\n\n  handleOnChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({[name]: value});\n  };\n\n  render() {\n    const { error_msg, profile_name, is_submitted } = this.state;\n    return (\n      <div className=\"col-md-6 offset-md-3\">\n        <Form onSubmit={this.handleSubmit} className=\"profile-form\">\n          {error_msg && error_msg.update_error ? (\n            <p className=\"error_msg centered-message\">{error_msg.update_error}</p>\n          ) : (\n            is_submitted && (\n              <p className=\"successMsg centered-message\">\n                Profile updated successfully.\n              </p>\n            )\n          )}\n          <Form.Group controlId=\"profile_name\">\n            <Form.Label>Profile Name:</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"profile_name\"\n              placeholder=\"Enter your profile name\"\n              value={profile_name}\n              onChange={this.handleOnChange}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <h1>You are currently logged in! Click <a href = \"/logout\">here</a> to log out and <a href = \"/car_ui\">here</a> to go to the car_ui page</h1>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({profile: state.profile, errors: state.errors});\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}