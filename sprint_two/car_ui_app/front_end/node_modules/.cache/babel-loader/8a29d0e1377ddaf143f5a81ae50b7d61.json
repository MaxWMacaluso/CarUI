{"ast":null,"code":"var _jsxFileName = \"I:\\\\Team-Matrix\\\\sprint_two\\\\car_ui_app\\\\src\\\\components\\\\CarUIMoveable.js\";\nimport React, { Component } from 'react';\nimport Moveable from \"react-moveable\";\nexport default class CarUIMoveable extends Component {\n  //<h1>{moveableTarget}</h1>;\n  constructor(props) {\n    super(props);\n    this.state = {\n      target: null,\n      frame: {\n        translate: [0, 0],\n        rotate: 0,\n        scale: [1, 1],\n        transformOrigin: \"50% 50%\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      target: document.querySelector(\".target\"),\n      frame: {\n        translate: [0, 0],\n        scale: [1, 1],\n        rotate: 0,\n        transformOrigin: \"50% 50%\"\n      }\n    });\n  }\n\n  render() {\n    // put 1 below:  <div className=\"target\">Target</div>\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Moveable, {\n      target: this.state.target //Scaleable\n      ,\n      scalable: true,\n      keepRatio: false,\n      throttleScale: 0,\n      renderDirections: [\"nw\", \"n\", \"ne\", \"w\", \"e\", \"sw\", \"s\", \"se\"],\n      originDraggable: true,\n      originRelative: true,\n      draggable: true,\n      throttleDrag: 0,\n      startDragRotate: 0,\n      throttleDragRotate: 0,\n      zoom: 1,\n      origin: true,\n      padding: {\n        \"left\": 0,\n        \"top\": 0,\n        \"right\": 0,\n        \"bottom\": 0\n      },\n      rotatable: true,\n      throttleRotate: 0,\n      rotationPosition: \"top\",\n      onScaleStart: ({\n        set,\n        dragStart\n      }) => {\n        set(this.state.frame.scale);\n        dragStart && dragStart.set(this.state.frame.translate);\n      },\n      onScale: ({\n        target,\n        scale,\n        drag\n      }) => {\n        const beforeTranslate = drag.beforeTranslate;\n        this.state.frame.translate = beforeTranslate;\n        this.state.frame.scale = scale;\n        this.state.target.style.transform = `translate(${beforeTranslate[0]}px, ${beforeTranslate[1]}px)` + ` scale(${scale[0]}, ${scale[1]})`;\n      },\n      onScaleEnd: ({\n        lastEvent\n      }) => {\n        if (lastEvent) {\n          this.state.frame.translate = lastEvent.drag.beforeTranslate;\n          this.state.frame.scale = lastEvent.scale;\n        }\n      },\n      onDragOriginStart: ({\n        dragStart\n      }) => {\n        dragStart && dragStart.set(this.state.frame.translate);\n      },\n      onDragOrigin: ({\n        target,\n        drag,\n        transformOrigin\n      }) => {\n        this.state.frame.translate = drag.beforeTranslate;\n        this.state.frame.transformOrigin = transformOrigin;\n      },\n      onDragStart: ({\n        set\n      }) => {\n        set(this.state.frame.translate);\n      },\n      onDrag: ({\n        target,\n        beforeTranslate\n      }) => {\n        this.state.frame.translate = beforeTranslate;\n      },\n      onRotateStart: ({\n        set\n      }) => {\n        set(this.state.frame.rotate);\n      },\n      onRotate: ({\n        beforeRotate\n      }) => {\n        this.state.frame.rotate = beforeRotate;\n      },\n      onRender: ({\n        target\n      }) => {\n        const {\n          translate,\n          rotate,\n          transformOrigin\n        } = this.state.frame;\n        target.style.transformOrigin = transformOrigin;\n        target.style.transform = `translate(${translate[0]}px, ${translate[1]}px)` + ` rotate(${rotate}deg)`;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["I:/Team-Matrix/sprint_two/car_ui_app/src/components/CarUIMoveable.js"],"names":["React","Component","Moveable","CarUIMoveable","constructor","props","state","target","frame","translate","rotate","scale","transformOrigin","componentDidMount","setState","document","querySelector","render","set","dragStart","drag","beforeTranslate","style","transform","lastEvent","beforeRotate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Moveable from \"react-moveable\";\r\n\r\n\r\nexport default class CarUIMoveable extends Component { //<h1>{moveableTarget}</h1>;\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      target: null,\r\n      frame: {\r\n        translate: [0,0],\r\n        rotate: 0,\r\n        scale: [1,1],\r\n        transformOrigin: \"50% 50%\"\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      target: document.querySelector(\".target\"),\r\n      frame: {\r\n        translate: [0,0],\r\n        scale: [1,1],\r\n        rotate: 0,\r\n        transformOrigin: \"50% 50%\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // put 1 below:  <div className=\"target\">Target</div>\r\n\r\n    return <div className=\"container\">\r\n        <Moveable\r\n            target={this.state.target}\r\n\r\n            //Scaleable\r\n            scalable={true}\r\n            keepRatio={false}\r\n            throttleScale={0}\r\n            renderDirections={[\"nw\",\"n\",\"ne\",\"w\",\"e\",\"sw\",\"s\",\"se\"]}\r\n            \r\n            originDraggable={true}\r\n            originRelative={true}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            startDragRotate={0}\r\n            throttleDragRotate={0}\r\n            zoom={1}\r\n            origin={true}\r\n            padding={{\"left\":0,\"top\":0,\"right\":0,\"bottom\":0}}\r\n            rotatable={true}\r\n            throttleRotate={0}\r\n            rotationPosition={\"top\"}\r\n            onScaleStart={({ set, dragStart }) => {\r\n                set(this.state.frame.scale);\r\n                dragStart && dragStart.set(this.state.frame.translate);\r\n            }}\r\n            onScale={({ target, scale, drag }) => {\r\n                const beforeTranslate = drag.beforeTranslate;\r\n\r\n                this.state.frame.translate = beforeTranslate;\r\n                this.state.frame.scale = scale;\r\n                this.state.target.style.transform\r\n                    = `translate(${beforeTranslate[0]}px, ${beforeTranslate[1]}px)`\r\n                    + ` scale(${scale[0]}, ${scale[1]})`;\r\n            }}\r\n            onScaleEnd={({ lastEvent }) => {\r\n                if (lastEvent) {\r\n                    this.state.frame.translate = lastEvent.drag.beforeTranslate;\r\n                    this.state.frame.scale = lastEvent.scale;\r\n                }\r\n            }}\r\n            onDragOriginStart={({ dragStart }) => {\r\n                dragStart && dragStart.set(this.state.frame.translate);\r\n            }}\r\n            onDragOrigin={({ target, drag, transformOrigin }) => {\r\n                this.state.frame.translate = drag.beforeTranslate;\r\n                this.state.frame.transformOrigin = transformOrigin;\r\n            }}\r\n            onDragStart={({ set }) => {\r\n                set(this.state.frame.translate);\r\n            }}\r\n            onDrag={({ target, beforeTranslate }) => {\r\n                this.state.frame.translate = beforeTranslate;\r\n            }}\r\n            onRotateStart={({ set }) => {\r\n                set(this.state.frame.rotate);\r\n            }}\r\n            onRotate={({ beforeRotate }) => {\r\n                this.state.frame.rotate = beforeRotate;\r\n            }}\r\n            onRender={({ target }) => {\r\n                const { translate, rotate, transformOrigin } = this.state.frame;\r\n                target.style.transformOrigin = transformOrigin;\r\n                target.style.transform = `translate(${translate[0]}px, ${translate[1]}px)`\r\n                    +  ` rotate(${rotate}deg)`;\r\n            }}\r\n        />\r\n    </div>;\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}