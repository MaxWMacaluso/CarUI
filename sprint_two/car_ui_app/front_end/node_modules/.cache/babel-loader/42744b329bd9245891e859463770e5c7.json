{"ast":null,"code":"import axios from 'axios';\nimport { SIGN_IN, SIGN_OUT, BASE_API_URL } from '../utils/constants';\nimport { initiateGetProfile } from './profile';\nimport { history } from '../router/AppRouter';\nimport { getErrors } from './errors';\nimport { setAuthHeader, removeAuthHeader } from '../utils/common';\nexport const signIn = user => ({\n  type: SIGN_IN,\n  user\n});\nexport const signOut = () => ({\n  type: SIGN_OUT\n}); //POSSIBLE ERROR\n\nexport const initiateLogin = (profile_id, password) => {\n  return async dispatch => {\n    try {\n      const result = await axios.post(`${BASE_API_URL}/signin`, {\n        profile_id,\n        password\n      });\n      const user = result.data;\n      localStorage.setItem('user_token', user.token);\n      dispatch(signIn(user));\n      dispatch(initiateGetProfile(user.profile_name));\n      history.push('/profile');\n    } catch (error) {\n      console.log('Error');\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n};\nexport const initiateLogout = () => {\n  return async dispatch => {\n    try {\n      setAuthHeader();\n      await post(`${BASE_API_URL}/logout`, true, true);\n      removeAuthHeader();\n      localStorage.removeItem('user_token');\n      return dispatch(signOut());\n    } catch (error) {\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n}; //Calling server API http://localhost:3001/singup by passing user data as second param to it\n//Sends back object '{success: true}  as a result of API call\n\nexport const registerNewUser = data => {\n  return async dispatch => {\n    try {\n      await axios.post(`${BASE_API_URL}/signup`, data);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.log('Error ', error);\n      error.response && dispatch(getErrors(error.response.data));\n      return {\n        success: false\n      };\n    }\n  };\n};","map":{"version":3,"sources":["/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/actions/auth.js"],"names":["axios","SIGN_IN","SIGN_OUT","BASE_API_URL","initiateGetProfile","history","getErrors","setAuthHeader","removeAuthHeader","signIn","user","type","signOut","initiateLogin","profile_id","password","dispatch","result","post","data","localStorage","setItem","token","profile_name","push","error","console","log","response","initiateLogout","removeItem","registerNewUser","success"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,YAA5B,QAAgD,oBAAhD;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,iBAAhD;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,KAAW;AAACC,EAAAA,IAAI,EAAEV,OAAP;AAAgBS,EAAAA;AAAhB,CAAX,CAAf;AAEP,OAAO,MAAME,OAAO,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAET;AAAP,CAAP,CAAhB,C,CAEP;;AACA,OAAO,MAAMW,aAAa,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AACrD,SAAO,MAAOC,QAAP,IAAoB;AACzB,QACA;AACE,YAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAY,GAAEf,YAAa,SAA3B,EAAqC;AAACW,QAAAA,UAAD;AAAaC,QAAAA;AAAb,OAArC,CAArB;AACA,YAAML,IAAI,GAAGO,MAAM,CAACE,IAApB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCX,IAAI,CAACY,KAAxC;AACAN,MAAAA,QAAQ,CAACP,MAAM,CAACC,IAAD,CAAP,CAAR;AACAM,MAAAA,QAAQ,CAACZ,kBAAkB,CAACM,IAAI,CAACa,YAAN,CAAnB,CAAR;AACAlB,MAAAA,OAAO,CAACmB,IAAR,CAAa,UAAb;AACD,KARD,CASA,OAAOC,KAAP,EACA;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,MAAAA,KAAK,CAACG,QAAN,IAAkBZ,QAAQ,CAACV,SAAS,CAACmB,KAAK,CAACG,QAAN,CAAeT,IAAhB,CAAV,CAA1B;AACD;AACF,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMU,cAAc,GAAG,MAAM;AAClC,SAAO,MAAOb,QAAP,IAAoB;AACzB,QACA;AACET,MAAAA,aAAa;AACb,YAAMW,IAAI,CAAE,GAAEf,YAAa,SAAjB,EAA2B,IAA3B,EAAiC,IAAjC,CAAV;AACAK,MAAAA,gBAAgB;AAChBY,MAAAA,YAAY,CAACU,UAAb,CAAwB,YAAxB;AACA,aAAOd,QAAQ,CAACJ,OAAO,EAAR,CAAf;AACD,KAPD,CAQA,OAAOa,KAAP,EACA;AACEA,MAAAA,KAAK,CAACG,QAAN,IAAkBZ,QAAQ,CAACV,SAAS,CAACmB,KAAK,CAACG,QAAN,CAAeT,IAAhB,CAAV,CAA1B;AACD;AACF,GAbD;AAcD,CAfM,C,CAiBP;AACA;;AACA,OAAO,MAAMY,eAAe,GAAIZ,IAAD,IAAU;AACvC,SAAO,MAAOH,QAAP,IAAoB;AACzB,QACA;AACE,YAAMhB,KAAK,CAACkB,IAAN,CAAY,GAAEf,YAAa,SAA3B,EAAqCgB,IAArC,CAAN;AACA,aAAO;AAAEa,QAAAA,OAAO,EAAE;AAAX,OAAP;AACD,KAJD,CAKA,OAAOP,KAAP,EACA;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACAA,MAAAA,KAAK,CAACG,QAAN,IAAkBZ,QAAQ,CAACV,SAAS,CAACmB,KAAK,CAACG,QAAN,CAAeT,IAAhB,CAAV,CAA1B;AACA,aAAO;AAAEa,QAAAA,OAAO,EAAE;AAAX,OAAP;AACD;AACF,GAZD;AAaD,CAdM","sourcesContent":["import axios from 'axios';\nimport { SIGN_IN, SIGN_OUT, BASE_API_URL } from '../utils/constants';\nimport { initiateGetProfile } from './profile';\nimport { history } from '../router/AppRouter';\nimport { getErrors } from './errors';\nimport { setAuthHeader, removeAuthHeader } from '../utils/common';\n\nexport const signIn = (user) => ({type: SIGN_IN, user});\n\nexport const signOut = () => ({type: SIGN_OUT});\n\n//POSSIBLE ERROR\nexport const initiateLogin = (profile_id, password) => {\n  return async (dispatch) => {\n    try \n    {\n      const result = await axios.post(`${BASE_API_URL}/signin`, {profile_id, password});\n      const user = result.data;\n      localStorage.setItem('user_token', user.token);\n      dispatch(signIn(user));\n      dispatch(initiateGetProfile(user.profile_name));\n      history.push('/profile');\n    } \n    catch (error) \n    {\n      console.log('Error');\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n};\n\nexport const initiateLogout = () => {\n  return async (dispatch) => {\n    try \n    {\n      setAuthHeader();\n      await post(`${BASE_API_URL}/logout`, true, true);\n      removeAuthHeader();\n      localStorage.removeItem('user_token');\n      return dispatch(signOut());\n    } \n    catch (error) \n    {\n      error.response && dispatch(getErrors(error.response.data));\n    }\n  };\n};\n\n//Calling server API http://localhost:3001/singup by passing user data as second param to it\n//Sends back object '{success: true}  as a result of API call\nexport const registerNewUser = (data) => {\n  return async (dispatch) => {\n    try \n    {\n      await axios.post(`${BASE_API_URL}/signup`, data);\n      return { success: true };\n    } \n    catch (error) \n    {\n      console.log('Error ', error);\n      error.response && dispatch(getErrors(error.response.data));\n      return { success: false };\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}