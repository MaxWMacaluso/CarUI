{"ast":null,"code":"var _jsxFileName = \"I:\\\\Team-Matrix\\\\sprint_two\\\\car_ui_app\\\\src\\\\App.js\";\n// import React from 'react';\n// import './App.css';\n// import {BrowserRouter as Router, Route, Switch, Link, Redirect} from \"react-router-dom\";\n// //In JSX, class is replaced by className\n// //JS in curly braces\n// //Pages\n// import profilesPage from './pages/profiles' //Done\n// import createProfilesPage from './pages/create_profile' //Done\n// import carUIPage from './pages/car_ui'\n// import uploadImgPage from './pages/upload_img'\n// import editImgPage from './pages/edit_img'\n// import notFoundPage from './pages/404'; //Done\n// function App() {\n//   return (\n//     //Router object can only have ONE child\n//     <Router>\n//       <Switch>\n//         <Route exact path=\"/\" component={profilesPage}/>\n//         <Route exact path=\"/create_profile\" component={createProfilesPage}/>\n//         <Route exact path=\"/car_ui\" component={carUIPage}/>\n//         <Route exact path=\"/upload_img\" component={uploadImgPage}/>\n//         <Route exact path=\"/edit_img\" component={editImgPage}/>\n//         {/* Goes here if none are triggered; AT BOTTOM */}\n//         <Route exact path='/404' component={notFoundPage}/>\n//         <Redirect to='/404' />\n//       </Switch>\n//     </Router>\n//   );\n// }\n// export default App;\n//Experiment-----------------------------\nimport React, { useState, useEffect } from 'react';\nimport FileUpload from './components/FileUpload';\n\nfunction App() {\n  const [imgs, setImgs] = useState(false);\n  useEffect(() => {\n    getImg();\n  }, []);\n\n  function getImg() {\n    fetch('http://localhost:3001').then(response => {\n      return response.text();\n    }).then(data => {\n      setImgs(data);\n    });\n  }\n\n  function createImg() {\n    let img_name = prompt('Enter image name');\n    let pos_x = prompt('Enter pos x');\n    let pos_y = prompt('Enter pos y');\n    let rotation = prompt('Enter rotation');\n    let scale = prompt('Enter scale');\n    fetch('http://localhost:3001/img_data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        img_name,\n        pos_x,\n        pos_y,\n        rotation,\n        scale\n      })\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      getImg();\n    });\n  }\n\n  function deleteImg() {\n    let img_name = prompt('Enter image name');\n    fetch('http://localhost:3001/img_data/${img_name}', {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      getImg();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, imgs ? imgs : 'There is no image data available', /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Add image\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: deleteImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Delete image\"), /*#__PURE__*/React.createElement(FileUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["I:/Team-Matrix/sprint_two/car_ui_app/src/App.js"],"names":["React","useState","useEffect","FileUpload","App","imgs","setImgs","getImg","fetch","then","response","text","data","createImg","img_name","prompt","pos_x","pos_y","rotation","scale","method","headers","body","JSON","stringify","alert","deleteImg"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAGA,WAASA,MAAT,GAAkB;AAChBC,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAIQG,IAAI,IAAI;AACZN,MAAAA,OAAO,CAACM,IAAD,CAAP;AACD,KANH;AAOD;;AAED,WAASC,SAAT,GAAqB;AACnB,QAAIC,QAAQ,GAAGC,MAAM,CAAC,kBAAD,CAArB;AACA,QAAIC,KAAK,GAAGD,MAAM,CAAC,aAAD,CAAlB;AACA,QAAIE,KAAK,GAAGF,MAAM,CAAC,aAAD,CAAlB;AACA,QAAIG,QAAQ,GAAGH,MAAM,CAAC,gBAAD,CAArB;AACA,QAAII,KAAK,GAAGJ,MAAM,CAAC,aAAD,CAAlB;AACAP,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCY,MAAAA,MAAM,EAAE,MAD8B;AAEtCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF6B;AAKtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACV,QAAAA,QAAD;AAAWE,QAAAA,KAAX;AAAkBC,QAAAA,KAAlB;AAAyBC,QAAAA,QAAzB;AAAmCC,QAAAA;AAAnC,OAAf;AALgC,KAAnC,CAAL,CAOGV,IAPH,CAOQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATH,EAUGF,IAVH,CAUQG,IAAI,IAAI;AACZa,MAAAA,KAAK,CAACb,IAAD,CAAL;AACAL,MAAAA,MAAM;AACP,KAbH;AAcD;;AAED,WAASmB,SAAT,GAAqB;AACnB,QAAIZ,QAAQ,GAAGC,MAAM,CAAC,kBAAD,CAArB;AACAP,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDY,MAAAA,MAAM,EAAE;AAD0C,KAA/C,CAAL,CAGGX,IAHH,CAGQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALH,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZa,MAAAA,KAAK,CAACb,IAAD,CAAL;AACAL,MAAAA,MAAM;AACP,KATH;AAUD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,GAAGA,IAAH,GAAU,kCADjB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEQ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAQ,IAAA,OAAO,EAAEa,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD;;AACD,eAAetB,GAAf","sourcesContent":["// import React from 'react';\r\n// import './App.css';\r\n// import {BrowserRouter as Router, Route, Switch, Link, Redirect} from \"react-router-dom\";\r\n\r\n// //In JSX, class is replaced by className\r\n// //JS in curly braces\r\n\r\n// //Pages\r\n// import profilesPage from './pages/profiles' //Done\r\n// import createProfilesPage from './pages/create_profile' //Done\r\n// import carUIPage from './pages/car_ui'\r\n// import uploadImgPage from './pages/upload_img'\r\n// import editImgPage from './pages/edit_img'\r\n\r\n// import notFoundPage from './pages/404'; //Done\r\n\r\n// function App() {\r\n//   return (\r\n//     //Router object can only have ONE child\r\n//     <Router>\r\n//       <Switch>\r\n//         <Route exact path=\"/\" component={profilesPage}/>\r\n//         <Route exact path=\"/create_profile\" component={createProfilesPage}/>\r\n//         <Route exact path=\"/car_ui\" component={carUIPage}/>\r\n//         <Route exact path=\"/upload_img\" component={uploadImgPage}/>\r\n//         <Route exact path=\"/edit_img\" component={editImgPage}/>\r\n\r\n//         {/* Goes here if none are triggered; AT BOTTOM */}\r\n//         <Route exact path='/404' component={notFoundPage}/>\r\n//         <Redirect to='/404' />\r\n//       </Switch>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n//Experiment-----------------------------\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport FileUpload from './components/FileUpload';\r\n\r\nfunction App() {\r\n  const [imgs, setImgs] = useState(false);\r\n  useEffect(() => {\r\n    getImg();\r\n  }, []);\r\n  function getImg() {\r\n    fetch('http://localhost:3001')\r\n      .then(response => {\r\n        return response.text();\r\n      })\r\n      .then(data => {\r\n        setImgs(data);\r\n      });\r\n  }\r\n\r\n  function createImg() {\r\n    let img_name = prompt('Enter image name');\r\n    let pos_x = prompt('Enter pos x');\r\n    let pos_y = prompt('Enter pos y');\r\n    let rotation = prompt('Enter rotation');\r\n    let scale = prompt('Enter scale');\r\n    fetch('http://localhost:3001/img_data', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({img_name, pos_x, pos_y, rotation, scale}),\r\n    })\r\n      .then(response => {\r\n        return response.text();\r\n      })\r\n      .then(data => {\r\n        alert(data);\r\n        getImg();\r\n      });\r\n  }\r\n\r\n  function deleteImg() {\r\n    let img_name = prompt('Enter image name');\r\n    fetch('http://localhost:3001/img_data/${img_name}', {\r\n      method: 'DELETE',\r\n    })\r\n      .then(response => {\r\n        return response.text();\r\n      })\r\n      .then(data => {\r\n        alert(data);\r\n        getImg();\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {imgs ? imgs : 'There is no image data available'}\r\n      <br />\r\n      <button onClick={createImg}>Add image</button>\r\n      <br />\r\n      <button onClick={deleteImg}>Delete image</button>\r\n\r\n      <FileUpload/>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}