{"ast":null,"code":"var _jsxFileName = \"/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/components/Register.js\";\n//Registers a new user\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Button } from 'react-bootstrap';\nimport { registerNewUser } from '../actions/auth';\nimport { resetErrors } from '../actions/errors';\nimport { validateFields } from '../utils/common';\nimport { initiateLogin } from '../actions/auth';\nimport { Link } from 'react-router-dom';\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile_name: '',\n      password: '',\n      confirm_password: '',\n      success_msg: '',\n      error_msg: '',\n      is_submitted: false\n    };\n\n    this.registerUser = event => {\n      event.preventDefault();\n      const {\n        profile_name,\n        password,\n        confirm_password\n      } = this.state;\n      const fieldsToValidate = [{\n        profile_name\n      }, {\n        password\n      }, {\n        confirm_password\n      }];\n      const allFieldsEntered = validateFields(fieldsToValidate);\n\n      if (!allFieldsEntered) {\n        this.setState({\n          error_msg: {\n            signup_error: 'Please enter all the fields'\n          }\n        });\n      } //If all fields are entered\n      else {\n          //If password not entered correctly\n          if (password !== confirm_password) {\n            this.setState({\n              error_msg: {\n                signup_error: 'Password and confirm password does not match'\n              }\n            });\n          } //Everything correct, so accept it\n          else {\n              this.setState({\n                is_submitted: true\n              });\n              this.props.dispatch(registerNewUser({\n                profile_name,\n                password\n              })).then(response => {\n                if (response.success) {\n                  this.setState({\n                    success_msg: 'User registered successfully.',\n                    error_msg: ''\n                  });\n                  this.props.dispatch(initiateLogin(profile_name, password));\n                }\n              });\n            }\n        }\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\n      this.setState({\n        error_msg: this.props.errors\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(resetErrors());\n  }\n\n  render() {\n    const {\n      error_msg,\n      success_msg,\n      is_submitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Register User\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.registerUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, error_msg && error_msg.signup_error ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error_msg centered-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 57\n      }\n    }, error_msg.signup_error) : is_submitted && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"success_msg centered-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 149\n      }\n    }, success_msg), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"profile_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Profile name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"profile_name\",\n      placeholder: \"Profile name\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"confirm_password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, \"Confirm password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"confirm_password\",\n      placeholder: \"Enter confirm password\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Login\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Register);","map":{"version":3,"sources":["/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/components/Register.js"],"names":["React","connect","_","Form","Button","registerNewUser","resetErrors","validateFields","initiateLogin","Link","Register","Component","state","profile_name","password","confirm_password","success_msg","error_msg","is_submitted","registerUser","event","preventDefault","fieldsToValidate","allFieldsEntered","setState","signup_error","props","dispatch","then","response","success","handleInputChange","name","value","target","componentDidUpdate","prevProps","isEqual","errors","componentWillUnmount","render","mapStateToProps"],"mappings":"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","sourcesContent":["//Registers a new user\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Button } from 'react-bootstrap';\nimport { registerNewUser } from '../actions/auth';\nimport { resetErrors } from '../actions/errors';\nimport { validateFields } from '../utils/common';\nimport { initiateLogin } from '../actions/auth';\n\nimport { Link } from 'react-router-dom';\n\nclass Register extends React.Component {\n    state = {\n        profile_name: '',\n        password: '',\n        confirm_password: '',\n        success_msg: '',\n        error_msg: '',\n        is_submitted: false\n    };\n\n    componentDidUpdate(prevProps)\n    {\n        if (!_.isEqual(prevProps.errors, this.props.errors))\n        {\n          this.setState({ error_msg: this.props.errors });\n        }\n      }\n\n      componentWillUnmount()\n      {\n        this.props.dispatch(resetErrors());\n      }\n\n    registerUser = (event) => {\n        event.preventDefault();\n\n        const {profile_name, password, confirm_password} = this.state;\n        const fieldsToValidate = [{profile_name}, {password}, {confirm_password}];\n        const allFieldsEntered = validateFields(fieldsToValidate);\n\n        if (!allFieldsEntered)\n        {\n            this.setState({error_msg: {signup_error: 'Please enter all the fields'}});\n        }\n        //If all fields are entered\n        else\n        {\n            //If password not entered correctly\n            if (password !== confirm_password)\n            {\n                this.setState({error_msg: {signup_error: 'Password and confirm password does not match'}});\n            }\n            //Everything correct, so accept it\n            else\n            {\n                this.setState({is_submitted: true});\n                this.props.dispatch(registerNewUser({profile_name, password})).then((response) => {\n                if (response.success)\n                {\n                    this.setState({success_msg: 'User registered successfully.', error_msg: ''});\n                    this.props.dispatch(initiateLogin(profile_name, password));\n                }\n                });\n            }\n        }\n    };\n\n    handleInputChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({[name]: value});\n    };\n\n    render() {\n        const {error_msg, success_msg, is_submitted} = this.state;\n        return (\n        <div className=\"login-page\">\n            <h2>Register User</h2>\n            <div className=\"login-form\">\n            <Form onSubmit={this.registerUser}>\n                {error_msg && error_msg.signup_error ? (<p className=\"error_msg centered-message\">{error_msg.signup_error}</p>) : (is_submitted && (<p className=\"success_msg centered-message\">{success_msg}</p>))}\n                <Form.Group controlId=\"profile_name\">\n                <Form.Label>Profile name</Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    name=\"profile_name\"\n                    placeholder=\"Profile name\"\n                    onChange={this.handleInputChange}\n                />\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Enter password\"\n                    onChange={this.handleInputChange}\n                />\n                </Form.Group>\n                <Form.Group controlId=\"confirm_password\">\n                <Form.Label>Confirm password</Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    name=\"confirm_password\"\n                    placeholder=\"Enter confirm password\"\n                    onChange={this.handleInputChange}\n                />\n                </Form.Group>\n                <div className=\"action-items\">\n                <Button variant=\"primary\" type=\"submit\">\n                    Register\n                </Button>\n                <Link to=\"/\" className=\"btn btn-secondary\">\n                    Login\n                </Link>\n                </div>\n            </Form>\n            </div>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({errors: state.errors});\n\nexport default connect(mapStateToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}