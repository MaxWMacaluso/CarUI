{"ast":null,"code":"var _jsxFileName = \"/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/components/Login.js\";\n//Logs in an existing user and gives option to register new user\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Button } from 'react-bootstrap';\nimport { initiateLogin } from '../actions/auth';\nimport { resetErrors } from '../actions/errors';\nimport { validateFields } from '../utils/common';\nimport { Link } from 'react-router-dom'; //Eveyrthing below are methods to Login class\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profile_name: '',\n      password: '',\n      error_msg: ''\n    };\n\n    this.handleLogin = event => {\n      event.preventDefault();\n      const {\n        profile_name,\n        password\n      } = this.state;\n      const fieldsToValidate = [{\n        profile_name\n      }, {\n        password\n      }];\n      const allFieldsEntered = validateFields(fieldsToValidate);\n\n      if (!allFieldsEntered) {\n        this.setState({\n          error_msg: {\n            signin_error: 'Please enter all the fields'\n          }\n        });\n      } //Login successful\n      else {\n          this.setState({\n            error_msg: {\n              signin_error: ''\n            }\n          });\n          this.props.dispatch(initiateLogin(profile_name, password));\n        }\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!_.isEqual(prevProps.errors, this.props.errors)) {\n      this.setState({\n        error_msg: this.props.errors\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(resetErrors());\n  }\n\n  render() {\n    const {\n      error_msg\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Login or Create an Account!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, error_msg && error_msg.signin_error && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"error_msg centered-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 54\n      }\n    }, error_msg.signin_error), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"profile_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, \"Profile Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"profile_name\",\n      placeholder: \"Enter Profile Name\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter password\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/register_user\",\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Create account\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/components/Login.js"],"names":["React","connect","_","Form","Button","initiateLogin","resetErrors","validateFields","Link","Login","Component","state","profile_name","password","error_msg","handleLogin","event","preventDefault","fieldsToValidate","allFieldsEntered","setState","signin_error","props","dispatch","handleInputChange","name","value","target","componentDidUpdate","prevProps","isEqual","errors","componentWillUnmount","render","mapStateToProps"],"mappings":"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","sourcesContent":["//Logs in an existing user and gives option to register new user\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Button } from 'react-bootstrap';\nimport { initiateLogin } from '../actions/auth';\nimport { resetErrors } from '../actions/errors';\nimport { validateFields } from '../utils/common';\nimport { Link } from 'react-router-dom';\n\n//Eveyrthing below are methods to Login class\nclass Login extends React.Component {\n    state = {\n        profile_name: '',\n        password: '',\n        error_msg: ''\n    };\n\ncomponentDidUpdate(prevProps)\n{\n  if (!_.isEqual(prevProps.errors, this.props.errors))\n  {\n    this.setState({ error_msg: this.props.errors });\n  }\n}\n\ncomponentWillUnmount()\n{\n  this.props.dispatch(resetErrors());\n}\n\nhandleLogin = (event) => {\n    event.preventDefault();\n    const {profile_name, password} = this.state;\n    const fieldsToValidate = [{profile_name}, {password}];\n    const allFieldsEntered = validateFields(fieldsToValidate);\n\n    if (!allFieldsEntered)\n    {\n      this.setState({error_msg: { signin_error: 'Please enter all the fields'}});\n    }\n    //Login successful\n    else\n    {\n      this.setState({ error_msg: { signin_error: '' }});\n      this.props.dispatch(initiateLogin(profile_name, password));\n    }\n};\n\nhandleInputChange = (event) => {\n  const {name, value} = event.target;\n  this.setState({[name]: value});\n};\n\nrender() {\n    const {error_msg} = this.state;\n    return (\n      <div className=\"login-page\">\n        <h1>Login or Create an Account!</h1>\n        <div className=\"login-form\">\n          <Form onSubmit={this.handleLogin}>\n            {error_msg && error_msg.signin_error && (<p className=\"error_msg centered-message\">{error_msg.signin_error}</p>)}\n            <Form.Group controlId=\"profile_name\">\n              <Form.Label>Profile Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"profile_name\"\n                placeholder=\"Enter Profile Name\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                onChange={this.handleInputChange}\n              />\n            </Form.Group>\n            <div className=\"action-items\">\n              {/* {When button is pressed, form is submitted and handleLogin() exectutes} */}\n              <Button variant=\"primary\" type=\"submit\">Login</Button>\n              \n              <Link to=\"/register_user\" className=\"btn btn-secondary\">Create account</Link>\n            </div>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({errors: state.errors});\n\nexport default connect(mapStateToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}