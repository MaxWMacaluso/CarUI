{"ast":null,"code":"var _jsxFileName = \"I:\\\\Team-Matrix\\\\sprint_two\\\\car_ui_app\\\\src\\\\components\\\\CarUIMoveable.js\";\nimport React from 'react';\nimport Moveable from \"moveable\";\n\nconst CarUIMoveable = ({\n  moveableTarget\n}) => {\n  //<h1>{moveableTarget}</h1>;\n  return /*#__PURE__*/React.createElement(Moveable, {\n    target: document.querySelector(\".target\"),\n    container: null,\n    origin: true\n    /* Resize event edges */\n    ,\n    edge: false\n    /* draggable */\n    ,\n    draggable: true,\n    throttleDrag: 0,\n    onDragStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onDragStart\", target);\n    },\n    onDrag: ({\n      target,\n      beforeDelta,\n      beforeDist,\n      left,\n      top,\n      right,\n      bottom,\n      delta,\n      dist,\n      transform,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onDrag left, top\", left, top); // target.style.left = `${left}px`;\n      // target.style.top = `${top}px`;\n\n      console.log(\"onDrag translate\", dist);\n      target.style.transform = transform;\n    },\n    onDragEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onDragEnd\", target, isDrag);\n    }\n    /* When resize or scale, keeps a ratio of the width, height. */\n    ,\n    keepRatio: true\n    /* resizable*/\n\n    /* Only one of resizable, scalable, warpable can be used. */\n    ,\n    resizable: true,\n    throttleResize: 0,\n    onResizeStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onResizeStart\", target);\n    },\n    onResize: ({\n      target,\n      width,\n      height,\n      dist,\n      delta,\n      direction,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onResize\", target);\n      delta[0] && (target.style.width = `${width}px`);\n      delta[1] && (target.style.height = `${height}px`);\n    },\n    onResizeEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onResizeEnd\", target, isDrag);\n    }\n    /* scalable */\n\n    /* Only one of resizable, scalable, warpable can be used. */\n    ,\n    scalable: true,\n    throttleScale: 0,\n    onScaleStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onScaleStart\", target);\n    },\n    onScale: ({\n      target,\n      scale,\n      dist,\n      delta,\n      transform,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onScale scale\", scale);\n      target.style.transform = transform;\n    },\n    onScaleEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onScaleEnd\", target, isDrag);\n    }\n    /* rotatable */\n    ,\n    rotatable: true,\n    throttleRotate: 0,\n    onRotateStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onRotateStart\", target);\n    },\n    onRotate: ({\n      target,\n      delta,\n      dist,\n      transform,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onRotate\", dist);\n      target.style.transform = transform;\n    },\n    onRotateEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onRotateEnd\", target, isDrag);\n    }\n    /* warpable */\n\n    /* Only one of resizable, scalable, warpable can be used. */\n\n    /*\r\n    this.matrix = [\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1,\r\n    ]\r\n    */\n    ,\n    warpable: true,\n    onWarpStart: ({\n      target,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onWarpStart\", target);\n    },\n    onWarp: ({\n      target,\n      clientX,\n      clientY,\n      delta,\n      dist,\n      multiply,\n      transform\n    }) => {\n      console.log(\"onWarp\", target); // target.style.transform = transform;\n\n      this.matrix = multiply(this.matrix, delta);\n      target.style.transform = `matrix3d(${this.matrix.join(\",\")})`;\n    },\n    onWarpEnd: ({\n      target,\n      isDrag,\n      clientX,\n      clientY\n    }) => {\n      console.log(\"onWarpEnd\", target, isDrag);\n    } // Enabling pinchable lets you use events that\n    // can be used in draggable, resizable, scalable, and rotateable.\n    ,\n    pinchable: true,\n    onPinchStart: ({\n      target,\n      clientX,\n      clientY,\n      datas\n    }) => {\n      // pinchStart event occur before dragStart, rotateStart, scaleStart, resizeStart\n      console.log(\"onPinchStart\");\n    },\n    onPinch: ({\n      target,\n      clientX,\n      clientY,\n      datas\n    }) => {\n      // pinch event occur before drag, rotate, scale, resize\n      console.log(\"onPinch\");\n    },\n    onPinchEnd: ({\n      isDrag,\n      target,\n      clientX,\n      clientY,\n      datas\n    }) => {\n      // pinchEnd event occur before dragEnd, rotateEnd, scaleEnd, resizeEnd\n      console.log(\"onPinchEnd\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default CarUIMoveable;","map":{"version":3,"sources":["I:/Team-Matrix/sprint_two/car_ui_app/src/components/CarUIMoveable.js"],"names":["React","Moveable","CarUIMoveable","moveableTarget","document","querySelector","target","clientX","clientY","console","log","beforeDelta","beforeDist","left","top","right","bottom","delta","dist","transform","style","isDrag","width","height","direction","scale","multiply","matrix","join","datas"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Moveable from \"moveable\";\r\n\r\nconst CarUIMoveable = ({ moveableTarget }) => { //<h1>{moveableTarget}</h1>;\r\n  return (\r\n        <Moveable\r\n            target={document.querySelector(\".target\")}\r\n            container={null}\r\n            origin={true}\r\n\r\n            /* Resize event edges */\r\n            edge={false}\r\n\r\n            /* draggable */\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDragStart={({ target, clientX, clientY }) => {\r\n                console.log(\"onDragStart\", target);\r\n            }}\r\n            onDrag={({\r\n                target,\r\n                beforeDelta, beforeDist,\r\n                left, top,\r\n                right, bottom,\r\n                delta, dist,\r\n                transform,\r\n                clientX, clientY,\r\n            }: OnDrag) => {\r\n                console.log(\"onDrag left, top\", left, top);\r\n                // target.style.left = `${left}px`;\r\n                // target.style.top = `${top}px`;\r\n                console.log(\"onDrag translate\", dist);\r\n                target.style.transform = transform;\r\n            }}\r\n            onDragEnd={({ target, isDrag, clientX, clientY }) => {\r\n                console.log(\"onDragEnd\", target, isDrag);\r\n            }}\r\n\r\n            /* When resize or scale, keeps a ratio of the width, height. */\r\n            keepRatio={true}\r\n\r\n            /* resizable*/\r\n            /* Only one of resizable, scalable, warpable can be used. */\r\n            resizable={true}\r\n            throttleResize={0}\r\n            onResizeStart={({ target , clientX, clientY}) => {\r\n                console.log(\"onResizeStart\", target);\r\n            }}\r\n            onResize={({\r\n                target, width, height,\r\n                dist, delta, direction,\r\n                clientX, clientY,\r\n            }: OnResize) => {\r\n                console.log(\"onResize\", target);\r\n                delta[0] && (target.style.width = `${width}px`);\r\n                delta[1] && (target.style.height = `${height}px`);\r\n            }}\r\n            onResizeEnd={({ target, isDrag, clientX, clientY }) => {\r\n                console.log(\"onResizeEnd\", target, isDrag);\r\n            }}\r\n\r\n            /* scalable */\r\n            /* Only one of resizable, scalable, warpable can be used. */\r\n            scalable={true}\r\n            throttleScale={0}\r\n            onScaleStart={({ target, clientX, clientY }) => {\r\n                console.log(\"onScaleStart\", target);\r\n            }}\r\n            onScale={({\r\n                target, scale, dist, delta, transform,\r\n                clientX, clientY,\r\n            }: OnScale) => {\r\n                console.log(\"onScale scale\", scale);\r\n                target.style.transform = transform;\r\n            }}\r\n            onScaleEnd={({ target, isDrag, clientX, clientY }) => {\r\n                console.log(\"onScaleEnd\", target, isDrag);\r\n            }}\r\n\r\n            /* rotatable */\r\n            rotatable={true}\r\n            throttleRotate={0}\r\n            onRotateStart={({ target, clientX, clientY }) => {\r\n                console.log(\"onRotateStart\", target);\r\n            }}\r\n            onRotate={({\r\n                target,\r\n                delta, dist,\r\n                transform,\r\n                clientX, clientY,\r\n            }: onRotate) => {\r\n                console.log(\"onRotate\", dist);\r\n                target.style.transform = transform;\r\n            }}\r\n            onRotateEnd={({ target, isDrag, clientX, clientY }) => {\r\n                console.log(\"onRotateEnd\", target, isDrag);\r\n            }}\r\n\r\n            /* warpable */\r\n            /* Only one of resizable, scalable, warpable can be used. */\r\n            /*\r\n            this.matrix = [\r\n                1, 0, 0, 0,\r\n                0, 1, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1,\r\n            ]\r\n            */\r\n            warpable={true}\r\n            onWarpStart={({ target, clientX, clientY }) => {\r\n                console.log(\"onWarpStart\", target);\r\n            }}\r\n            onWarp={({\r\n                target,\r\n                clientX,\r\n                clientY,\r\n                delta,\r\n                dist,\r\n                multiply,\r\n                transform,\r\n            }) => {\r\n                console.log(\"onWarp\", target);\r\n                // target.style.transform = transform;\r\n                this.matrix = multiply(this.matrix, delta);\r\n                target.style.transform = `matrix3d(${this.matrix.join(\",\")})`;\r\n            }}\r\n            onWarpEnd={({ target, isDrag, clientX, clientY }) => {\r\n                console.log(\"onWarpEnd\", target, isDrag);\r\n            }}\r\n\r\n            // Enabling pinchable lets you use events that\r\n            // can be used in draggable, resizable, scalable, and rotateable.\r\n            pinchable={true}\r\n            onPinchStart={({ target, clientX, clientY, datas }) => {\r\n                // pinchStart event occur before dragStart, rotateStart, scaleStart, resizeStart\r\n                console.log(\"onPinchStart\");\r\n            }}\r\n            onPinch={({ target, clientX, clientY, datas }) => {\r\n                // pinch event occur before drag, rotate, scale, resize\r\n                console.log(\"onPinch\");\r\n            }}\r\n            onPinchEnd={({ isDrag, target, clientX, clientY, datas }) => {\r\n                // pinchEnd event occur before dragEnd, rotateEnd, scaleEnd, resizeEnd\r\n                console.log(\"onPinchEnd\");\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CarUIMoveable;\r\n"]},"metadata":{},"sourceType":"module"}