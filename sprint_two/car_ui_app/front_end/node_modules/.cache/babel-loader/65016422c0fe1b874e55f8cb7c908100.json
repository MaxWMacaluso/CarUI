{"ast":null,"code":"var _jsxFileName = \"I:\\\\Team-Matrix\\\\sprint_two\\\\car_ui_app\\\\src\\\\components\\\\CarUIMoveable.js\";\nimport React, { Component } from 'react';\nimport Moveable from \"react-moveable\";\nexport default class CarUIMoveable extends Component {\n  //<h1>{moveableTarget}</h1>;\n  render() {\n    return /*#__PURE__*/React.createElement(Moveable, {\n      target: document.querySelector(\".target\"),\n      container: null,\n      origin: true\n      /* Resize event edges */\n      ,\n      edge: false\n      /* draggable */\n      ,\n      draggable: true,\n      throttleDrag: 0,\n      onDragStart: ({\n        target,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onDragStart\", target);\n      },\n      onDrag: ({\n        target,\n        beforeDelta,\n        beforeDist,\n        left,\n        top,\n        right,\n        bottom,\n        delta,\n        dist,\n        transform,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onDrag left, top\", left, top); // target.style.left = `${left}px`;\n        // target.style.top = `${top}px`;\n\n        console.log(\"onDrag translate\", dist);\n        target.style.transform = transform;\n      },\n      onDragEnd: ({\n        target,\n        isDrag,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onDragEnd\", target, isDrag);\n      }\n      /* When resize or scale, keeps a ratio of the width, height. */\n      ,\n      keepRatio: true\n      /* resizable*/\n\n      /* Only one of resizable, scalable, warpable can be used. */\n      ,\n      resizable: true,\n      throttleResize: 0,\n      onResizeStart: ({\n        target,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onResizeStart\", target);\n      },\n      onResize: ({\n        target,\n        width,\n        height,\n        dist,\n        delta,\n        direction,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onResize\", target);\n        delta[0] && (target.style.width = `${width}px`);\n        delta[1] && (target.style.height = `${height}px`);\n      },\n      onResizeEnd: ({\n        target,\n        isDrag,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onResizeEnd\", target, isDrag);\n      }\n      /* scalable */\n\n      /* Only one of resizable, scalable, warpable can be used. */\n      ,\n      scalable: true,\n      throttleScale: 0,\n      onScaleStart: ({\n        target,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onScaleStart\", target);\n      },\n      onScale: ({\n        target,\n        scale,\n        dist,\n        delta,\n        transform,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onScale scale\", scale);\n        target.style.transform = transform;\n      },\n      onScaleEnd: ({\n        target,\n        isDrag,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onScaleEnd\", target, isDrag);\n      }\n      /* rotatable */\n      ,\n      rotatable: true,\n      throttleRotate: 0,\n      onRotateStart: ({\n        target,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onRotateStart\", target);\n      },\n      onRotate: ({\n        target,\n        delta,\n        dist,\n        transform,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onRotate\", dist);\n        target.style.transform = transform;\n      },\n      onRotateEnd: ({\n        target,\n        isDrag,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onRotateEnd\", target, isDrag);\n      }\n      /* warpable */\n\n      /* Only one of resizable, scalable, warpable can be used. */\n\n      /*\r\n      this.matrix = [\r\n          1, 0, 0, 0,\r\n          0, 1, 0, 0,\r\n          0, 0, 1, 0,\r\n          0, 0, 0, 1,\r\n      ]\r\n      */\n      ,\n      warpable: true,\n      onWarpStart: ({\n        target,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onWarpStart\", target);\n      },\n      onWarp: ({\n        target,\n        clientX,\n        clientY,\n        delta,\n        dist,\n        multiply,\n        transform\n      }) => {\n        console.log(\"onWarp\", target); // target.style.transform = transform;\n\n        this.matrix = multiply(this.matrix, delta);\n        target.style.transform = `matrix3d(${this.matrix.join(\",\")})`;\n      },\n      onWarpEnd: ({\n        target,\n        isDrag,\n        clientX,\n        clientY\n      }) => {\n        console.log(\"onWarpEnd\", target, isDrag);\n      } // Enabling pinchable lets you use events that\n      // can be used in draggable, resizable, scalable, and rotateable.\n      ,\n      pinchable: true,\n      onPinchStart: ({\n        target,\n        clientX,\n        clientY,\n        datas\n      }) => {\n        // pinchStart event occur before dragStart, rotateStart, scaleStart, resizeStart\n        console.log(\"onPinchStart\");\n      },\n      onPinch: ({\n        target,\n        clientX,\n        clientY,\n        datas\n      }) => {\n        // pinch event occur before drag, rotate, scale, resize\n        console.log(\"onPinch\");\n      },\n      onPinchEnd: ({\n        isDrag,\n        target,\n        clientX,\n        clientY,\n        datas\n      }) => {\n        // pinchEnd event occur before dragEnd, rotateEnd, scaleEnd, resizeEnd\n        console.log(\"onPinchEnd\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["I:/Team-Matrix/sprint_two/car_ui_app/src/components/CarUIMoveable.js"],"names":["React","Component","Moveable","CarUIMoveable","render","document","querySelector","target","clientX","clientY","console","log","beforeDelta","beforeDist","left","top","right","bottom","delta","dist","transform","style","isDrag","width","height","direction","scale","multiply","matrix","join","datas"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Moveable from \"react-moveable\";\r\n\r\n\r\nexport default class CarUIMoveable extends Component { //<h1>{moveableTarget}</h1>;\r\n  render(){\r\n    return (\r\n      <Moveable\r\n          target={document.querySelector(\".target\")}\r\n          container={null}\r\n          origin={true}\r\n\r\n          /* Resize event edges */\r\n          edge={false}\r\n\r\n          /* draggable */\r\n          draggable={true}\r\n          throttleDrag={0}\r\n          onDragStart={({ target, clientX, clientY }) => {\r\n              console.log(\"onDragStart\", target);\r\n          }}\r\n          onDrag={({\r\n              target,\r\n              beforeDelta, beforeDist,\r\n              left, top,\r\n              right, bottom,\r\n              delta, dist,\r\n              transform,\r\n              clientX, clientY,\r\n          }: OnDrag) => {\r\n              console.log(\"onDrag left, top\", left, top);\r\n              // target.style.left = `${left}px`;\r\n              // target.style.top = `${top}px`;\r\n              console.log(\"onDrag translate\", dist);\r\n              target.style.transform = transform;\r\n          }}\r\n          onDragEnd={({ target, isDrag, clientX, clientY }) => {\r\n              console.log(\"onDragEnd\", target, isDrag);\r\n          }}\r\n\r\n          /* When resize or scale, keeps a ratio of the width, height. */\r\n          keepRatio={true}\r\n\r\n          /* resizable*/\r\n          /* Only one of resizable, scalable, warpable can be used. */\r\n          resizable={true}\r\n          throttleResize={0}\r\n          onResizeStart={({ target , clientX, clientY}) => {\r\n              console.log(\"onResizeStart\", target);\r\n          }}\r\n          onResize={({\r\n              target, width, height,\r\n              dist, delta, direction,\r\n              clientX, clientY,\r\n          }: OnResize) => {\r\n              console.log(\"onResize\", target);\r\n              delta[0] && (target.style.width = `${width}px`);\r\n              delta[1] && (target.style.height = `${height}px`);\r\n          }}\r\n          onResizeEnd={({ target, isDrag, clientX, clientY }) => {\r\n              console.log(\"onResizeEnd\", target, isDrag);\r\n          }}\r\n\r\n          /* scalable */\r\n          /* Only one of resizable, scalable, warpable can be used. */\r\n          scalable={true}\r\n          throttleScale={0}\r\n          onScaleStart={({ target, clientX, clientY }) => {\r\n              console.log(\"onScaleStart\", target);\r\n          }}\r\n          onScale={({\r\n              target, scale, dist, delta, transform,\r\n              clientX, clientY,\r\n          }: OnScale) => {\r\n              console.log(\"onScale scale\", scale);\r\n              target.style.transform = transform;\r\n          }}\r\n          onScaleEnd={({ target, isDrag, clientX, clientY }) => {\r\n              console.log(\"onScaleEnd\", target, isDrag);\r\n          }}\r\n\r\n          /* rotatable */\r\n          rotatable={true}\r\n          throttleRotate={0}\r\n          onRotateStart={({ target, clientX, clientY }) => {\r\n              console.log(\"onRotateStart\", target);\r\n          }}\r\n          onRotate={({\r\n              target,\r\n              delta, dist,\r\n              transform,\r\n              clientX, clientY,\r\n          }: onRotate) => {\r\n              console.log(\"onRotate\", dist);\r\n              target.style.transform = transform;\r\n          }}\r\n          onRotateEnd={({ target, isDrag, clientX, clientY }) => {\r\n              console.log(\"onRotateEnd\", target, isDrag);\r\n          }}\r\n\r\n          /* warpable */\r\n          /* Only one of resizable, scalable, warpable can be used. */\r\n          /*\r\n          this.matrix = [\r\n              1, 0, 0, 0,\r\n              0, 1, 0, 0,\r\n              0, 0, 1, 0,\r\n              0, 0, 0, 1,\r\n          ]\r\n          */\r\n          warpable={true}\r\n          onWarpStart={({ target, clientX, clientY }) => {\r\n              console.log(\"onWarpStart\", target);\r\n          }}\r\n          onWarp={({\r\n              target,\r\n              clientX,\r\n              clientY,\r\n              delta,\r\n              dist,\r\n              multiply,\r\n              transform,\r\n          }) => {\r\n              console.log(\"onWarp\", target);\r\n              // target.style.transform = transform;\r\n              this.matrix = multiply(this.matrix, delta);\r\n              target.style.transform = `matrix3d(${this.matrix.join(\",\")})`;\r\n          }}\r\n          onWarpEnd={({ target, isDrag, clientX, clientY }) => {\r\n              console.log(\"onWarpEnd\", target, isDrag);\r\n          }}\r\n\r\n          // Enabling pinchable lets you use events that\r\n          // can be used in draggable, resizable, scalable, and rotateable.\r\n          pinchable={true}\r\n          onPinchStart={({ target, clientX, clientY, datas }) => {\r\n              // pinchStart event occur before dragStart, rotateStart, scaleStart, resizeStart\r\n              console.log(\"onPinchStart\");\r\n          }}\r\n          onPinch={({ target, clientX, clientY, datas }) => {\r\n              // pinch event occur before drag, rotate, scale, resize\r\n              console.log(\"onPinch\");\r\n          }}\r\n          onPinchEnd={({ isDrag, target, clientX, clientY, datas }) => {\r\n              // pinchEnd event occur before dragEnd, rotateEnd, scaleEnd, resizeEnd\r\n              console.log(\"onPinchEnd\");\r\n          }}\r\n      />\r\n  );\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}