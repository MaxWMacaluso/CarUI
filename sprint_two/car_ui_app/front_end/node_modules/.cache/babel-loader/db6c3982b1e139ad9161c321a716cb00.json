{"ast":null,"code":"var _jsxFileName = \"/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/router/appRouter.js\";\n//NOTES:\n//In JSX, class is replaced by className\n//JS in curly braces\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { createBrowserHistory } from 'history';\nimport { Route, Switch, Router } from 'react-router-dom'; //Pages\n\nimport loginPage from '../pages/login_page'; //Done\n\nimport createProfilePage from '../pages/create_profile'; //Done\n\nimport CarUIPage from '../pages/car_ui';\nimport notFoundPage from '../pages/404'; //Done\n\nimport Header from '../components/Header';\nimport Profile from '../pages/profile_page';\nimport Logout from '../components/Logout';\nimport Loading from '../components/Loading';\nexport const history = createBrowserHistory();\n\nconst AppRouter = ({\n  auth\n}) => {\n  // const user_token = localStorage.getItem('user_token');;\n  // if (_.isEmpty(auth.token) && !_.isEmpty(localStorage.getItem('user_token'))) {\n  //   auth.token = localStorage.getItem('user_token');\n  // }\n  // {!_.isEmpty(user_token) && <Header />}\n  return /*#__PURE__*/React.createElement(Router, {\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, !_.isEmpty(auth.token) && /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: LoginPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register_user\",\n    component: createProfilePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/profile\",\n    component: Profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/logout\",\n    component: Logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/car_ui\",\n    component: CarUIPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/404\",\n    component: notFoundPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })))));\n}; // const mapStateToProps = (state) => ({\n//   auth: state.auth\n// })\n\n\nconst mapStateToProps = state => {\n  if (_.isEmpty(state.auth.token) && !_.isEmpty(localStorage.getItem('user_token'))) {\n    state.auth.token = localStorage.getItem('user_token');\n  }\n\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(AppRouter); //Experiment-----------------------------\n// import React, {useState, useEffect} from 'react';\n// import FileUpload from './components/FileUpload';\n//\n// function App() {\n//   const [imgs, setImgs] = useState(false);\n//   useEffect(() => {\n//     getImg();\n//   }, []);\n//\n//   function getImg(profile_id = null) {\n//     console.log(`http://localhost:3001/image?profile_id=${profile_id}`)\n//     fetch(`http://localhost:3001/image?profile_id=${profile_id}`)\n//       .then(response => {\n//         return response.text();\n//       })\n//       .then(data => {\n//         setImgs(data);\n//       });\n//   }\n//\n//   function createImg() {\n//     // let img_id = prompt('Enter image id');\n//     let img_source = prompt('Enter image source');\n//     let img_transform = prompt('Enter image transform');\n//     let img_transform_origin = prompt('Enter transform origin');\n//     let profile_id = prompt('Enter profile id');\n//     fetch('http://localhost:3001/image', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({img_source, img_transform, img_transform_origin, profile_id}),\n//     })\n//       .then(response => {\n//         return response.text();\n//       })\n//       .then(data => {\n//         alert(data);\n//         getImg();\n//       });\n//   }\n//\n//   function deleteImg() {\n//     let img_id = prompt('Enter image id');\n//     fetch('http://localhost:3001/image/${img_id}', {\n//       method: 'DELETE',\n//     })\n//       .then(response => {\n//         return response.text();\n//       })\n//       .then(data => {\n//         alert(data);\n//         getImg();\n//       });\n//   }\n//\n//   return (\n//     <div>\n//       {imgs ? imgs : 'There is no image data available'}\n//       <br />\n//       <button onClick={createImg}>Add image</button>\n//       <br />\n//       <button onClick={deleteImg}>Delete image</button>\n//       <br/><br/><br/>\n//       <FileUpload/>\n//     </div>\n//   );\n// }\n//\n// export default App;","map":{"version":3,"sources":["/Users/maxmacaluso/Desktop/General/Academic/CU/CS/4830HMI/Team-Matrix/sprint_two/car_ui_app/front_end/src/router/appRouter.js"],"names":["React","connect","_","createBrowserHistory","Route","Switch","Router","loginPage","createProfilePage","CarUIPage","notFoundPage","Header","Profile","Logout","Loading","history","AppRouter","auth","isEmpty","token","LoginPage","mapStateToProps","state","localStorage","getItem"],"mappings":";AAAA;AACI;AACA;AAEJ,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,kBAAtC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,qBAAtB,C,CAA4C;;AAC5C,OAAOC,iBAAP,MAA8B,yBAA9B,C,CAAwD;;AACxD,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,YAAP,MAAyB,cAAzB,C,CAAyC;;AACzC,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAIA,OAAO,MAAMC,OAAO,GAAGZ,oBAAoB,EAApC;;AAEP,MAAMa,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B;AAEA;AACA;AACA;AACA;AACA,sBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACb,CAAC,CAACgB,OAAF,CAAUD,IAAI,CAACE,KAAf,CAAD,iBAA2B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,eAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,SAAS,EAAEZ,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEI,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEJ,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eASI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,SAAS,EAAEC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADA,CAHF,CADF,CADF;AAsBD,CA7BD,C,CA+BA;AACA;AACA;;;AAEA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjC,MAAIpB,CAAC,CAACgB,OAAF,CAAUI,KAAK,CAACL,IAAN,CAAWE,KAArB,KAA+B,CAACjB,CAAC,CAACgB,OAAF,CAAUK,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAV,CAApC,EAAmF;AACjFF,IAAAA,KAAK,CAACL,IAAN,CAAWE,KAAX,GAAmBI,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AACD;;AACD,SAAQ;AACRP,IAAAA,IAAI,EAAEK,KAAK,CAACL;AADJ,GAAR;AAGD,CAPD;;AASA,eAAehB,OAAO,CAACoB,eAAD,CAAP,CAAyBL,SAAzB,CAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//NOTES:\n    //In JSX, class is replaced by className\n    //JS in curly braces\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { createBrowserHistory } from 'history';\nimport { Route, Switch, Router } from 'react-router-dom';\n\n//Pages\nimport loginPage from '../pages/login_page' //Done\nimport createProfilePage from '../pages/create_profile' //Done\nimport CarUIPage from '../pages/car_ui'\nimport notFoundPage from '../pages/404'; //Done\nimport Header from '../components/Header';\nimport Profile from '../pages/profile_page';\nimport Logout from '../components/Logout';\nimport Loading from '../components/Loading';\n\n\n\nexport const history = createBrowserHistory();\n\nconst AppRouter = ({ auth }) => {\n  // const user_token = localStorage.getItem('user_token');;\n\n  // if (_.isEmpty(auth.token) && !_.isEmpty(localStorage.getItem('user_token'))) {\n  //   auth.token = localStorage.getItem('user_token');\n  // }\n  // {!_.isEmpty(user_token) && <Header />}\n  return (\n    <Router history={history}>\n      <div>\n      {!_.isEmpty(auth.token) &&  <Header/>}\n\n        <div className=\"container\">\n        <Switch>\n\n            <Route exact path=\"/\" component={LoginPage}/>\n            <Route path=\"/register_user\" component={createProfilePage}/>\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/car_ui\" component={CarUIPage}/>\n\n            {/* Goes here if none are triggered; AT BOTTOM */}\n            <Route exact path='/404' component={notFoundPage}/>\n            {/* <Redirect to='/404' /> */}\n        </Switch>\n      </div>\n    </div>\n    </Router>\n  );\n};\n\n// const mapStateToProps = (state) => ({\n//   auth: state.auth\n// })\n\nconst mapStateToProps = (state) => {\n  if (_.isEmpty(state.auth.token) && !_.isEmpty(localStorage.getItem('user_token'))) {\n    state.auth.token = localStorage.getItem('user_token');\n  }\n  return ({\n  auth: state.auth\n});\n}\n\nexport default connect(mapStateToProps)(AppRouter);\n\n//Experiment-----------------------------\n\n// import React, {useState, useEffect} from 'react';\n// import FileUpload from './components/FileUpload';\n//\n// function App() {\n//   const [imgs, setImgs] = useState(false);\n//   useEffect(() => {\n//     getImg();\n//   }, []);\n//\n//   function getImg(profile_id = null) {\n//     console.log(`http://localhost:3001/image?profile_id=${profile_id}`)\n//     fetch(`http://localhost:3001/image?profile_id=${profile_id}`)\n//       .then(response => {\n//         return response.text();\n//       })\n//       .then(data => {\n//         setImgs(data);\n//       });\n//   }\n//\n//   function createImg() {\n//     // let img_id = prompt('Enter image id');\n//     let img_source = prompt('Enter image source');\n//     let img_transform = prompt('Enter image transform');\n//     let img_transform_origin = prompt('Enter transform origin');\n//     let profile_id = prompt('Enter profile id');\n//     fetch('http://localhost:3001/image', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({img_source, img_transform, img_transform_origin, profile_id}),\n//     })\n//       .then(response => {\n//         return response.text();\n//       })\n//       .then(data => {\n//         alert(data);\n//         getImg();\n//       });\n//   }\n//\n//   function deleteImg() {\n//     let img_id = prompt('Enter image id');\n//     fetch('http://localhost:3001/image/${img_id}', {\n//       method: 'DELETE',\n//     })\n//       .then(response => {\n//         return response.text();\n//       })\n//       .then(data => {\n//         alert(data);\n//         getImg();\n//       });\n//   }\n//\n//   return (\n//     <div>\n//       {imgs ? imgs : 'There is no image data available'}\n//       <br />\n//       <button onClick={createImg}>Add image</button>\n//       <br />\n//       <button onClick={deleteImg}>Delete image</button>\n//       <br/><br/><br/>\n//       <FileUpload/>\n//     </div>\n//   );\n// }\n//\n// export default App;\n"]},"metadata":{},"sourceType":"module"}